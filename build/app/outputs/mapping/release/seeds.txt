io.flutter.view.AccessibilityBridge: int access$1172(io.flutter.view.AccessibilityBridge,int)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: FirebaseInstallationServiceClient(android.content.Context,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)
io.flutter.plugins.firebase.messaging.R$styleable: int[] Capability
com.google.firebase.R$style: int TextAppearance_Compat_Notification_Line2
com.google.firebase.iid.WakeLockHolder: void completeWakefulIntent(android.content.Intent)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: java.lang.String TAG
com.google.firebase.ktx.R$styleable: int GradientColor_android_centerY
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldAttachEngineToActivity()
com.google.firebase.analytics.connector.internal.zze: void zzc()
com.google.firebase.installations.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.concurrent.Executor uiThreadExecutor
io.flutter.embedding.android.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_METHOD
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: java.lang.Object writeReplace()
com.google.firebase.iid.WithinAppServiceConnection$BindRequest: android.content.Intent intent
io.flutter.embedding.engine.FlutterEngineCache
io.flutter.plugin.common.MethodChannel: java.lang.String name
androidx.savedstate.Recreator
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1
androidx.fragment.app.Fragment: java.lang.String getTag()
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar: java.util.List getComponents()
io.flutter.plugins.sharedpreferences.R$attr: int fontStyle
io.flutter.view.FlutterView$ViewportMetrics: int systemGestureInsetBottom
io.flutter.app.FlutterPluginRegistry: io.flutter.view.FlutterNativeView access$200(io.flutter.app.FlutterPluginRegistry)
com.google.firebase.iid.FcmBroadcastProcessor: com.google.android.gms.tasks.Task startMessagingService(android.content.Context,android.content.Intent)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager windowManager
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_centerColor
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar getInstance()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
androidx.fragment.app.FragmentActivity: java.lang.String FRAGMENTS_TAG
io.flutter.plugins.connectivity.R$id: int action_image
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String FROM
com.google.firebase.encoders.json.JsonDataEncoderBuilder: java.util.Map access$100(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
com.google.firebase.FirebaseCommonRegistrar$$Lambda$6: com.google.firebase.FirebaseCommonRegistrar$$Lambda$6 instance
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.firebase.encoders.json.BuildConfig: java.lang.String VERSION_NAME
com.google.firebase.datatransport.R$color: R$color()
com.google.firebase.installations.BuildConfig
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat SDK
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: java.lang.Object create(com.google.firebase.components.ComponentContainer)
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String LOGIN
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$0: java.util.concurrent.Executor $instance
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_GROUP_METHOD
android.support.v4.media.session.PlaybackStateCompat$CustomAction
io.flutter.embedding.engine.systemchannels.RestorationChannel: void clearData()
com.google.firebase.components.Dependency: java.lang.Class getInterface()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix)
io.flutter.plugin.platform.PlatformPlugin: void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List)
com.google.firebase.encoders.json.BuildConfig: int VERSION_CODE
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek valueOf(java.lang.String)
io.flutter.embedding.android.KeyboardManager: java.lang.String TAG
com.google.firebase.FirebaseException
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Messaging
com.google.firebase.installations.R
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetRight
io.flutter.embedding.android.FlutterActivity: void onCreate(android.os.Bundle)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_GROUP_METHOD
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: java.lang.Object valuePublishedByPlugin(java.lang.String)
com.google.firebase.R$style: R$style()
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
io.flutter.plugins.sharedpreferences.R$style
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_ENABLE_STATE_RESTORATION
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String START_DATE
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: PersistedInstallationEntry$Builder()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.String authToken
io.flutter.plugins.urllauncher.R$dimen: int compat_button_inset_horizontal_material
com.google.firebase.datatransport.R$dimen
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo)
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String AD_IMPRESSION
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_29
com.google.firebase.components.ComponentRuntime: java.util.Map components
com.google.android.gms.internal.measurement.zzdo
io.flutter.plugins.connectivity.R$style: R$style()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object writeReplace()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.google.firebase.inject.Deferred: void whenAvailable(com.google.firebase.inject.Deferred$DeferredHandler)
android.support.v4.media.AudioAttributesCompatParcelizer
com.google.firebase.messaging.FirebaseMessaging: boolean deliveryMetricsExportToBigQueryEnabled()
com.google.firebase.ktx.FirebaseKt: com.google.firebase.FirebaseApp initialize(com.google.firebase.ktx.Firebase,android.content.Context)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getBody()
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,java.lang.Object)
com.google.firebase.R$styleable: int GradientColor_android_type
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager getWindowManager()
io.flutter.embedding.android.FlutterTextureView
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.plugin.common.StandardMethodCodec: StandardMethodCodec(io.flutter.plugin.common.StandardMessageCodec)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number downTime
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets
com.google.firebase.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.google.firebase.BuildConfig: java.lang.String FLAVOR
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemOverlays(java.util.List)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderAuthority
io.flutter.plugins.firebase.messaging.R$id: int adjust_width
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void popRoute()
com.google.firebase.messaging.MessagingAnalytics$$Lambda$0: com.google.android.datatransport.Transformer $instance
com.google.firebase.installations.GetAuthTokenListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)
io.flutter.view.AccessibilityBridge$4: AccessibilityBridge$4(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager)
io.flutter.plugins.connectivity.R$attr: R$attr()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LARGE_ICON_ERROR_CODE
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: com.google.firebase.analytics.connector.AnalyticsConnector getInstance(com.google.firebase.FirebaseApp,android.content.Context,com.google.firebase.events.Subscriber)
io.flutter.view.FlutterMain$Settings: java.lang.String getLogTag()
io.flutter.plugins.connectivity.R$dimen: int compat_notification_large_icon_max_width
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
com.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: java.lang.Object get()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3400(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_MESSAGE_CHANNEL
com.google.firebase.installations.R$string: int common_google_play_services_unknown_issue
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: void run()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: android.content.Context activeContext()
com.google.firebase.installations.interop.R$color: R$color()
io.flutter.app.FlutterPlayStoreSplitApplication
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int access$200(long)
io.flutter.plugins.sharedpreferences.R$layout: int notification_template_icon_group
com.google.firebase.BuildConfig: java.lang.String VERSION_NAME
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
io.flutter.view.FlutterRunArguments: FlutterRunArguments()
com.google.firebase.analytics.connector.internal.zzc: java.util.List zzb
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: com.dexterous.flutterlocalnotifications.models.PersonDetails person
io.flutter.embedding.engine.systemchannels.TextInputChannel$1
com.google.firebase.R$drawable: int notification_template_icon_bg
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus REGISTER_ERROR
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getTitle()
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_endY
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
io.flutter.plugins.urllauncher.R$id: int normal
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus DENIED
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$5
com.google.firebase.messaging.SendException: int errorCode
com.google.firebase.FirebaseApp: void delete()
io.flutter.view.AccessibilityBridge: void access$1300(io.flutter.view.AccessibilityBridge)
com.google.firebase.installations.AwaitListener: boolean await(long,java.util.concurrent.TimeUnit)
io.flutter.plugins.firebase.core.R$id: int forever
io.flutter.embedding.android.FlutterSplashView$SavedState$1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VIBRATION_PATTERN
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_17
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void destroy()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl registry
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_dark
com.google.firebase.installations.interop.R$styleable: int GradientColorItem_android_color
com.google.firebase.ktx.R$styleable: int GradientColor_android_startX
io.flutter.plugin.editing.TextInputPlugin$1: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.firebase.messaging.TopicsSyncTask: long nextDelaySeconds
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.plugins.connectivity.R$id: int text
com.google.firebase.ktx.R$attr: int fontProviderPackage
android.support.v4.media.session.PlaybackStateCompat
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
com.google.firebase.FirebaseOptions: FirebaseOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.firebase.FirebaseOptions$1)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getChildId
com.google.firebase.installations.R$dimen: int notification_small_icon_size_as_large
com.google.firebase.iid.FcmBroadcastProcessor: java.lang.Integer lambda$bindToMessagingService$3$FcmBroadcastProcessor(com.google.android.gms.tasks.Task)
io.flutter.plugin.common.MethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
com.google.firebase.installations.R$drawable: int notification_bg_low_normal
io.flutter.plugins.connectivity.R$dimen: int notification_large_icon_width
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl access$100(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: android.content.Context context
com.google.firebase.messaging.FirebaseMessaging$AutoInit: com.google.firebase.events.EventHandler dataCollectionDefaultChangeEventHandler
io.flutter.plugin.common.PluginRegistry$Registrar: java.lang.String lookupKeyForAsset(java.lang.String,java.lang.String)
com.google.firebase.messaging.BuildConfig
io.flutter.plugin.common.JSONMethodCodec: JSONMethodCodec()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS
com.google.firebase.installations.R$attr: int fontProviderCerts
com.google.firebase.FirebaseError: int ERROR_INTERNAL_ERROR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_WEEKLY_AT_DAY_AND_TIME_METHOD
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean isValidDrawableResource(android.content.Context,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
io.flutter.plugin.common.MessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.plugins.pathprovider.R$attr: int fontProviderPackage
io.flutter.embedding.android.FlutterSplashView$SavedState$1: FlutterSplashView$SavedState$1()
com.google.firebase.R: R()
com.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)
com.google.firebase.installations.FirebaseInstallations$$Lambda$2: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations,boolean)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
io.flutter.app.FlutterPluginRegistry: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
com.google.firebase.datatransport.TransportRegistrar$$Lambda$1: TransportRegistrar$$Lambda$1()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler
io.flutter.plugin.common.StandardMethodCodec
io.flutter.plugins.sharedpreferences.R$dimen: int notification_right_icon_size
com.google.firebase.analytics.zzc: void zzl(java.lang.String)
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit valueOf(java.lang.String)
io.flutter.embedding.android.RenderMode: RenderMode(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: PlatformChannel$ClipboardContentFormat(java.lang.String,int,java.lang.String)
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
com.google.firebase.components.Dependency: int hashCode()
com.google.firebase.iid.Metadata: android.content.pm.PackageInfo getPackageInfo(java.lang.String)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.firebase.messaging.ContextHolder: ContextHolder()
com.google.firebase.installations.remote.InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$Builder builder()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void setPluginRegistrant(io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean waitForRestorationData
io.flutter.plugins.pathprovider.R$color: R$color()
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionExtent
com.google.firebase.installations.interop.R$dimen: int notification_right_icon_size
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: android.content.SharedPreferences sharedPreferences
io.flutter.plugins.firebase.messaging.R$drawable: R$drawable()
io.flutter.embedding.android.DrawableSplashScreen: android.graphics.drawable.Drawable drawable
com.google.firebase.FirebaseApp$$Lambda$1: android.content.Context arg$2
com.google.android.gms.internal.measurement.zzeg: boolean zzi
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] $VALUES
io.flutter.plugins.pathprovider.R$id: int line1
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String LEVEL_NAME
androidx.fragment.app.Fragment: void performPause()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: NotificationChannelDetails()
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: FlutterNativeView$EngineLifecycleListenerImpl(io.flutter.view.FlutterNativeView,io.flutter.view.FlutterNativeView$1)
com.google.firebase.installations.interop.R$attr: int ttcIndex
org.threeten.bp.chrono.ThaiBuddhistEra: java.lang.Object writeReplace()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_CATEGORY2
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFirstFrameRendered
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzv)
io.flutter.plugins.firebase.core.R$id: int line3
com.google.firebase.analytics.connector.internal.zzg: void zzb(java.util.Set)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: PlatformViewsChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.common.BasicMessageChannel$MessageHandler: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding
com.google.firebase.datatransport.R$dimen: int notification_right_icon_size
io.flutter.plugins.pathprovider.R$id: int blocking
io.flutter.view.FlutterMain: void ensureInitializationComplete(android.content.Context,java.lang.String[])
com.google.android.gms.internal.measurement.zzeb: com.google.android.gms.internal.measurement.zzhz zze
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter instance
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_FLUTTER_ASSETS_DIR
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
com.google.firebase.messaging.CommonNotificationBuilder: CommonNotificationBuilder()
io.flutter.plugin.common.StandardMessageCodec
io.flutter.embedding.engine.dart.DartExecutor$1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableVibration
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String IMPORTANCE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String id
com.google.firebase.components.AbstractComponentContainer: AbstractComponentContainer()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ADDITIONAL_FLAGS
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String FULL_SCREEN_INTENT
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_20
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit[] values()
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ENABLE_JS_EXTRA
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_startY
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String PRIORITY_REDUCED_V19
com.google.firebase.ktx.R$drawable: int notification_action_background
com.google.firebase.installations.FirebaseInstallations: void lambda$getToken$1(com.google.firebase.installations.FirebaseInstallations,boolean)
com.google.android.gms.internal.measurement.zzdj: int zzY
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newTopicsSyncExecutor()
com.google.firebase.components.Component$1
io.flutter.app.FlutterPluginRegistry: io.flutter.plugin.platform.PlatformViewsController access$400(io.flutter.app.FlutterPluginRegistry)
io.flutter.embedding.engine.systemchannels.RestorationChannel
androidx.fragment.app.FragmentActivity: java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3402(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
io.flutter.plugin.editing.TextInputPlugin: TextInputPlugin(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
com.google.firebase.iid.GmsRpc: java.lang.String ERROR_INTERNAL_SERVER_ERROR
io.flutter.app.FlutterFragmentActivity: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
org.threeten.bp.Year: java.lang.Object writeReplace()
io.flutter.plugins.firebase.core.R$styleable: int Capability_queryPatterns
com.google.firebase.messaging.TopicOperation: TopicOperation(java.lang.String,java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViewParent
com.google.firebase.events.Event: Event(java.lang.Class,java.lang.Object)
com.google.android.gms.internal.measurement.zzhs: java.util.Map zza
io.flutter.plugin.editing.ListenableEditingState: java.lang.String TAG
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
com.google.firebase.installations.BuildConfig: java.lang.String FLAVOR
com.google.firebase.components.InvalidRegistrarException: InvalidRegistrarException(java.lang.String)
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String ADD_TO_WISHLIST
io.flutter.view.FlutterView: android.view.inputmethod.InputMethodManager mImm
io.flutter.plugins.firebase.core.R$color: int androidx_core_ripple_material_light
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: android.content.Context context()
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_normal_pressed
io.flutter.embedding.android.KeyChannelResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder)
com.google.firebase.analytics.connector.internal.zzc: java.lang.String zzl(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Map globalRegistrarMap
io.flutter.plugin.platform.VirtualDisplayController: android.content.Context context
io.flutter.embedding.android.FlutterFragment: void onAttach(android.content.Context)
com.google.firebase.installations.R$dimen: int notification_main_column_padding_top
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_13
io.flutter.plugins.firebase.messaging.R$styleable: int[] FontFamilyFont
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void setActivity(android.app.Activity)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firebase.installations.interop.R$style: int TextAppearance_Compat_Notification_Info
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$2: DefaultHeartBeatInfo$$Lambda$2(com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding
com.google.firebase.installations.R$style
com.google.firebase.FirebaseApp: void checkNotDeleted()
io.flutter.plugins.firebase.messaging.R$attr: int buttonSize
com.google.firebase.messaging.TopicsSubscriber$$Lambda$0: TopicsSubscriber$$Lambda$0(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context)
com.google.firebase.installations.interop.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.plugins.urllauncher.R$id: int tag_unhandled_key_event_manager
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_12
io.flutter.plugins.firebase.messaging.R$attr: int font
com.google.firebase.installations.FirebaseInstallations$2: void unregister()
io.flutter.embedding.android.FlutterSplashView$3: io.flutter.embedding.android.FlutterSplashView this$0
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_LOCATION_ID
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
com.google.firebase.messaging.TopicOperation: java.util.regex.Pattern TOPIC_NAME_REGEXP
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_2
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newCachedSingleThreadExecutor(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.lang.String viewType
com.google.firebase.ktx.R$integer: R$integer()
com.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$1
io.flutter.view.AccessibilityBridge$4
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_startColor
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: byte[] val$data
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.firebase.components.OptionalProvider: com.google.firebase.components.OptionalProvider empty()
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int UNKNOWN
io.flutter.embedding.android.FlutterFragment: boolean shouldAttachEngineToActivity()
com.google.firebase.platforminfo.AutoValue_LibraryVersion: boolean equals(java.lang.Object)
com.google.firebase.datatransport.R$id: R$id()
com.google.firebase.analytics.connector.internal.zzg: com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener zzd(com.google.firebase.analytics.connector.internal.zzg)
com.google.firebase.FirebaseCommonRegistrar: java.lang.String DEVICE_MODEL
io.flutter.plugins.sharedpreferences.R$dimen: int notification_action_text_size
com.google.firebase.messaging.ImageDownload: void close()
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
io.flutter.app.FlutterActivityDelegate: void onStop()
com.google.firebase.messaging.RemoteMessage: int getOriginalPriority()
io.flutter.plugin.mouse.MouseCursorPlugin$1
com.google.firebase.components.Component: com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: boolean isSuccessfulResponseCode(int)
com.google.firebase.installations.AutoValue_InstallationTokenResult: com.google.firebase.installations.InstallationTokenResult$Builder toBuilder()
com.google.firebase.installations.local.PersistedInstallation: java.lang.String SETTINGS_FILE_NAME_PREFIX
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
com.google.firebase.components.ComponentRuntime: void lambda$processSetComponents$3(com.google.firebase.components.LazySet,com.google.firebase.inject.Provider)
com.google.firebase.datatransport.R$styleable: int GradientColorItem_android_color
com.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task startRpc(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$4: void encode(java.lang.Object,java.lang.Object)
com.google.firebase.ktx.R$dimen: int notification_content_margin_start
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SLIDER
androidx.fragment.app.Fragment: boolean isDetached()
io.flutter.view.FlutterView: void onPostResume()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String getDeferredComponentInstallState(int,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_dark_focused
com.google.firebase.messaging.RemoteMessage$Notification: boolean getDefaultVibrateSettings()
io.flutter.embedding.engine.renderer.FlutterRenderer$1
com.google.firebase.messaging.FirebaseMessaging$AutoInit: void setEnabled(boolean)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int direction
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_3
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void showSystemOverlays(java.util.List)
com.google.firebase.messaging.RemoteMessage$Notification: boolean getLocalOnly()
com.google.firebase.iid.FirebaseInstanceId$$Lambda$0: com.google.firebase.iid.FirebaseInstanceId arg$1
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
com.google.firebase.installations.interop.R$id: int action_container
androidx.fragment.app.Fragment: boolean isHideReplaced()
io.flutter.plugin.platform.PlatformPlugin$1
io.flutter.plugin.common.JSONMethodCodec
com.google.firebase.iid.ServiceStarter
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation
androidx.core.app.JobIntentService: boolean mInterruptIfStopped
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String LIST_IDENTIFIER
com.google.firebase.FirebaseCommonRegistrar: java.lang.String ANDROID_INSTALLER
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.util.Map jsonObjectToMap(org.json.JSONObject)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor
com.google.firebase.FirebaseApp: java.lang.Object LOCK
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.firebase.datatransport.TransportRegistrar$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()
com.google.firebase.R$attr: int ttcIndex
com.google.firebase.messaging.TopicsStore
androidx.activity.OnBackPressedCallback: OnBackPressedCallback(boolean)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder
com.google.firebase.R$id: int line3
com.google.firebase.iid.FcmBroadcastProcessor: com.google.firebase.iid.WithinAppServiceConnection getServiceConnection(android.content.Context,java.lang.String)
io.flutter.plugins.connectivity.R$attr: int queryPatterns
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: UrlLauncher$LaunchStatus(java.lang.String,int)
io.flutter.plugins.urllauncher.R$id: int tag_window_insets_animation_callback
io.flutter.plugins.sharedpreferences.R$integer: int status_bar_notification_info_maxnum
io.flutter.plugins.sharedpreferences.R$id: int tag_on_receive_content_listener
io.flutter.embedding.android.FlutterView: void sendViewportMetricsToFlutter()
com.google.firebase.FirebaseException: FirebaseException(java.lang.String,java.lang.Throwable)
com.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
com.google.firebase.installations.interop.R$drawable: int notification_template_icon_low_bg
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.FlutterJNI getFlutterJNI()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.R
io.flutter.view.FlutterNativeView: io.flutter.app.FlutterPluginRegistry getPluginRegistry()
io.flutter.view.FlutterView: void popRoute()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect)
com.google.android.gms.internal.measurement.zzbw
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_18
com.google.firebase.messaging.RemoteMessage$Notification: android.net.Uri getImageUrl()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void onInitialized()
com.google.firebase.analytics.FirebaseAnalytics: void setUserProperty(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.messaging.R$layout: R$layout()
io.flutter.plugins.connectivity.R$drawable: int notification_bg_low
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND
com.google.firebase.ktx.R$id: int chronometer
com.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedProviderInterfaces
io.flutter.view.FlutterNativeView$1: FlutterNativeView$1(io.flutter.view.FlutterNativeView)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS
com.google.firebase.components.ComponentRuntime: java.lang.Object get(java.lang.Class)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: java.lang.String USER_CALLBACK_HANDLE_KEY
io.flutter.embedding.engine.FlutterJNI: boolean setRefreshRateFPSCalled
io.flutter.plugins.connectivity.R$color: R$color()
com.google.firebase.ktx.FirebaseKt: com.google.firebase.FirebaseApp initialize(com.google.firebase.ktx.Firebase,android.content.Context,com.google.firebase.FirebaseOptions)
com.google.firebase.messaging.RemoteMessage$Notification: android.net.Uri link
io.flutter.embedding.android.FlutterActivity: android.graphics.drawable.Drawable getSplashScreenFromManifest()
androidx.fragment.app.Fragment: void performDetach()
io.flutter.embedding.engine.loader.ResourceExtractor$1
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification_Title
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_2
com.google.firebase.messaging.RemoteMessage$Notification: RemoteMessage$Notification(com.google.firebase.messaging.NotificationParams)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: java.lang.String encodedName
com.google.firebase.components.CycleDetector$Dep: boolean access$100(com.google.firebase.components.CycleDetector$Dep)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray access$400(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.plugin.platform.PlatformPlugin: boolean clipboardHasStrings()
com.google.firebase.messaging.DisplayNotification: com.google.firebase.messaging.NotificationParams params
com.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: java.lang.String arg$1
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
io.flutter.embedding.engine.dart.DartMessenger: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.google.android.gms.internal.measurement.zzdj: long zzB
org.threeten.bp.Ser: java.lang.Object readResolve()
com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzhx zzT
io.flutter.plugin.platform.PlatformViewsController: android.view.View flutterView
com.google.firebase.installations.R$layout: int notification_template_custom_big
io.flutter.plugins.pathprovider.R$string: R$string()
io.flutter.plugin.common.BasicMessageChannel: java.lang.String TAG
com.google.firebase.ktx.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_fontWeight
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String sound
com.google.firebase.installations.R$drawable: int notification_bg_normal
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger binaryMessenger
io.flutter.embedding.engine.systemchannels.TextInputChannel: void go(int)
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENDLESS_TRACE_BUFFER
org.threeten.bp.chrono.HijrahDate: java.lang.Object writeReplace()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5 instance
com.google.firebase.messaging.CommonNotificationBuilder: android.app.PendingIntent createDeleteIntent(android.content.Context,com.google.firebase.messaging.NotificationParams)
io.flutter.plugins.pathprovider.R$color: int notification_icon_bg_color
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String largeIcon
io.flutter.view.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
io.flutter.embedding.engine.FlutterEngine: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.FlutterEngineGroup: FlutterEngineGroup(android.content.Context)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_MESSAGE_ID
com.google.firebase.installations.interop.R$styleable
com.google.firebase.iid.WithinAppServiceBinder$$Lambda$0
com.google.firebase.messaging.RemoteMessage$Notification: android.net.Uri getLink()
com.google.firebase.internal.DataCollectionConfigStorage: android.content.Context directBootSafe(android.content.Context)
io.flutter.plugins.sharedpreferences.R$id: int action_text
com.google.firebase.FirebaseError: int ERROR_REQUIRES_RECENT_LOGIN
com.google.firebase.installations.interop.R$id: int normal
io.flutter.plugins.firebase.core.R$dimen
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(float)
com.google.firebase.installations.interop.R$id: int chronometer
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int source
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent
androidx.core.app.JobIntentService: boolean mStopped
io.flutter.plugins.firebase.messaging.ContextHolder: android.content.Context applicationContext
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldAttachEngineToActivity()
com.google.android.gms.internal.measurement.zzdh: com.google.android.gms.internal.measurement.zzhz zza
io.flutter.plugin.common.StandardMessageCodec: java.lang.String TAG
com.google.firebase.datatransport.R$styleable: int ColorStateListItem_android_color
com.google.firebase.components.EventBus: void subscribe(java.lang.Class,com.google.firebase.events.EventHandler)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.String firebaseInstallationId
io.flutter.plugins.firebase.core.R: R()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_OFF_MS
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.plugin.platform.PlatformViewsController: void onEndFrame()
com.google.firebase.iid.Store: java.lang.String createTokenKey(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.installations.interop.R$drawable
io.flutter.plugins.firebase.messaging.R$attr: int fontProviderAuthority
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_startY
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.lang.String[])
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager getWindowManager()
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldAttachEngineToActivity
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$2
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String appStoragePath
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES
com.google.firebase.ktx.R$style: int Widget_Compat_NotificationActionText
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_MESSAGE_TIME
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getPackageName()
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: java.lang.Object getLifecycle()
io.flutter.plugin.common.ErrorLogResult: ErrorLogResult(java.lang.String,int)
com.google.firebase.encoders.config.EncoderConfig: com.google.firebase.encoders.config.EncoderConfig registerEncoder(java.lang.Class,com.google.firebase.encoders.ObjectEncoder)
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int)
io.flutter.plugin.common.StandardMessageCodec: byte BIGINT
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView detach()
com.google.firebase.iid.FirebaseInstanceId: void startSync()
com.google.firebase.installations.interop.R$id: int italic
com.google.firebase.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.flutter.embedding.android.FlutterFragment: void onUserLeaveHint()
io.flutter.view.AccessibilityBridge$LocaleStringAttribute
org.threeten.bp.zone.ZoneOffsetTransition: java.lang.Object writeReplace()
io.flutter.plugins.urllauncher.WebViewActivity$1: io.flutter.plugins.urllauncher.WebViewActivity this$0
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.Object,boolean)
io.flutter.plugins.connectivity.R$dimen: int notification_content_margin_start
io.flutter.plugins.pathprovider.R$attr: int fontProviderAuthority
com.google.firebase.analytics.connector.zzb
com.google.android.gms.internal.measurement.zzcf: com.google.android.gms.internal.measurement.zzby zzg
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer getNotificationPriority()
io.flutter.plugins.connectivity.ConnectivityMethodChannelHandler: ConnectivityMethodChannelHandler(io.flutter.plugins.connectivity.Connectivity)
io.flutter.view.AccessibilityBridge: boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_top_pad
io.flutter.plugins.sharedpreferences.R$integer: R$integer()
androidx.core.graphics.drawable.IconCompatParcelizer
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void onHandleWork(android.content.Intent)
com.google.firebase.analytics.zzc: com.google.android.gms.internal.measurement.zzbr zza
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String SEARCH_TERM
io.flutter.plugins.urllauncher.R$id: int info
io.flutter.plugin.editing.TextInputPlugin: void notifyViewExited()
com.google.firebase.analytics.connector.AnalyticsConnector: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.view.FlutterNativeView$1: void onFlutterUiNoLongerDisplayed()
com.google.firebase.events.Publisher
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: AutoValue_PersistedInstallationEntry$Builder(com.google.firebase.installations.local.PersistedInstallationEntry)
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugins.firebase.core.R$styleable: int Capability_shortcutMatchRequired
io.flutter.plugins.firebase.messaging.R$id: int right_side
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.content.SharedPreferences preferences
com.google.firebase.messaging.NotificationParams: long[] getVibrateTimings()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.firebase.components.CycleDetector$Dep: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: boolean isInLayout()
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String MESSAGE_TYPE
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
io.flutter.embedding.android.TransparencyMode
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
com.google.firebase.installations.GetIdListener: com.google.android.gms.tasks.TaskCompletionSource taskCompletionSource
com.google.firebase.components.LazySet: LazySet(java.util.Collection)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_ALPHA
io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback
com.google.firebase.encoders.ValueEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(double)
com.google.firebase.R$styleable: int GradientColorItem_android_offset
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onDetachedFromActivityForConfigChanges()
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIME_ZONE_NAME
com.google.firebase.internal.DataCollectionConfigStorage: java.lang.String FIREBASE_APP_PREFS
io.flutter.view.AccessibilityBridge: void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener)
io.flutter.plugins.firebase.core.BuildConfig: java.lang.String LIBRARY_VERSION
com.google.firebase.installations.interop.R$layout: int notification_template_icon_group
com.google.android.gms.internal.measurement.zzcr
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor)
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
org.threeten.bp.chrono.MinguoEra
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$2: void run()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: java.util.concurrent.ThreadFactory THREAD_FACTORY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation getDefaultStyleInformation(java.util.Map)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
io.flutter.plugin.common.PluginRegistry$Registrar: android.content.Context activeContext()
io.flutter.embedding.android.FlutterSurfaceView$1: FlutterSurfaceView$1(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
io.flutter.plugin.common.BasicMessageChannel$Reply
com.google.firebase.R$dimen: int compat_button_inset_vertical_material
io.flutter.view.AccessibilityBridge: float SCROLL_EXTENT_FOR_INFINITY
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.Store$Token getTokenWithoutTriggeringSync()
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_5
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: boolean active
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String VIBRATE_TIMINGS
com.google.firebase.ktx.R$style: int TextAppearance_Compat_Notification
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer visibility
com.google.firebase.ktx.R$styleable: int ColorStateListItem_android_alpha
io.flutter.embedding.engine.loader.ApplicationInfoLoader: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_VIBRATION
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.util.Set)
io.flutter.plugins.firebase.messaging.R$id: int italic
io.flutter.plugin.platform.PlatformPlugin: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.embedding.engine.plugins.PluginRegistry: void remove(java.util.Set)
com.google.firebase.installations.BuildConfig: java.lang.String VERSION_NAME
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar INSTANCE
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.Future initResultFuture
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_light_pressed
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: void setConditionalUserProperty(com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty)
org.threeten.bp.OffsetTime
com.google.firebase.messaging.NotificationParams: android.net.Uri getLink()
com.google.firebase.installations.InstallationTokenResult: long getTokenCreationTimestamp()
com.google.firebase.encoders.ValueEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(java.lang.String)
io.flutter.app.FlutterFragmentActivity: io.flutter.app.FlutterActivityDelegate delegate
com.google.firebase.encoders.json.R
io.flutter.plugins.connectivity.R$dimen: int notification_small_icon_size_as_large
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate
io.flutter.plugins.sharedpreferences.R$id: int text
com.google.firebase.iid.FirebaseInstanceId$$Lambda$0: java.lang.String arg$2
com.google.firebase.iid.FirebaseInstanceId: java.util.regex.Pattern API_KEY_FORMAT
com.google.firebase.components.Component: java.util.Set providedInterfaces
androidx.fragment.app.Fragment: boolean mHiddenChanged
com.google.firebase.components.ComponentRuntime: java.util.concurrent.atomic.AtomicReference eagerComponentsInitializedWith
com.google.android.gms.internal.measurement.zzds: com.google.android.gms.internal.measurement.zzds zzg
io.flutter.plugins.pathprovider.R$dimen: int compat_notification_large_icon_max_width
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String PARSING_EXPIRATION_TIME_ERROR_MESSAGE
com.google.firebase.messaging.EnhancedIntentService$$Lambda$2: com.google.firebase.messaging.EnhancedIntentService arg$1
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: void access$000(io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver)
com.google.firebase.FirebaseTooManyRequestsException
io.flutter.plugin.platform.PlatformPlugin: int mEnabledOverlays
com.google.firebase.encoders.annotations.ExtraProperty
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateRepeatIntervalMilliseconds(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidBigPictureResources(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String clickAction
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.google.firebase.components.DependencyCycleException: java.util.List getComponentsInCycle()
com.google.firebase.installations.FirebaseInstallations$$Lambda$3: FirebaseInstallations$$Lambda$3(com.google.firebase.installations.FirebaseInstallations)
androidx.fragment.app.FragmentActivity: boolean mCreated
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_10
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: android.content.res.AssetManager androidAssetManager
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetBefore(java.lang.CharSequence,int)
io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue: void dispatch(java.lang.Runnable)
com.google.firebase.datatransport.R$styleable: int GradientColor_android_centerColor
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onAttach(android.content.Context)
com.google.firebase.analytics.connector.AnalyticsConnectorImpl
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: void onPreEngineRestart()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.net.Uri retrieveSoundResourceUri(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.SoundSource)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
com.google.firebase.messaging.Constants$AnalyticsKeys
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderSystemFontFamily
com.google.firebase.installations.local.IidStore: android.content.SharedPreferences iidPrefs
com.google.firebase.installations.InstallationTokenResult: java.lang.String getToken()
io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Path)
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: android.os.Bundle getMetadata(android.content.Context)
com.google.firebase.installations.R$styleable: int FontFamilyFont_android_ttcIndex
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.google.firebase.events.Subscriber: void subscribe(java.lang.Class,java.util.concurrent.Executor,com.google.firebase.events.EventHandler)
io.flutter.plugins.urllauncher.BuildConfig: BuildConfig()
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzt
com.google.firebase.installations.FirebaseInstallations: java.util.List listeners
io.flutter.view.FlutterView$Provider: io.flutter.view.FlutterView getFlutterView()
com.google.firebase.components.ComponentRuntime$$Lambda$4: com.google.firebase.components.LazySet arg$1
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.firebase.FirebaseApp$$Lambda$1: java.lang.Object get()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext doEncode(com.google.firebase.encoders.ObjectEncoder,java.lang.Object,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetLeft
io.flutter.plugins.connectivity.R$color: int androidx_core_secondary_text_default_material_light
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder withCachedEngine(java.lang.String)
io.flutter.embedding.android.ExclusiveAppComponent
io.flutter.plugins.firebase.messaging.R$id: int forever
io.flutter.plugins.connectivity.R$styleable
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: com.google.firebase.messaging.RemoteMessage getFirebaseMessage(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeChangeListener()
io.flutter.plugin.platform.PlatformPlugin$1: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.plugin.editing.TextEditingDelta: int getNewComposingStart()
androidx.activity.OnBackPressedCallback: boolean isEnabled()
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int CANCEL
com.google.firebase.installations.InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult$Builder setTokenExpirationTimestamp(long)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void cleanUpStoredHeartBeats()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_24
com.google.firebase.ktx.R$styleable: int GradientColor_android_gradientRadius
com.google.firebase.platforminfo.AutoValue_LibraryVersion
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String SELECT_CONTENT
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$2: FirebaseMessaging$AutoInit$$Lambda$2(com.google.firebase.messaging.FirebaseMessaging$AutoInit)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotifications(android.content.Context,java.util.ArrayList)
io.flutter.plugins.urllauncher.R$id: int line3
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.android.KeyChannelResponder: java.lang.Character applyCombiningCharacterToBaseCharacter(int)
io.flutter.plugin.platform.VirtualDisplayController: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.plugin.platform.PlatformViewsController: boolean usesVirtualDisplay(java.lang.Integer)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUT
com.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetIdListener()
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry$1: io.flutter.view.FlutterView$SurfaceTextureRegistryEntry this$1
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFisError(java.lang.String)
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener
com.google.firebase.components.ComponentRuntime$$Lambda$2: java.lang.Object get()
io.flutter.plugin.common.JSONUtil: java.lang.Object unwrap(java.lang.Object)
io.flutter.plugin.common.EventChannel
com.google.firebase.messaging.TopicsSubscriber: com.google.firebase.iid.FirebaseInstanceId iid
com.google.firebase.messaging.SharedPreferencesQueue: java.util.ArrayDeque internalQueue
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_ENABLE_STATE_RESTORATION
com.google.firebase.iid.InstanceIdResultImpl: InstanceIdResultImpl(java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzdj: int zzC
com.google.firebase.platforminfo.LibraryVersionComponent
com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setUri(java.lang.String)
com.google.firebase.components.CycleDetector
io.flutter.embedding.android.FlutterFragmentActivity: void switchLaunchThemeForNormalTheme()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ID
io.flutter.plugin.editing.TextEditingDelta: int getNewSelectionStart()
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener flutterEngineAttachmentListener
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder toBuilder()
com.google.firebase.iid.FirebaseInstanceId$$Lambda$2: java.util.concurrent.CountDownLatch arg$1
io.flutter.plugins.urllauncher.R$color: int notification_icon_bg_color
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String PRIORITY_V19
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer getNotificationCount()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_android_fontWeight
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String CAMPAIGN_DETAILS
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader imageReader
io.flutter.embedding.android.MotionEventTracker$MotionEventId: MotionEventTracker$MotionEventId(long)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetBottom
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiNoLongerDisplayed()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String BIG_INTEGER_PREFIX
com.google.firebase.iid.Registrar$$Lambda$1: Registrar$$Lambda$1()
com.google.firebase.installations.RandomFidGenerator: int FID_LENGTH
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String API_KEY_HEADER
com.google.firebase.installations.R$styleable: int ColorStateListItem_android_alpha
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logFisCommunicationError(java.net.HttpURLConnection,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.config.EncoderConfig registerEncoder(java.lang.Class,com.google.firebase.encoders.ObjectEncoder)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_RED
io.flutter.view.FlutterView: io.flutter.app.FlutterPluginRegistry getPluginRegistry()
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
com.google.firebase.R$styleable: int ColorStateListItem_android_alpha
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.FirebaseApp app
io.flutter.plugins.firebase.core.R$drawable: int notification_bg_normal_pressed
io.flutter.plugin.platform.PlatformViewsController: PlatformViewsController()
com.google.firebase.datatransport.R$dimen: int notification_big_circle_margin
com.google.firebase.ktx.BuildConfig: BuildConfig()
com.google.firebase.iid.GmsRpc: com.google.android.gms.cloudmessaging.Rpc rpc
io.flutter.plugins.firebase.messaging.R$id: int tag_accessibility_clickable_spans
io.flutter.view.TextureRegistry$SurfaceTextureEntry: long id()
com.google.android.gms.internal.measurement.zzdj: int zzJ
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getDartEntrypointFunctionName()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DISMISS
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind background
io.flutter.plugins.sharedpreferences.R$layout: R$layout()
com.google.firebase.installations.R$styleable: int GradientColor_android_startX
com.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void finishAutofillContext(boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness
com.google.firebase.R$styleable: int GradientColor_android_centerX
com.google.firebase.installations.R$id: int right_icon
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendGlobalHeartBeat(long)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder appBundlePath(java.lang.String)
io.flutter.plugins.pathprovider.R$drawable: int notification_template_icon_bg
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
com.google.firebase.installations.FirebaseInstallationsException$Status: FirebaseInstallationsException$Status(java.lang.String,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSmallIcon(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: AutoValue_PersistedInstallationEntry(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)
androidx.fragment.app.FragmentActivity: boolean mStartedActivityFromFragment
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization
io.flutter.view.FlutterView: void sendUserPlatformSettingsToDart()
com.google.firebase.installations.R$id: int icon
androidx.media.AudioAttributesImplApi21
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.google.firebase.datatransport.R$drawable: int notification_bg_normal_pressed
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
io.flutter.plugins.urllauncher.R$layout
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotifications(io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
io.flutter.embedding.android.FlutterView$2
com.google.firebase.components.OptionalProvider$$Lambda$4: void handle(com.google.firebase.inject.Provider)
io.flutter.plugins.pathprovider.R$id: int actions
io.flutter.embedding.engine.FlutterEngine
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Editable getEditable()
com.google.firebase.components.CycleDetector$Dep: boolean set
com.google.firebase.installations.interop.R$id: int info
com.google.firebase.messaging.RemoteMessage: java.lang.String getSenderId()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
com.google.firebase.datatransport.R$color
com.google.firebase.components.Component: com.google.firebase.components.ComponentFactory getFactory()
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: JsonDataEncoderBuilder$TimestampEncoder(com.google.firebase.encoders.json.JsonDataEncoderBuilder$1)
org.threeten.bp.LocalDate: java.lang.Object readResolve()
com.google.android.gms.internal.measurement.zzdj: int zzK
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: boolean uninstallDeferredComponent(int,java.lang.String)
com.google.firebase.internal.DataCollectionConfigStorage: boolean dataCollectionDefaultEnabled
com.google.android.gms.internal.measurement.zzcz
androidx.fragment.app.FragmentActivity: java.lang.String TAG
android.support.v4.app.RemoteActionCompatParcelizer
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterView flutterView
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel access$300(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.view.FlutterNativeView: io.flutter.app.FlutterPluginRegistry mPluginRegistry
com.google.firebase.R$dimen
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiDisplayed()
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_METHOD
io.flutter.embedding.engine.systemchannels.TextInputChannel: void next(int)
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldDelayFirstAndroidViewDraw
com.google.firebase.encoders.json.JsonDataEncoderBuilder: JsonDataEncoderBuilder()
io.flutter.embedding.engine.loader.FlutterLoader$Settings
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String GENERATE_AUTH_TOKEN_REQUEST_RESOURCE_NAME_FORMAT
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_endX
io.flutter.embedding.android.FlutterView: void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String channelId
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void installDeferredComponent(int,java.lang.String)
com.google.firebase.installations.interop.R$attr: R$attr()
io.flutter.embedding.android.FlutterTextureView: boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderFetchStrategy
com.google.firebase.ktx.R$color: R$color()
com.google.firebase.analytics.connector.AnalyticsConnector
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
io.flutter.embedding.android.FlutterView: void convertToImageView()
com.google.firebase.R$drawable: int notification_bg_low_pressed
com.google.firebase.R$dimen: int notification_top_pad
com.google.firebase.components.EventBus: void enablePublishingAndFlushPending()
com.google.firebase.analytics.connector.zzb: com.google.firebase.events.EventHandler zza
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFisError()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: int zza(android.content.Context,android.content.Intent)
io.flutter.plugin.platform.PlatformViewsController$1$1: java.lang.Runnable val$onComplete
io.flutter.plugins.firebase.core.BuildConfig: java.lang.String BUILD_TYPE
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: DartMessenger$HandlerInfo(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM
io.flutter.plugin.platform.PlatformViewsController$1: void setDirection(int,int)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,long)
androidx.fragment.app.Fragment: android.os.Bundle mArguments
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_16
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void popSystemNavigator()
io.flutter.embedding.android.FlutterFragment: void onTrimMemory(int)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String DELETE_REQUEST_RESOURCE_NAME_FORMAT
com.google.firebase.components.ComponentRuntime$$Lambda$3: com.google.firebase.inject.Provider arg$2
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: boolean equals(java.lang.Object)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onCloseWebView(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_10
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatContentTitle
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int INVERTED_STYLUS
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.view.AccessibilityBridge: java.lang.String TAG
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.google.firebase.R$styleable: R$styleable()
com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorHandle
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_26
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context)
com.google.firebase.platforminfo.LibraryVersion: java.lang.String getVersion()
io.flutter.plugins.firebase.messaging.R$color: R$color()
com.google.firebase.FirebaseApp: boolean isDataCollectionDefaultEnabled()
io.flutter.embedding.engine.plugins.service.ServiceAware
com.google.firebase.analytics.connector.internal.zzc: boolean zzc(java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: byte LONG
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
io.flutter.plugins.firebase.messaging.R$styleable: int ColorStateListItem_android_alpha
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugins.pathprovider.R$id: int notification_main_column
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
io.flutter.plugins.firebase.messaging.R$attr: int fontStyle
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3802(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean launchedActivityFromHistory(android.content.Intent)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.messaging.RemoteMessage: com.google.firebase.messaging.RemoteMessage$Notification notification
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_ID
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_startY
io.flutter.plugins.firebase.messaging.BuildConfig: BuildConfig()
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List increasedValueAttributes
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
com.google.firebase.analytics.connector.internal.zze: com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener zza()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void clearStoredHeartBeats()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.components.OptionalProvider: void lambda$static$0(com.google.firebase.inject.Provider)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_29
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate
com.google.firebase.analytics.FirebaseAnalytics$Param
io.flutter.plugin.editing.ListenableEditingState: int getComposingEnd()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_BLUE
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_INSTANCE_ID
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_android_fontWeight
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: java.lang.String encodedName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_TIME
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
com.google.firebase.analytics.FirebaseAnalytics: java.util.concurrent.ExecutorService zzc
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean engineHasProvidedData
com.google.firebase.analytics.connector.internal.zzg: com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener zza()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setAuthToken(java.lang.String)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String availableFirebaseOptions(java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void addView(java.lang.Object[])
com.google.firebase.ktx.R$id: int forever
io.flutter.plugins.connectivity.Connectivity
androidx.lifecycle.Lifecycling$1
com.google.android.gms.internal.measurement.zzcf: boolean zzh
io.flutter.plugins.sharedpreferences.R$attr: int fontWeight
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int left
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: java.lang.Void lambda$storeHeartBeatInfo$3(com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo,java.lang.String)
io.flutter.view.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet)
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,int)
com.google.firebase.R$styleable: int GradientColor_android_startY
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_24
com.google.firebase.components.ComponentRuntime$$Lambda$4
io.flutter.plugins.urllauncher.R$attr: int fontProviderFetchTimeout
com.google.firebase.messaging.Constants$FirelogAnalytics$MessageType
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getComposerId(android.content.Intent)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0
io.flutter.embedding.android.FlutterFragmentActivity: void onUserLeaveHint()
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$4: java.lang.Object then(com.google.android.gms.tasks.Task)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: boolean initialized
com.google.firebase.messaging.EnhancedIntentService$$Lambda$0: android.content.Intent arg$2
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newInitExecutor()
io.flutter.plugins.connectivity.R$styleable: int Capability_shortcutMatchRequired
com.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.platforminfo.UserAgentPublisher lambda$component$0(com.google.firebase.components.ComponentContainer)
org.threeten.bp.LocalDate
io.flutter.plugin.common.StandardMessageCodec: byte LONG_ARRAY
com.google.firebase.messaging.Constants$MessageTypes: java.lang.String SEND_EVENT
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.android.gms.internal.measurement.zzdh: com.google.android.gms.internal.measurement.zzdh zze
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: DartMessenger$DefaultTaskQueueFactory()
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamily_fontProviderQuery
com.google.android.gms.measurement.internal.zzkg: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterFragmentActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
com.google.firebase.installations.RandomFidGenerator
com.google.firebase.iid.Registrar$FIIDInternalAdapter: java.lang.String getId()
androidx.fragment.app.Fragment: void performLowMemory()
com.google.firebase.analytics.connector.internal.zzd: void onEvent(java.lang.String,java.lang.String,android.os.Bundle,long)
androidx.fragment.app.Fragment: boolean mAdded
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterPlayStoreSplitApplication: void onCreate()
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_type
io.flutter.plugins.pathprovider.R$id: int action_divider
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.google.firebase.encoders.FieldDescriptor$Builder
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: GeneratedPluginRegister()
com.google.firebase.FirebaseAppLifecycleListener
io.flutter.plugin.common.EventChannel$EventSink: void success(java.lang.Object)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer visibility
io.flutter.plugins.pathprovider.R$attr: int fontWeight
io.flutter.plugins.pathprovider.PathProviderPlugin: void executeInBackground(java.util.concurrent.Callable,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.pathprovider.R$string: int status_bar_notification_info_overflow
com.google.firebase.ktx.R$styleable: int GradientColor_android_startY
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: BigTextStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: void onKeyEventHandled(java.lang.Boolean)
com.google.firebase.ktx.R$drawable: int notification_tile_bg
com.google.firebase.datatransport.R
io.flutter.plugin.editing.TextInputPlugin: android.graphics.Rect lastClientRect
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] restorationData
com.google.firebase.FirebaseApp: void removeLifecycleEventListener(com.google.firebase.FirebaseAppLifecycleListener)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_centerX
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: boolean zzb(com.google.firebase.analytics.connector.AnalyticsConnectorImpl,java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.android.gms.tasks.Task getAndClearStoredHeartBeatInfo()
io.flutter.embedding.android.FlutterPlayStoreSplitApplication: FlutterPlayStoreSplitApplication()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener
io.flutter.plugins.urllauncher.R$style
io.flutter.plugins.firebase.core.R$layout: int notification_template_part_time
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_GREEN
com.google.firebase.analytics.zzc: void zze(com.google.android.gms.measurement.internal.zzgm)
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzD
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_ttcIndex
com.google.firebase.ktx.R$styleable: int FontFamilyFont_font
com.google.android.gms.internal.measurement.zzcp: com.google.android.gms.internal.measurement.zzhz zzi
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: java.lang.String TAG
com.google.firebase.FirebaseOptions: java.lang.String access$100(com.google.firebase.FirebaseOptions)
com.google.firebase.ktx.R$styleable: int FontFamilyFont_fontWeight
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.BroadcastReceiver broadcastReceiver
androidx.fragment.app.Fragment: boolean isRemoving()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderCerts
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setCollapseKey(java.lang.String)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
io.flutter.plugin.common.ActivityLifecycleListener: void onPostResume()
com.google.android.gms.internal.measurement.zzdj
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.flutter.plugins.firebase.messaging.R$integer: int status_bar_notification_info_maxnum
com.google.firebase.installations.interop.R$dimen: int notification_action_icon_size
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String RESERVED_PREFIX
io.flutter.embedding.android.FlutterFragment: void onActivityResult(int,int,android.content.Intent)
com.google.firebase.installations.local.PersistedInstallation: java.lang.String AUTH_TOKEN_KEY
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void addExistingListenersToActivityPluginBinding()
com.google.firebase.events.Event: java.lang.Object getPayload()
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon resolveSystemCursor(java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_endX
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void updateGlobalHeartBeat(long)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onRestoreInstanceState(android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableVibration
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzs)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: void lambda$initialize$0$FirebaseMessaging$AutoInit()
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiDisplayed()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onNewIntent(android.content.Intent)
io.flutter.app.FlutterActivity: void onResume()
com.google.firebase.iid.ServiceStarter: java.lang.Boolean hasAccessNetworkStatePermission
com.google.firebase.messaging.TopicsSubscriber$$Lambda$0: com.google.firebase.iid.GmsRpc arg$5
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel$StreamHandler handler
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$0: FcmBroadcastProcessor$$Lambda$0()
com.google.firebase.R$color
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
io.flutter.embedding.android.KeyboardManager
com.google.firebase.messaging.FirebaseMessagingService: android.content.Intent getStartCommandIntent(android.content.Intent)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldDelayFirstAndroidViewDraw(boolean)
org.threeten.bp.chrono.HijrahChronology: java.lang.Object readResolve()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_16
com.google.firebase.R$styleable
com.google.firebase.installations.R$attr: int fontProviderPackage
androidx.fragment.app.FragmentActivity: void onStart()
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback getImeSyncCallback()
io.flutter.view.AccessibilityBridge$SemanticsNode: void collectRoutes(java.util.List)
io.flutter.plugins.firebase.core.R$layout: int notification_template_custom_big
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_fontWeight
io.flutter.embedding.android.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
com.google.firebase.R$drawable: int notification_tile_bg
io.flutter.embedding.engine.systemchannels.PlatformChannel: void systemChromeChanged(boolean)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware: void onAttachedToBroadcastReceiver(io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedSetProviderInterfaces
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage getInstance(android.content.Context)
io.flutter.embedding.android.FlutterView: void detachFromFlutterEngine()
io.flutter.plugins.urllauncher.R$dimen: int notification_large_icon_width
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$2
io.flutter.view.FlutterView: void onStop()
com.google.firebase.iid.FirebaseInstanceId: FirebaseInstanceId(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)
com.google.firebase.datatransport.R$styleable: int GradientColor_android_startColor
io.flutter.plugin.editing.InputConnectionAdaptor: int batchEditNestDepth
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task deleteToken()
com.google.firebase.messaging.TopicsSyncTask: java.lang.String createPermissionMissingLog(java.lang.String)
androidx.fragment.app.FragmentManagerViewModel
com.google.firebase.installations.GetAuthTokenListener: GetAuthTokenListener(com.google.firebase.installations.Utils,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.view.AccessibilityBridge$SemanticsNode: void ensureInverseTransform()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.view.TextureRegistry textures()
io.flutter.plugins.firebase.messaging.R$id: int tag_on_receive_content_listener
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context,android.util.AttributeSet,int)
com.google.firebase.datatransport.R$dimen: int notification_content_margin_start
io.flutter.plugins.firebase.messaging.R$layout: int notification_template_icon_group
com.dexterous.flutterlocalnotifications.BitmapSource: BitmapSource(java.lang.String,int)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void stopListening()
com.google.firebase.components.BuildConfig: BuildConfig()
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.Integer getColor(android.content.Context,java.lang.String,android.os.Bundle)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType valueOf(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: void access$400(io.flutter.plugin.editing.TextInputPlugin)
com.google.firebase.R$id: int italic
com.google.firebase.messaging.EnhancedIntentService: java.lang.Object lock
io.flutter.plugins.pathprovider.R$id: int chronometer
com.google.firebase.installations.R$styleable: int GradientColor_android_endX
com.google.firebase.installations.FirebaseInstallations$1: java.lang.Thread newThread(java.lang.Runnable)
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebView webview
io.flutter.plugins.firebase.core.R$styleable: int FontFamily_fontProviderAuthority
com.google.firebase.components.EventBus: void unsubscribe(java.lang.Class,com.google.firebase.events.EventHandler)
com.google.android.gms.internal.measurement.zzdo: int zza
com.google.firebase.FirebaseOptions: java.lang.String getApiKey()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int action
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long getTokenCreationEpochInSecs()
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_ttcIndex
com.google.android.gms.internal.measurement.zzdz: int zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readGroupingInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOffMs
com.google.firebase.datatransport.R$styleable: int[] GradientColorItem
io.flutter.plugin.platform.PlatformPlugin: void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.EventChannel)
io.flutter.app.FlutterFragmentActivity: io.flutter.app.FlutterActivityEvents eventDelegate
io.flutter.view.FlutterView: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
com.google.firebase.components.EventBus: void publish(com.google.firebase.events.Event)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_6
com.google.firebase.analytics.ktx.ParametersBuilder: void param(java.lang.String,double)
com.google.firebase.iid.WithinAppServiceConnection: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect childRect
com.google.firebase.installations.InstallationTokenResult: long getTokenExpirationTimestamp()
io.flutter.plugin.editing.TextEditingDelta: int newComposingEnd
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DISABLE_SERVICE_AUTH_CODES
io.flutter.view.FlutterView: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.android.gms.internal.measurement.zzbu: boolean zzh
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
com.google.firebase.ktx.R$id: int notification_main_column
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: DefaultHeartBeatInfo(android.content.Context,java.util.Set)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: void run()
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: AutoValue_InstallationTokenResult$Builder(com.google.firebase.installations.InstallationTokenResult,com.google.firebase.installations.AutoValue_InstallationTokenResult$1)
com.google.firebase.components.ComponentRuntime: void doInitializeEagerComponents(java.util.Map,boolean)
io.flutter.embedding.android.FlutterActivity: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_11
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_BIG_TEXT
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE
com.google.firebase.messaging.EnhancedIntentService$1: com.google.firebase.messaging.EnhancedIntentService this$0
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzq
com.google.firebase.iid.ServiceStarter: boolean hasAccessNetworkStatePermission(android.content.Context)
io.flutter.plugins.firebase.core.R$styleable: int GradientColorItem_android_offset
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.firebase.core.R
com.google.firebase.FirebaseApp: android.content.Context getApplicationContext()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
com.google.firebase.R$id: int notification_background
io.flutter.embedding.engine.systemchannels.RestorationChannel$1
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.Fragment: java.lang.String mWho
com.google.firebase.messaging.MessagingAnalytics: int getTtl(android.content.Intent)
org.threeten.bp.zone.StandardZoneRules: java.lang.Object writeReplace()
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute(io.flutter.view.AccessibilityBridge$1)
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_normal
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugins.connectivity.R$layout: int notification_action
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.String cachedEngineId
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode parent
com.google.firebase.datatransport.R$styleable: int GradientColor_android_endColor
com.google.firebase.installations.remote.InstallationResponse: com.google.firebase.installations.remote.TokenResult getAuthToken()
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,int,int)
com.google.firebase.components.Lazy: java.lang.Object get()
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView mNativeView
io.flutter.view.FlutterView$3: void onPostResume()
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
io.flutter.app.FlutterActivity: io.flutter.app.FlutterActivityEvents eventDelegate
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.firebase.ktx.R$attr: int font
com.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getRefreshToken()
io.flutter.plugins.firebase.messaging.R$layout: int notification_template_part_time
org.threeten.bp.LocalTime: java.lang.Object writeReplace()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCategory(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugins.firebase.messaging.R$style: int TextAppearance_Compat_Notification
com.google.firebase.iid.WithinAppServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.inject.Provider storageProvider
com.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.ExecutorService newCachedSingleThreadExecutor()
io.flutter.plugins.connectivity.R$attr: int fontVariationSettings
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.plugins.pathprovider.R$drawable
com.google.firebase.datatransport.R$style: int Widget_Compat_NotificationActionText
com.google.android.gms.internal.measurement.zzbw: int zza
com.google.firebase.encoders.FieldDescriptor
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setEditableSizeAndTransform(double,double,double[])
org.threeten.bp.LocalTime: java.lang.Object readResolve()
io.flutter.view.AccessibilityBridge$Flag: AccessibilityBridge$Flag(java.lang.String,int,int)
com.google.firebase.installations.FirebaseInstallations: java.util.Set fidListeners
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterImageView: java.lang.String TAG
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: java.util.Map pluginMap
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED
io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener: void onUserLeaveHint()
io.flutter.embedding.android.FlutterTextureView: void detachFromRenderer()
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme
io.flutter.util.PathUtils
io.flutter.app.FlutterPluginRegistry: io.flutter.view.FlutterView access$300(io.flutter.app.FlutterPluginRegistry)
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver$2: void run()
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: org.json.JSONObject buildGenerateAuthTokenRequestBody()
com.google.firebase.iid.FirebaseInstanceId: java.lang.String getId()
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeGenerateAuthTokenRequestBodyToOutputStream(java.net.HttpURLConnection)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void invokeViewFocused(int)
com.google.firebase.platforminfo.UserAgentPublisher
com.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: float left
io.flutter.plugins.pathprovider.R$id: int action_container
com.google.firebase.FirebaseOptions: java.lang.String API_KEY_RESOURCE_NAME
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: java.lang.String TAG
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle valueOf(java.lang.String)
com.google.firebase.analytics.ktx.ConsentBuilder
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String SNAPSHOT_ASSET_PATH_KEY
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onCancel(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.plugin.platform.PlatformPlugin$1: void setClipboardData(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS
com.google.firebase.ktx.Firebase: Firebase()
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
io.flutter.plugin.platform.PlatformViewsController: void initializePlatformViewIfNeeded(int)
io.flutter.plugins.urllauncher.R$id: int action_text
io.flutter.app.FlutterActivityDelegate: boolean hasPlugin(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetRight
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
io.flutter.plugin.common.MethodChannel: void resizeChannelBuffer(int)
com.google.firebase.R$styleable: int GradientColor_android_gradientRadius
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.firebase.messaging.RemoteMessageCreator: RemoteMessageCreator()
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_23
org.threeten.bp.ZoneOffset: java.lang.Object writeReplace()
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_15
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference access$300(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
io.flutter.plugins.firebase.messaging.R$id: int time
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_0
io.flutter.plugins.sharedpreferences.R$attr: int font
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status BAD_CONFIG
io.flutter.view.FlutterView: boolean fitSystemWindows(android.graphics.Rect)
io.flutter.FlutterInjector$Builder: void fillDefaults()
com.google.firebase.iid.Store$Token: Store$Token(java.lang.String,java.lang.String,long)
io.flutter.plugins.connectivity.R$id: int action_divider
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String PROMOTION_NAME
io.flutter.view.AccessibilityBridge: void reset()
io.flutter.embedding.android.MotionEventTracker: android.util.LongSparseArray eventById
io.flutter.plugin.platform.PlatformViewsController: void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.embedding.android.FlutterView$ZeroSides
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel this$0
com.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)
com.google.firebase.encoders.json.BuildConfig: java.lang.String APPLICATION_ID
com.google.firebase.FirebaseApp$UserUnlockReceiver: FirebaseApp$UserUnlockReceiver(android.content.Context)
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor addResource(java.lang.String)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_10
com.google.firebase.FirebaseCommonRegistrar$$Lambda$4
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setClipboardData(java.lang.String)
com.google.firebase.components.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.plugins.firebase.core.R$attr: R$attr()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String scheduledDateTime
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: java.lang.String TAG
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$700(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback
com.google.firebase.ktx.R$string: R$string()
io.flutter.FlutterInjector$Builder
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String summaryText
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: io.flutter.embedding.engine.systemchannels.TextInputChannel this$0
com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_29
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithTag(int,java.util.HashMap)
com.google.firebase.installations.R$styleable: int GradientColor_android_centerX
com.google.firebase.installations.R$id: int tag_transition_group
com.google.firebase.iid.FirebaseInstanceId$$Lambda$3: java.lang.String arg$4
com.google.firebase.messaging.EnhancedIntentService: java.util.concurrent.ExecutorService executor
androidx.fragment.app.Fragment: boolean isMenuVisible()
io.flutter.embedding.android.FlutterView: void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
io.flutter.view.AccessibilityBridge: void handleTouchExploration(float,float)
io.flutter.plugins.urllauncher.R$id: int time
io.flutter.app.FlutterActivityDelegate: void onUserLeaveHint()
io.flutter.embedding.android.FlutterSplashView: void onRestoreInstanceState(android.os.Parcelable)
io.flutter.plugins.connectivity.R$id: int tag_state_description
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage()
com.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1
io.flutter.plugins.pathprovider.R$drawable: int notification_icon_background
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.SplashScreen provideSplashScreen()
com.google.firebase.heartbeatinfo.HeartBeatResult: java.lang.String getSdkName()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void tryCommittingInBackground(android.content.SharedPreferences$Editor,int)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.iid.internal.FirebaseInstanceIdInternal: java.lang.String getId()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.google.firebase.FirebaseException: FirebaseException()
com.google.firebase.components.OptionalProvider: void whenAvailable(com.google.firebase.inject.Deferred$DeferredHandler)
com.google.firebase.FirebaseApp$UserUnlockReceiver: android.content.Context applicationContext
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: java.text.DateFormat rfc339
org.threeten.bp.chrono.JapaneseDate: java.lang.Object writeReplace()
com.google.firebase.analytics.connector.zzb: void handle(com.google.firebase.events.Event)
io.flutter.plugins.firebase.core.R$dimen: int compat_control_corner_material
io.flutter.plugins.connectivity.R$drawable: int notify_panel_notification_icon_bg
com.google.firebase.iid.Registrar: com.google.firebase.iid.internal.FirebaseInstanceIdInternal lambda$getComponents$1$Registrar(com.google.firebase.components.ComponentContainer)
com.google.firebase.components.Component$Builder: java.util.Set publishedEvents
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder withNewEngine()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task setAutoInitEnabled(java.util.Map)
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.android.gms.tasks.Task storeHeartBeatInfo(java.lang.String)
io.flutter.app.FlutterActivityDelegate: android.view.View access$000(io.flutter.app.FlutterActivityDelegate)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String NO_UI
com.google.firebase.installations.remote.TokenResult: com.google.firebase.installations.remote.TokenResult$Builder toBuilder()
com.google.firebase.datatransport.R$id: int right_icon
com.google.firebase.messaging.EnhancedIntentService: void onDestroy()
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_notification_channel_name
com.google.firebase.installations.CrossProcessLock: CrossProcessLock(java.nio.channels.FileChannel,java.nio.channels.FileLock)
io.flutter.plugins.firebase.core.R$id: int tag_on_receive_content_listener
io.flutter.plugins.firebase.core.R$dimen: R$dimen()
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_low_pressed
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: PlatformViewsChannel$PlatformViewTouch(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long)
com.google.firebase.components.ComponentRuntime$$Lambda$2: com.google.firebase.components.ComponentRegistrar arg$1
io.flutter.view.AccessibilityBridge: void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.urllauncher.R$dimen: int notification_main_column_padding_top
com.google.firebase.messaging.Constants$FirelogAnalytics$MessageType: java.lang.String DISPLAY_NOTIFICATION
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.lang.String PREFERENCES_NAME
io.flutter.plugin.platform.PlatformView: void onFlutterViewDetached()
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.String conversationTitle
io.flutter.plugins.urllauncher.R$drawable: int notification_template_icon_bg
io.flutter.plugins.urllauncher.R$id: int tag_on_receive_content_mime_types
com.google.firebase.messaging.FirebaseMessaging: com.google.android.datatransport.TransportFactory transportFactory
com.google.firebase.messaging.FirebaseMessaging$AutoInit: boolean isEnabled()
io.flutter.app.FlutterActivityDelegate$1: FlutterActivityDelegate$1(io.flutter.app.FlutterActivityDelegate)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: void close()
io.flutter.embedding.engine.plugins.activity.ActivityAware
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: long[] vibrationPattern
com.google.firebase.iid.GmsRpc$$Lambda$0: com.google.firebase.iid.GmsRpc arg$1
io.flutter.plugins.firebase.messaging.R
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: DeferredComponentChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.firebase.installations.local.PersistedInstallation: java.lang.String REFRESH_TOKEN_KEY
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_startColor
com.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$3(android.content.Context)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String TEXT_ARGS_SUFFIX
io.flutter.view.AccessibilityBridge: android.graphics.Rect getBoundsInScreen(android.graphics.Rect)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.ArrayList readMessages(java.util.ArrayList)
io.flutter.view.AccessibilityViewEmbedder
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getTopic(android.content.Intent)
com.google.firebase.messaging.TopicsSubscriber$$Lambda$0: com.google.firebase.iid.Metadata arg$4
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigPictureStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.firebase.FirebaseApp$$Lambda$1: com.google.firebase.FirebaseApp arg$1
com.google.firebase.FirebaseError: int ERROR_APP_NOT_AUTHORIZED
com.google.firebase.iid.WithinAppServiceBinder
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_LIGHTS
io.flutter.view.AccessibilityBridge: boolean isAccessibilityEnabled()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: void zza(com.google.firebase.events.Event)
io.flutter.embedding.android.FlutterView$2: void onFlutterUiDisplayed()
io.flutter.plugins.urllauncher.UrlLauncher: android.app.Activity activity
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mPendingListeners
io.flutter.embedding.android.KeyboardManager: android.view.View view
com.google.firebase.iid.RequestDeduplicator$GetTokenRequest
com.google.firebase.installations.local.IidStore: java.lang.String getIdFromPublicKey(java.security.PublicKey)
com.google.firebase.messaging.FirebaseMessaging$$Lambda$4
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger access$400(io.flutter.plugin.common.EventChannel)
io.flutter.embedding.engine.renderer.FlutterRenderer: android.graphics.Bitmap getBitmap()
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_22
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(double)
io.flutter.plugin.editing.TextInputPlugin: android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin)
com.google.firebase.FirebaseApp$UserUnlockReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,double)
io.flutter.embedding.engine.FlutterEngineGroup$1: io.flutter.embedding.engine.FlutterEngineGroup this$0
io.flutter.embedding.engine.systemchannels.LocalizationChannel
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firebase.R$layout: int notification_template_custom_big
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onLayout(boolean,int,int,int,int)
com.google.firebase.iid.WithinAppServiceConnection: void startConnectionIfNeeded()
io.flutter.plugins.pathprovider.R$id: int tag_accessibility_actions
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void ensureAlive()
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_startY
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.RenderMode,io.flutter.embedding.android.TransparencyMode)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_small_icon_size_as_large
io.flutter.plugin.editing.ListenableEditingState: android.view.inputmethod.BaseInputConnection mDummyConnection
io.flutter.embedding.android.KeyboardManager$Responder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
io.flutter.plugin.platform.PlatformView: void onInputConnectionUnlocked()
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder registerFallbackEncoder(com.google.firebase.encoders.ObjectEncoder)
com.google.firebase.components.ComponentDiscoveryService
com.google.firebase.ktx.R$styleable: int[] GradientColor
com.google.firebase.installations.local.IidStore: java.lang.String JSON_TOKEN_KEY
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus GRANTED
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readInboxStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugins.firebase.core.BuildConfig
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
com.google.firebase.datatransport.R$drawable: int notification_bg
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION
io.flutter.plugins.pathprovider.R$layout: R$layout()
com.google.firebase.messaging.EnhancedIntentService: boolean handleIntentOnMainThread(android.content.Intent)
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: PathProviderPlugin$UiThreadExecutor(io.flutter.plugins.pathprovider.PathProviderPlugin$1)
com.google.firebase.analytics.zzc
com.google.firebase.datatransport.R$id: int tag_unhandled_key_event_manager
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderQuery
com.google.firebase.components.Lazy: Lazy(java.lang.Object)
com.google.firebase.BuildConfig: int VERSION_CODE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String detailedExceptionString(java.lang.Exception)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_18
io.flutter.embedding.engine.systemchannels.SystemChannel: SystemChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createEngine(android.content.Context)
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderFetchTimeout
com.google.firebase.ktx.R$dimen
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: FirebaseApp$GlobalBackgroundStateListener()
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.Utils utils
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
io.flutter.app.FlutterActivity: void onDestroy()
com.google.firebase.installations.R$string
com.google.firebase.iid.SyncTask
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.firebase.internal.DataCollectionConfigStorage: boolean isEnabled()
com.google.firebase.installations.R$styleable: int FontFamily_fontProviderFetchTimeout
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HEADER
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getCachedEngineId()
com.google.firebase.analytics.connector.internal.zzc: boolean zzd(java.lang.String,java.lang.String)
com.google.firebase.iid.Registrar$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
io.flutter.view.AccessibilityBridge$2: void onAccessibilityStateChanged(boolean)
com.google.firebase.installations.R$integer
com.google.firebase.iid.FirebaseIidExecutors$$Lambda$0: FirebaseIidExecutors$$Lambda$0()
com.google.firebase.messaging.DisplayNotification: void waitForAndApplyImageDownload(androidx.core.app.NotificationCompat$Builder,com.google.firebase.messaging.ImageDownload)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSound(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: boolean isNotRunning()
com.google.firebase.messaging.TopicsSyncTask: boolean hasPermission(android.content.Context,java.lang.String,java.lang.Boolean)
com.google.firebase.ktx.R$id: int none
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
com.google.firebase.components.BuildConfig: boolean DEBUG
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_centerColor
com.google.firebase.installations.R$drawable: int notification_tile_bg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON_SOURCE
com.google.firebase.ktx.R$styleable: int ColorStateListItem_android_color
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.firebase.iid.FirebaseInstanceIdService: void onTokenRefresh()
com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setResponseCode(com.google.firebase.installations.remote.TokenResult$ResponseCode)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
com.google.firebase.messaging.EnhancedIntentService: int lastStartId
io.flutter.plugin.editing.TextInputPlugin: void unlockPlatformViewInputConnection()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int code
io.flutter.plugins.urllauncher.R$id: int text
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String dartEntrypoint
io.flutter.plugins.urllauncher.WebViewActivity$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler access$600(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DART_ENTRYPOINT_META_DATA_KEY
com.google.firebase.installations.RandomFidGenerator: byte[] getBytesFromUUID(java.util.UUID,byte[])
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ValueEncoder STRING_ENCODER
io.flutter.plugins.connectivity.R$id: int title
io.flutter.embedding.engine.renderer.FlutterRenderer: void setSemanticsEnabled(boolean)
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Deferred$DeferredHandler handler
io.flutter.embedding.android.FlutterFragmentActivity: void configureWindowForTransparency()
io.flutter.app.FlutterFragmentActivity: boolean retainFlutterNativeView()
com.google.firebase.FirebaseOptions: java.lang.String GCM_SENDER_ID_RESOURCE_NAME
com.google.firebase.analytics.connector.internal.zzc: android.os.Bundle zzg(com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty)
io.flutter.plugins.firebase.messaging.R$id: int notification_main_column_container
com.google.firebase.installations.interop.R$layout: int notification_action
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugins.firebase.messaging.R$id: int blocking
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.util.ArrayList lines
com.google.firebase.messaging.CommonNotificationBuilder: android.os.Bundle getManifestMetadata(android.content.pm.PackageManager,java.lang.String)
io.flutter.plugins.firebase.messaging.R$layout: int notification_action
com.google.firebase.installations.interop.R$drawable: int notification_bg_low
com.google.firebase.installations.interop.R$dimen: int notification_subtext_size
org.threeten.bp.chrono.HijrahEra: java.lang.Object writeReplace()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: java.util.concurrent.CountDownLatch val$latch
com.google.android.gms.internal.measurement.zzcx: com.google.android.gms.internal.measurement.zzcx zzi
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarColor
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.flutter.embedding.android.FlutterTextureView: void access$300(io.flutter.embedding.android.FlutterTextureView,int,int)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setProjectId(java.lang.String)
io.flutter.app.FlutterFragmentActivity: io.flutter.view.FlutterNativeView createFlutterNativeView()
com.google.firebase.FirebaseApp: boolean equals(java.lang.Object)
com.google.firebase.iid.FirebaseInstanceIdReceiver: void onNotificationOpen(android.content.Context,android.os.Bundle)
io.flutter.plugins.firebase.core.R$drawable: int notification_bg_low_normal
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$5: com.google.firebase.encoders.ValueEncoder lambdaFactory$()
com.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId()
com.google.android.gms.internal.measurement.zzbw: com.google.android.gms.internal.measurement.zzbw zzm
com.google.android.gms.internal.measurement.zzhp: com.google.android.gms.internal.measurement.zzhj zza
io.flutter.app.FlutterActivityDelegate: void onPostResume()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiNoLongerDisplayed()
com.google.firebase.installations.FirebaseInstallations
io.flutter.plugins.connectivity.R$drawable: int notification_bg_low_pressed
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction
com.google.firebase.messaging.FirebaseMessaging$AutoInit
com.google.firebase.installations.local.IidStore: java.lang.String createTokenKey(java.lang.String,java.lang.String)
com.google.firebase.messaging.TopicsSubscriber: void markCompletePendingOperation(com.google.firebase.messaging.TopicOperation)
io.flutter.plugin.platform.PlatformViewsController: float getDisplayDensity()
com.google.firebase.installations.FirebaseInstallations: java.lang.String PROJECT_ID_VALIDATION_MSG
com.google.firebase.heartbeatinfo.SdkHeartBeatResult: SdkHeartBeatResult()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int)
io.flutter.plugins.pathprovider.R$id: int action_text
io.flutter.plugins.pathprovider.R$styleable: int[] GradientColorItem
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat GLOBAL
com.google.firebase.installations.FirebaseInstallations$$Lambda$4: boolean arg$2
io.flutter.app.FlutterActivity: void onPause()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: ApplicationInfoLoader()
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.firebase.platforminfo.LibraryVersionComponent: LibraryVersionComponent()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String,java.lang.Object)
com.google.firebase.components.ComponentFactory
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_endX
io.flutter.embedding.engine.systemchannels.RestorationChannel$2
org.threeten.bp.LocalDateTime: java.lang.Object readResolve()
io.flutter.plugins.firebase.core.R$styleable: int FontFamily_fontProviderPackage
io.flutter.plugins.firebase.core.R$id: int tag_on_apply_window_listener
com.google.firebase.heartbeatinfo.HeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: boolean destroyEngineWithActivity
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel this$0
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: void reply(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setInboxStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_APP_LAUNCH_DETAILS_METHOD
io.flutter.embedding.android.FlutterSplashView: boolean hasSplashCompleted()
io.flutter.app.FlutterFragmentActivity: io.flutter.view.FlutterView getFlutterView()
io.flutter.plugins.connectivity.R$layout
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_11
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.RenderMode getRenderMode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.graphics.drawable.IconCompat getIconFromSource(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.models.IconSource)
io.flutter.plugins.firebase.core.R$id: int tag_accessibility_clickable_spans
io.flutter.embedding.engine.systemchannels.TextInputChannel: void search(int)
androidx.core.app.RemoteActionCompat
com.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task getToken(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int)
io.flutter.plugins.connectivity.R$drawable: int notification_bg_normal
io.flutter.view.AccessibilityBridge$StringAttribute: int start
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler
io.flutter.plugin.platform.PlatformViewsController: void attachToView(android.view.View)
com.google.firebase.R$dimen: int notification_small_icon_size_as_large
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS
io.flutter.plugins.sharedpreferences.R$id: int title
com.google.firebase.ktx.R$dimen: int compat_button_inset_vertical_material
com.google.firebase.installations.local.PersistedInstallation: java.lang.String TOKEN_CREATION_TIME_IN_SECONDS_KEY
com.google.firebase.encoders.FieldDescriptor: java.lang.String getName()
io.flutter.plugin.editing.ListenableEditingState: void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String DEFAULT_VIBRATE_TIMINGS
io.flutter.plugins.pathprovider.PathProviderPlugin$1: io.flutter.plugins.pathprovider.PathProviderPlugin this$0
com.dexterous.flutterlocalnotifications.utils.StringUtils
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.SharedPreferencesQueue topicOperationsQueue
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsResumed()
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType ANALYTICS_STORAGE
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_31
com.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$1: java.lang.Object apply(java.lang.Object)
io.flutter.plugins.urllauncher.R$attr: int queryPatterns
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: void onFrameAvailable(android.graphics.SurfaceTexture)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2
com.google.firebase.datatransport.R$drawable: int notification_tile_bg
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets getFlutterAssets()
com.google.firebase.messaging.TopicsSubscriber: void startSync()
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder TIMESTAMP_ENCODER
com.google.firebase.iid.GmsRpc: java.lang.String base64UrlSafe(byte[])
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
io.flutter.embedding.android.FlutterImageView: void updateCurrentBitmap()
com.google.firebase.messaging.FirebaseMessagingRegistrar$DevNullTransportFactory: com.google.android.datatransport.Transport getTransport(java.lang.String,java.lang.Class,com.google.android.datatransport.Transformer)
com.google.firebase.installations.interop.R$drawable: int notification_action_background
com.google.firebase.ktx.R$dimen: int notification_action_text_size
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousNodeId
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_19
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void setupChannel(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
com.google.firebase.components.OptionalProvider: com.google.firebase.components.OptionalProvider of(com.google.firebase.inject.Provider)
com.google.firebase.installations.FirebaseInstallations: java.lang.Void access$lambda$0(com.google.firebase.installations.FirebaseInstallations)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void updateSystemUiOverlays()
com.google.firebase.messaging.FirebaseMessaging$$Lambda$5: FirebaseMessaging$$Lambda$5(java.lang.String)
io.flutter.plugins.urllauncher.R$attr: int alpha
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()
com.google.firebase.messaging.R: R()
com.google.firebase.installations.R$dimen: int notification_large_icon_height
com.dexterous.flutterlocalnotifications.models.MessageDetails
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.google.firebase.installations.interop.R$style: int TextAppearance_Compat_Notification_Line2
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
io.flutter.plugins.pathprovider.R$attr: int fontProviderFetchTimeout
com.google.firebase.installations.AwaitListener: void onComplete(com.google.android.gms.tasks.Task)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SKIA
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setActivity(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Notification createNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.firebase.iid.SyncTask: java.util.concurrent.ExecutorService processorExecutor
com.google.firebase.components.ComponentRuntime$$Lambda$5
com.google.firebase.messaging.RemoteMessage$Notification: int[] getLightSettings()
com.google.firebase.R$id: int tag_unhandled_key_listeners
io.flutter.plugins.connectivity.R$id: int text2
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
com.google.firebase.ktx.R$drawable: int notification_template_icon_low_bg
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.view.FlutterView view()
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
com.google.android.gms.internal.measurement.zzcr: int zza
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SYSTRACE
com.google.firebase.iid.FirebaseInstanceIdService
io.flutter.embedding.android.AndroidTouchProcessor: int BYTES_PER_FIELD
com.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getAuthToken()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.lang.String HEART_BEAT_COUNT_TAG
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: AutoValue_InstallationTokenResult$Builder(com.google.firebase.installations.InstallationTokenResult)
androidx.fragment.app.Fragment: void setNextTransition(int,int)
io.flutter.plugins.firebase.messaging.R$drawable: int notification_bg_low
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterImageView)
com.google.firebase.R$id
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Deferred getDeferred(java.lang.Class)
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence getOldText()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.google.firebase.components.CycleDetector$ComponentNode: void removeDependent(com.google.firebase.components.CycleDetector$ComponentNode)
io.flutter.plugins.firebase.core.R$styleable: int FontFamily_fontProviderFetchStrategy
com.google.firebase.messaging.FirebaseMessaging$$Lambda$2: FirebaseMessaging$$Lambda$2()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.RenderMode getRenderMode()
com.google.firebase.iid.ServiceStarter: java.lang.String firebaseMessagingServiceClassName
io.flutter.plugins.connectivity.R$layout: int notification_template_custom_big
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_RED
io.flutter.plugins.pathprovider.R$id: int tag_unhandled_key_event_manager
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry()
com.google.android.gms.internal.measurement.zzdj: int zzf
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_low
com.google.firebase.ktx.R$id: int line1
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: com.google.firebase.messaging.TopicsSyncTask this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry this$1
com.google.firebase.FirebaseApp: java.util.Map INSTANCES
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firebase.R$id: int tag_unhandled_key_event_manager
com.google.firebase.installations.R$style: int TextAppearance_Compat_Notification_Line2
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext
io.flutter.embedding.engine.FlutterJNI$Factory: FlutterJNI$Factory()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: PlatformChannel$DeviceOrientation(java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityFeatures(int)
io.flutter.plugin.platform.AccessibilityEventsDelegate: void setAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextRepeatingNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.firebase.iid.WithinAppServiceConnection: void flushQueue()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND_SOURCE
com.google.firebase.FirebaseCommonRegistrar$$Lambda$4: com.google.firebase.FirebaseCommonRegistrar$$Lambda$4 instance
io.flutter.view.FlutterView: void updateViewportMetrics()
io.flutter.plugins.pathprovider.R$string
com.google.firebase.installations.InstallationTokenResult: com.google.firebase.installations.InstallationTokenResult$Builder builder()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
com.google.firebase.components.OptionalProvider$$Lambda$1: com.google.firebase.inject.Deferred$DeferredHandler lambdaFactory$(com.google.firebase.inject.Deferred$DeferredHandler,com.google.firebase.inject.Deferred$DeferredHandler)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager mImm
com.google.firebase.messaging.MessagingAnalytics: com.google.firebase.encoders.DataEncoder dataEncoder
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate: android.view.PointerIcon getSystemPointerIcon(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.IidStore iidStore
io.flutter.plugins.sharedpreferences.R$layout: int notification_template_part_chronometer
com.google.firebase.messaging.TopicsSyncTask
com.google.firebase.components.Component
io.flutter.view.FlutterMain: java.lang.String findAppBundlePath(android.content.Context)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel)
com.google.firebase.installations.R$id: int actions
io.flutter.plugins.urllauncher.R$styleable: int GradientColorItem_android_offset
io.flutter.plugins.firebase.messaging.R$style: int TextAppearance_Compat_Notification_Line2
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderFetchTimeout
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int id
android.support.v4.media.AudioAttributesImplBaseParcelizer
io.flutter.embedding.android.FlutterSplashView: boolean wasPreviousSplashTransitionInterrupted()
com.google.firebase.datatransport.R$attr: int alpha
com.google.firebase.R$id: int actions
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.flutter.plugins.sharedpreferences.R$attr: int ttcIndex
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint createDefault()
io.flutter.view.AccessibilityBridge: android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge)
com.google.firebase.analytics.connector.zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_8
com.google.firebase.FirebaseError: int getErrorCode()
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: com.google.firebase.analytics.connector.AnalyticsConnector zzc
com.google.firebase.provider.FirebaseInitProvider
com.google.firebase.datatransport.R$layout
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.String cachedEngineId
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse build()
io.flutter.app.FlutterApplication: FlutterApplication()
io.flutter.view.VsyncWaiter
io.flutter.plugin.platform.PlatformViewsController: int nextOverlayLayerId
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator
io.flutter.plugin.common.EventChannel$EventSink: void endOfStream()
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.plugins.urllauncher.UrlLauncher
io.flutter.embedding.engine.FlutterEngine: boolean isAttachedToJni()
com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo: androidx.core.app.NotificationCompat$Builder notificationBuilder
io.flutter.plugins.firebase.messaging.R$dimen: int compat_notification_large_icon_max_height
io.flutter.embedding.android.FlutterView: void init()
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withRegisteredFid(java.lang.String,java.lang.String,long,java.lang.String,long)
com.google.firebase.components.Component$$Lambda$2: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.Object)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder destroyEngineWithActivity(boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: FlutterEngineConnectionRegistry(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
io.flutter.embedding.android.FlutterView: void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean)
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_startColor
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType
io.flutter.embedding.android.FlutterActivity: boolean shouldRestoreAndSaveState()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_CACHE_SKSL
com.google.firebase.components.CycleDetector: CycleDetector()
com.google.firebase.installations.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.embedding.engine.loader.FlutterLoader$1: java.lang.Object call()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map componentNameToResults
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: android.content.res.AssetManager mAssetManager
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.flutter.embedding.android.FlutterFragment: void onLowMemory()
com.google.firebase.iid.WithinAppServiceConnection: java.util.Queue intentQueue
com.google.firebase.components.ComponentRuntime$$Lambda$4: void run()
io.flutter.plugin.editing.TextInputPlugin: void saveEditableSizeAndTransform(double,double,double[])
io.flutter.embedding.android.AndroidTouchProcessor: int POINTER_DATA_FLAG_BATCHED
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String USER_PROPERTY_FIREBASE_LAST_NOTIFICATION
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: java.util.Map valueEncoders
com.google.android.gms.common.annotation.KeepName
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.components.CycleDetector$ComponentNode: void addDependent(com.google.firebase.components.CycleDetector$ComponentNode)
com.google.firebase.analytics.ktx.AnalyticsKt: void logEvent(com.google.firebase.analytics.FirebaseAnalytics,java.lang.String,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float)
org.threeten.bp.zone.Ser: java.lang.Object readResolve()
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String IMAGE_URL
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMessageCodec messageCodec
io.flutter.plugin.platform.PlatformViewsController: int toPhysicalPixels(double)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String vmSnapshotData
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.concurrent.Executor executor
io.flutter.plugin.editing.ListenableEditingState: int mBatchEditNestDepth
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_31
io.flutter.view.FlutterNativeView: io.flutter.app.FlutterPluginRegistry access$200(io.flutter.view.FlutterNativeView)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean)
io.flutter.plugins.firebase.messaging.R$id: int icon_only
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
androidx.fragment.app.Fragment: boolean mFromLayout
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation
io.flutter.plugins.sharedpreferences.BuildConfig
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: FlutterActivityAndFragmentDelegate$2(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,io.flutter.embedding.android.FlutterView)
io.flutter.plugin.platform.PlatformPlugin$1: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.plugin.common.StringCodec: StringCodec()
io.flutter.util.PathUtils: java.lang.String getFilesDir(android.content.Context)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.String initialRoute
io.flutter.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.List)
io.flutter.view.AccessibilityBridge$SemanticsNode: int id
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_23
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOnMs
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_13
io.flutter.plugins.firebase.core.R$id: int tag_window_insets_animation_callback
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus REGISTERED
com.google.android.gms.internal.measurement.zzcx
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(java.lang.String)
io.flutter.embedding.engine.FlutterEngine$1: io.flutter.embedding.engine.FlutterEngine this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
com.google.android.gms.common.util.DynamiteApi
io.flutter.plugins.urllauncher.R$id: int action_container
com.google.firebase.analytics.zzb
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String label
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: int getMaxUserProperties(java.lang.String)
com.google.firebase.analytics.zzc: java.util.List zzp(java.lang.String,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzs)
io.flutter.plugin.common.BasicMessageChannel$1
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.flutter.view.FlutterView$ViewportMetrics: int physicalHeight
io.flutter.app.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.firebase.R$styleable: int FontFamilyFont_android_fontStyle
com.google.firebase.messaging.TopicsSubscriber: void setSyncScheduledOrRunning(boolean)
androidx.fragment.app.Fragment: boolean getRetainInstance()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: java.util.concurrent.ExecutorService zza
com.google.firebase.iid.GmsRpc: com.google.firebase.iid.Metadata metadata
io.flutter.plugins.firebase.core.R$attr: int fontProviderQuery
com.google.firebase.ktx.FirebaseKt: com.google.firebase.FirebaseApp initialize(com.google.firebase.ktx.Firebase,android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)
com.google.firebase.components.ComponentDiscovery$$Lambda$1: java.lang.String arg$1
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Hourly
com.google.firebase.datatransport.R$drawable: int notification_bg_low_pressed
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.firebase.messaging.FirebaseMessaging$$Lambda$4: com.google.android.gms.tasks.Task then(java.lang.Object)
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: RestrictedComponentContainer$RestrictedPublisher(java.util.Set,com.google.firebase.events.Publisher)
com.google.android.gms.internal.measurement.zzdf: com.google.android.gms.internal.measurement.zzdf zzk
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onRequestPermissionsResultListeners
com.google.firebase.iid.FcmBroadcastProcessor: java.lang.Integer lambda$startMessagingService$0$FcmBroadcastProcessor(android.content.Context,android.content.Intent)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIREBASE_INSTALLATIONS_API_DOMAIN
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_5
com.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String getUserAgent()
com.google.firebase.ktx.R$layout: int notification_template_part_time
io.flutter.embedding.android.MotionEventTracker
org.threeten.bp.chrono.JapaneseEra: java.lang.Object readResolve()
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: java.lang.String fid
io.flutter.embedding.android.AndroidTouchProcessor
com.google.firebase.messaging.TopicsSyncTask: java.lang.Boolean hasAccessNetworkStatePermission
com.google.firebase.messaging.NotificationParams: android.os.Bundle paramsForAnalyticsIntent()
io.flutter.view.FlutterRunArguments
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityForConfigChanges()
com.google.firebase.messaging.SharedPreferencesQueue: boolean add(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzs,long)
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource DrawableResource
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: AutoValue_InstallationTokenResult$Builder()
io.flutter.plugin.editing.TextEditingDelta: void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int)
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeat()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_KEY
io.flutter.plugins.connectivity.R$id: int forever
io.flutter.plugins.firebase.messaging.BuildConfig: java.lang.String LIBRARY_VERSION
com.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task subscribeToTopic(java.lang.String)
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_13
com.google.firebase.iid.Store: long getCreationTime(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView$1
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String URL_EXTRA
com.google.firebase.installations.R$dimen: int notification_media_narrow_margin
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,float)
com.google.firebase.installations.FirebaseInstallations$$Lambda$3: java.lang.Object call()
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$4: com.google.firebase.encoders.ValueEncoder lambdaFactory$()
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzr
io.flutter.plugin.platform.PlatformPlugin$1: PlatformPlugin$1(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
io.flutter.embedding.android.FlutterActivity: void onPause()
io.flutter.view.FlutterNativeView: void destroy()
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] values()
io.flutter.plugins.connectivity.R$id: int tag_on_apply_window_listener
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewPaddingRight
com.google.firebase.messaging.TopicsSubscriber: void blockingUnsubscribeFromTopic(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String category
com.google.firebase.installations.interop.R$attr: int fontVariationSettings
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void notImplemented()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getClickAction()
com.google.firebase.components.ComponentRuntime$$Lambda$1: java.lang.Object get()
io.flutter.plugin.common.BasicMessageChannel: java.lang.String name
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry fetchAuthTokenFromServer(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.firebase.installations.remote.AutoValue_TokenResult: AutoValue_TokenResult(java.lang.String,long,com.google.firebase.installations.remote.TokenResult$ResponseCode,com.google.firebase.installations.remote.AutoValue_TokenResult$1)
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult$Builder setToken(java.lang.String)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SKIA_ALLOWLIST
io.flutter.plugins.firebase.core.BuildConfig: BuildConfig()
com.google.firebase.analytics.connector.internal.zza
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: boolean coreInitialized
com.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.fragment.app.Fragment: boolean mUserVisibleHint
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2602(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.KeyEventChannel
io.flutter.plugin.editing.TextInputPlugin$1: void show()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: KeyboardManager$PerEventCallbackBuilder(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
com.google.firebase.components.ComponentDiscovery$$Lambda$1: ComponentDiscovery$$Lambda$1(java.lang.String)
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getMultiProcessSafePrefs()
com.google.firebase.FirebaseApp: java.util.concurrent.atomic.AtomicBoolean deleted
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] $VALUES
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener: void onMoveToBackground()
io.flutter.plugin.common.StringCodec: java.lang.String decodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity activity
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void initializeMethodChannel(io.flutter.plugin.common.BinaryMessenger)
io.flutter.plugin.editing.TextInputPlugin$InputTarget: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type
com.dexterous.flutterlocalnotifications.NotificationStyle
com.google.firebase.installations.interop.R$attr: int fontProviderCerts
com.google.firebase.R$id: int action_text
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String KEY_TO
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: MethodCallHandlerImpl$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl,android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean handleDeeplinking
androidx.fragment.app.Fragment: int CREATED
com.google.firebase.installations.interop.R$layout: int notification_action_tombstone
io.flutter.plugins.urllauncher.R$dimen: int notification_subtext_size
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar: FirebaseAnalyticsKtxRegistrar()
com.google.firebase.iid.Store: java.lang.String createSubtypeInfoKey(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.RepeatInterval repeatInterval
com.google.android.gms.internal.measurement.zzko: com.google.android.gms.internal.measurement.zzko[] values()
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: android.app.Activity activity()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void setDeferredComponentChannel(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource Uri
io.flutter.app.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.android.FlutterSurfaceView: void changeSurfaceSize(int,int)
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute()
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerCoordsList(java.lang.Object,float)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.TokenResult authToken
com.google.firebase.datatransport.R$id: int action_text
com.google.firebase.installations.interop.R$dimen
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_19
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugin.common.MethodCall
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationDetails from(java.util.Map)
com.google.firebase.messaging.Constants$FirelogAnalytics$EventType: java.lang.String MESSAGE_DELIVERED
io.flutter.plugins.firebase.messaging.R$drawable: int googleg_standard_color_18
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.firebase.platforminfo.DefaultUserAgentPublisher: DefaultUserAgentPublisher(java.util.Set,com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar)
com.google.firebase.messaging.RemoteMessage: int PRIORITY_NORMAL
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_font
com.dexterous.flutterlocalnotifications.models.NotificationDetails: long[] vibrationPattern
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
io.flutter.plugin.platform.PlatformViewsController$1$1
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
com.google.firebase.installations.R$drawable: int notification_action_background
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
com.google.firebase.iid.FcmBroadcastProcessor: java.lang.Object lock
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: InstallationResponse$ResponseCode(java.lang.String,int)
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task subscribeToTopic(java.lang.String)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: java.lang.Object getLifecycle()
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver$2: io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver this$0
io.flutter.plugin.editing.ListenableEditingState: int getSelectionEnd()
com.google.firebase.installations.R$styleable: int ColorStateListItem_alpha
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
com.google.firebase.ktx.R$integer: int google_play_services_version
com.google.firebase.components.ComponentRuntime: ComponentRuntime(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)
com.google.firebase.installations.R$drawable: int notification_template_icon_bg
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
io.flutter.plugins.firebase.messaging.R$dimen: int compat_button_padding_horizontal_material
io.flutter.plugins.urllauncher.R$drawable: int notification_template_icon_low_bg
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isDecimal
com.google.firebase.installations.R$dimen: int notification_large_icon_width
io.flutter.plugins.sharedpreferences.R$integer
com.google.firebase.FirebaseApp$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.FirebaseApp,android.content.Context)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_3
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness
com.google.firebase.iid.Metadata: java.lang.String appVersionCode
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityInternal()
io.flutter.plugins.firebase.messaging.R$id: int notification_main_column
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
io.flutter.plugins.sharedpreferences.R$id: int dialog_button
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware: void onAttachedToContentProvider(io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding)
com.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails fromNotificationDetails(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_fontWeight
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource[] values()
com.google.firebase.installations.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder withNewEngine()
io.flutter.embedding.android.FlutterFragment: boolean stillAttachedForEvent(java.lang.String)
com.google.android.gms.measurement.AppMeasurementService
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void detachFromFlutterEngine()
com.google.firebase.installations.interop.R$drawable: int notification_bg
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingLeft
io.flutter.plugins.connectivity.R$id: int tag_accessibility_actions
com.google.firebase.ktx.R$attr: int fontStyle
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzE
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_centerY
io.flutter.plugin.common.StandardMessageCodec: byte STRING
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.installations.interop.R$id: int tag_transition_group
com.google.firebase.encoders.ValueEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
com.google.firebase.analytics.connector.AnalyticsConnectorImpl$1: void unregister()
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.embedding.android.FlutterImageView: android.media.Image currentImage
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean important
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SYSTRACE
com.google.firebase.messaging.EnhancedIntentService: void handleIntent(android.content.Intent)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,double)
io.flutter.plugins.pathprovider.StorageDirectoryMapper
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionLocked()
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: AutoValue_InstallationResponse$Builder(com.google.firebase.installations.remote.InstallationResponse)
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$0: void handle(com.google.firebase.events.Event)
io.flutter.plugins.urllauncher.WebViewActivity
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.util.regex.Pattern EXPIRATION_TIMESTAMP_PATTERN
io.flutter.plugins.pathprovider.R$layout: int notification_template_icon_group
com.google.firebase.installations.remote.InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$ResponseCode getResponseCode()
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_31
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String access$100(java.lang.Exception)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasComposing()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.plugin.platform.PlatformViewsController$1: void disposeAndroidViewForPlatformView(int)
com.google.firebase.R$styleable: int FontFamilyFont_font
io.flutter.app.FlutterPluginRegistry: java.lang.Object valuePublishedByPlugin(java.lang.String)
io.flutter.plugins.connectivity.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List valueAttributes
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: PlatformChannel$Brightness(java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.dart.DartExecutor: void notifyLowMemoryWarning()
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task initializeApp(java.util.Map)
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$minMax
com.google.firebase.installations.time.Clock
com.google.firebase.FirebaseApp: java.lang.Object get(java.lang.Class)
com.google.android.gms.internal.measurement.zzbu: com.google.android.gms.internal.measurement.zzbu zzj
com.google.android.gms.internal.measurement.zzcd: java.lang.String zzg
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onMeasure(int,int)
com.google.firebase.iid.GmsRpc: com.google.firebase.inject.Provider userAgentPublisher
io.flutter.plugins.connectivity.R$attr: int fontProviderQuery
io.flutter.plugins.firebase.core.R$string
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_type
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate: void setPointerIcon(android.view.PointerIcon)
com.google.firebase.datatransport.R$id: int tag_unhandled_key_listeners
com.google.firebase.messaging.FirebaseMessagingRegistrar$DevNullTransport: FirebaseMessagingRegistrar$DevNullTransport()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
io.flutter.plugin.editing.TextInputPlugin: void autofill(android.util.SparseArray)
com.google.firebase.messaging.FirebaseMessagingService: void handleNotificationOpen(android.content.Intent)
com.google.firebase.R$dimen: int notification_large_icon_width
io.flutter.plugin.common.BinaryMessenger$TaskQueue
io.flutter.plugin.platform.PlatformPlugin: void updateSystemUiOverlays()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: android.content.SharedPreferences getPreferences()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int)
com.google.firebase.installations.interop.R$style: int Widget_Compat_NotificationActionText
com.google.firebase.messaging.FirebaseMessaging: void setDeliveryMetricsExportToBigQuery(boolean)
com.google.firebase.messaging.DisplayNotification
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent)
com.google.firebase.installations.interop.R$dimen: int notification_top_pad
io.flutter.embedding.engine.plugins.PluginRegistry: void remove(java.lang.Class)
com.google.firebase.encoders.FieldDescriptor: java.lang.String toString()
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzX
io.flutter.embedding.engine.renderer.FlutterRenderer
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withAuthToken(java.lang.String,long,long)
com.google.firebase.analytics.ktx.ConsentBuilder: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus zzb
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void pendingNotificationRequests(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String javaSDKVersionUserAgent
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_PROGRESS
io.flutter.plugins.urllauncher.R$id: int right_side
com.google.firebase.installations.interop.R$string: int status_bar_notification_info_overflow
com.google.firebase.analytics.FirebaseAnalytics$Event: FirebaseAnalytics$Event()
io.flutter.plugins.urllauncher.R$id: int text2
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzs)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUTO_CANCEL
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult$Builder setTokenExpirationTimestamp(long)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin)
com.google.firebase.installations.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_21
io.flutter.plugin.common.PluginRegistry$Registrar
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void destroy()
com.google.firebase.iid.internal.FirebaseInstanceIdInternal: java.lang.String getToken()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification
com.google.firebase.FirebaseCommonRegistrar$$Lambda$6: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()
com.google.firebase.installations.R$id: int notification_main_column_container
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.R$attr
io.flutter.plugin.mouse.MouseCursorPlugin$1: void activateSystemCursor(java.lang.String)
org.threeten.bp.chrono.MinguoDate
com.google.firebase.messaging.NotificationParams: java.lang.String getLocalizedString(android.content.res.Resources,java.lang.String,java.lang.String)
com.google.firebase.FirebaseOptions: java.lang.String getDatabaseUrl()
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_14
io.flutter.plugins.firebase.messaging.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedTextRequest mExtractRequest
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void synchronizeToNativeViewHierarchy(boolean)
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.plugins.urllauncher.R$dimen: int notification_small_icon_background_padding
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: AutoValue_HeartBeatResult(java.lang.String,long,com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat)
com.google.firebase.installations.FirebaseInstallations$$Lambda$2
com.google.android.gms.internal.measurement.zzcr: java.lang.String zzf
io.flutter.plugin.common.JSONMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
com.google.firebase.FirebaseOptions$Builder
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.String)
android.support.v4.media.session.ParcelableVolumeInfo
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int top
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
io.flutter.embedding.engine.loader.ResourceExtractor: android.content.pm.PackageManager mPackageManager
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_tileMode
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY
com.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$0(android.content.Context)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[])
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
io.flutter.plugins.urllauncher.R$color: int notification_action_color_filter
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: android.os.Bundle createArgs()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String uniqueIdentifier
com.google.firebase.FirebaseOptions: java.lang.String storageBucket
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void removeAll()
com.google.firebase.installations.local.PersistedInstallation: org.json.JSONObject readJSONFromFile()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.FirebaseOptions
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
io.flutter.view.AccessibilityBridge: int MIN_ENGINE_GENERATED_NODE_ID
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFisError(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingTop
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.PlatformPlugin$2: void onSystemUiVisibilityChange(int)
io.flutter.plugins.firebase.core.R$style: R$style()
com.google.firebase.R$id: int tag_transition_group
io.flutter.plugin.common.MethodChannel$MethodCallHandler
com.google.firebase.FirebaseApiNotAvailableException
com.google.firebase.messaging.RemoteMessage$Notification
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding
io.flutter.app.FlutterActivityDelegate: boolean onActivityResult(int,int,android.content.Intent)
com.google.firebase.platforminfo.LibraryVersion: com.google.firebase.platforminfo.LibraryVersion create(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterEngineCache: void remove(java.lang.String)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides BOTH
com.google.firebase.installations.AwaitListener
com.google.firebase.encoders.ObjectEncoderContext
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.google.firebase.analytics.zzc: void zzd(com.google.android.gms.measurement.internal.zzgl)
com.google.firebase.iid.Store: long setCreationTime(java.lang.String)
com.google.firebase.ktx.R$styleable: int GradientColor_android_centerColor
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateRecursively(float[],java.util.Set,boolean)
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_fontVariationSettings
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource[] $VALUES
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionBase
io.flutter.plugins.connectivity.R$dimen: R$dimen()
io.flutter.plugins.firebase.core.R$attr: int fontProviderPackage
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
com.google.firebase.components.OptionalProvider: OptionalProvider(com.google.firebase.inject.Deferred$DeferredHandler,com.google.firebase.inject.Provider)
androidx.fragment.app.FragmentActivity: androidx.collection.SparseArrayCompat mPendingFragmentActivityResults
com.google.firebase.installations.R$styleable: int GradientColorItem_android_color
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_1
com.google.firebase.FirebaseCommonRegistrar: java.lang.String safeValue(java.lang.String)
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec codec
io.flutter.view.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
io.flutter.view.FlutterView: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String CLICK_ACTION
com.google.android.gms.internal.measurement.zzcd
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_startX
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int deviceId
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_21
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface
com.google.firebase.datatransport.R$dimen: int compat_button_inset_vertical_material
com.google.firebase.messaging.TopicsSubscriber$$Lambda$0: java.util.concurrent.ScheduledExecutorService arg$2
io.flutter.embedding.android.KeyboardManager: KeyboardManager(android.view.View,io.flutter.plugin.editing.TextInputPlugin,io.flutter.embedding.android.KeyboardManager$Responder[])
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: long getPluginCallbackHandle()
io.flutter.app.FlutterActivityDelegate: void onResume()
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: java.lang.String CONNECTIVITY_ACTION
com.google.android.gms.internal.measurement.zzef: com.google.android.gms.internal.measurement.zzef[] values()
io.flutter.view.AccessibilityBridge$4: io.flutter.view.AccessibilityBridge this$0
com.google.firebase.ktx.Firebase: com.google.firebase.ktx.Firebase INSTANCE
io.flutter.view.FlutterView: boolean isAttached()
com.google.firebase.iid.ServiceStarter: void setForTesting(com.google.firebase.iid.ServiceStarter)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState createFromParcel(android.os.Parcel)
io.flutter.app.FlutterActivityDelegate: void onCreate(android.os.Bundle)
com.google.firebase.FirebaseOptions: java.lang.String projectId
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction Update
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_1
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_IS_AUTOMATIC_DATA_COLLECTION_ENABLED
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: java.util.HashMap notifications
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1)
com.google.firebase.FirebaseOptions$1
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: TextInputChannel$TextEditState(java.lang.String,int,int,int,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.flutter.plugin.common.StandardMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.flutter.plugins.firebase.messaging.R$string: int fcm_fallback_notification_channel_label
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
androidx.fragment.app.Fragment: int RESUMED
io.flutter.plugins.sharedpreferences.R$dimen: int notification_content_margin_start
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_MEDIUM
io.flutter.app.FlutterActivityDelegate: java.lang.String[] getArgsFromIntent(android.content.Intent)
com.google.firebase.messaging.SharedPreferencesQueue: com.google.firebase.messaging.SharedPreferencesQueue createInstance(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)
com.google.firebase.messaging.Constants: long WAKE_LOCK_ACQUIRE_TIMEOUT_MILLIS
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String COMPOSER_ID
io.flutter.plugins.firebase.messaging.R$integer: R$integer()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onSaveInstanceStateListeners
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int width
com.google.firebase.installations.FirebaseInstallations$2: FirebaseInstallations$2(com.google.firebase.installations.FirebaseInstallations,com.google.firebase.installations.internal.FidListener)
com.google.firebase.FirebaseApp: void addBackgroundStateChangeListener(com.google.firebase.FirebaseApp$BackgroundStateChangeListener)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointFunctionName
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_30
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String toString()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_APP_NAME
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.plugin.platform.PlatformPlugin platformPlugin
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.google.firebase.messaging.ImageDownload: android.graphics.Bitmap blockingDownload()
com.google.android.gms.internal.measurement.zzbu: boolean zzi
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void popSystemNavigator()
io.flutter.plugin.common.StandardMessageCodec: void readAlignment(java.nio.ByteBuffer,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
com.google.firebase.messaging.RemoteMessage: java.util.Map getData()
com.google.firebase.installations.interop.R$id: int none
com.google.firebase.datatransport.R$id: int right_side
io.flutter.plugin.common.StandardMessageCodec: byte DOUBLE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: java.lang.Object getLifecycle()
com.google.android.gms.internal.measurement.zzcn: int zza
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream
io.flutter.plugin.platform.PlatformViewsController: void onPreEngineRestart()
io.flutter.plugins.firebase.messaging.R$dimen: int notification_top_pad_large_text
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask
com.google.firebase.installations.R$dimen: int notification_right_icon_size
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: FlutterPlugin$FlutterPluginBinding(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets)
com.google.firebase.installations.interop.R$dimen: R$dimen()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterImageView)
com.google.android.gms.internal.measurement.zzdj: long zzj
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_2
io.flutter.embedding.engine.FlutterEngineGroup$1
io.flutter.plugins.firebase.messaging.R$attr: int fontProviderFetchTimeout
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_23
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String sound
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.util.Map nameToSessionId
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency requiredProvider(java.lang.Class)
com.google.firebase.R$styleable: int FontFamily_fontProviderFetchTimeout
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
com.google.firebase.R$styleable: int FontFamilyFont_fontStyle
com.google.firebase.datatransport.R$dimen: int notification_top_pad_large_text
com.google.firebase.installations.FirebaseInstallations$$Lambda$2: FirebaseInstallations$$Lambda$2(com.google.firebase.installations.FirebaseInstallations,boolean)
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin access$1000(io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.installations.interop.R$layout: R$layout()
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector build()
com.google.firebase.installations.R$style: int TextAppearance_Compat_Notification_Title
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String fullAssetPathFrom(java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String TAG
io.flutter.embedding.engine.FlutterShellArgs: java.util.Set args
com.google.firebase.internal.DataCollectionConfigStorage: java.lang.String DATA_COLLECTION_DEFAULT_ENABLED
io.flutter.plugins.firebase.core.R$id: int chronometer
com.google.firebase.FirebaseApp: void setDataCollectionDefaultEnabled(java.lang.Boolean)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String ENABLE_NOTIFICATION
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY
com.google.firebase.R$dimen: int notification_content_margin_start
com.google.firebase.ktx.R$styleable: int GradientColor_android_endY
io.flutter.plugin.editing.InputConnectionAdaptor: boolean clearMetaKeyStates(int)
com.google.firebase.datatransport.R$attr: int font
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_TOPIC
com.google.firebase.datatransport.BuildConfig: java.lang.String FLAVOR
io.flutter.embedding.android.FlutterSplashView: java.lang.String TAG
io.flutter.plugin.editing.InputConnectionAdaptor: boolean mMonitorCursorUpdate
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String GROUP_ID
com.google.firebase.messaging.TopicsSubscriber: boolean syncTopics()
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel()
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.SplashScreen provideSplashScreen()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVibrationPattern(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugins.pathprovider.R$drawable: int notification_template_icon_low_bg
com.google.firebase.iid.FirebaseInstanceId: long MAX_DELAY_SEC
io.flutter.view.FlutterView$Provider
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewPaddingTop
com.google.firebase.messaging.EnhancedIntentService$$Lambda$0: com.google.android.gms.tasks.TaskCompletionSource arg$3
com.google.firebase.iid.InstanceIdResultImpl: java.lang.String id
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_endColor
com.google.firebase.installations.remote.AutoValue_InstallationResponse: com.google.firebase.installations.remote.TokenResult authToken
com.google.firebase.installations.R$styleable: int[] FontFamily
io.flutter.plugins.firebase.messaging.R$id: int light
com.google.firebase.installations.local.IidStore: IidStore(com.google.firebase.FirebaseApp)
androidx.fragment.app.Fragment: boolean mDeferStart
io.flutter.embedding.engine.FlutterEngineCache: boolean contains(java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int GradientColorItem_android_color
io.flutter.plugins.firebase.messaging.R$dimen: int notification_small_icon_background_padding
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_fontWeight
com.google.firebase.encoders.DataEncoder
io.flutter.plugins.urllauncher.R$dimen: int notification_small_icon_size_as_large
com.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)
com.google.firebase.components.ComponentRuntime: java.util.List iterableToList(java.lang.Iterable)
com.google.firebase.components.ComponentRuntime$$Lambda$4: com.google.firebase.inject.Provider arg$2
com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener: void onMessageTriggered(int,android.os.Bundle)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String flutterAssetsDir
com.google.firebase.messaging.CommonNotificationBuilder: android.app.PendingIntent createContentIntent(android.content.Context,com.google.firebase.messaging.NotificationParams,java.lang.String,android.content.pm.PackageManager)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String SCREEN_CLASS
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIS_TAG
com.google.firebase.ktx.R$drawable: int notification_bg_normal
io.flutter.plugins.sharedpreferences.R$dimen: int notification_subtext_size
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson gson
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_type
io.flutter.plugins.firebase.core.R$dimen: int notification_subtext_size
com.google.firebase.installations.R$dimen
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void showNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.firebase.messaging.FirebaseMessagingService: void onMessageSent(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray sessionIdToState
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String largeIcon
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.KeyboardManager,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI)
com.google.firebase.iid.SyncTask: SyncTask(com.google.firebase.iid.FirebaseInstanceId,long)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding(android.app.Activity,androidx.lifecycle.Lifecycle)
io.flutter.embedding.engine.renderer.FlutterRenderer: void swapSurface(android.view.Surface)
com.google.firebase.installations.local.IidStore: java.lang.String STORE_KEY_TOKEN
io.flutter.app.FlutterFragmentActivity: void onCreate(android.os.Bundle)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1
io.flutter.plugins.sharedpreferences.R$dimen: int notification_top_pad_large_text
io.flutter.plugins.firebase.core.R$attr: int fontProviderFetchTimeout
io.flutter.embedding.android.FlutterView$3
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage instance
io.flutter.plugin.common.StandardMessageCodec: byte FLOAT_ARRAY
io.flutter.plugins.firebase.core.R$id: int none
com.google.firebase.ktx.R$dimen: int notification_top_pad_large_text
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String label
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String logTag
androidx.fragment.app.Fragment: android.content.Context getContext()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: java.lang.Thread newThread(java.lang.Runnable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView access$000(io.flutter.embedding.android.FlutterSplashView)
io.flutter.plugins.firebase.messaging.R$drawable: int common_full_open_on_phone
io.flutter.plugin.platform.PlatformPlugin: int DEFAULT_SYSTEM_UI
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SKIA
com.google.firebase.installations.R$color: R$color()
com.google.firebase.iid.FirebaseInstanceId: void startSyncIfNecessary()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode,float[])
com.google.firebase.messaging.RemoteMessage: void populateSendMessageIntent(android.content.Intent)
com.google.firebase.components.ComponentRuntime: java.util.List processSetComponents()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder withCachedEngine(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.common.EventChannel: java.lang.String TAG
io.flutter.plugins.firebase.messaging.R$attr: int fontWeight
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_endColor
com.google.firebase.installations.interop.R$style: int Widget_Compat_NotificationActionContainer
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ISOLATE_SNAPSHOT_DATA_KEY
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1 this$1
com.google.firebase.components.OptionalProvider: void lambda$whenAvailable$2(com.google.firebase.inject.Deferred$DeferredHandler,com.google.firebase.inject.Deferred$DeferredHandler,com.google.firebase.inject.Provider)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents Time
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String uri
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_3
io.flutter.view.FlutterView$ViewportMetrics: float devicePixelRatio
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String version
io.flutter.plugins.pathprovider.R$dimen: int notification_large_icon_height
io.flutter.embedding.android.FlutterView: java.util.Set flutterUiDisplayListeners
com.google.firebase.components.OptionalProvider$$Lambda$4: com.google.firebase.components.OptionalProvider$$Lambda$4 instance
io.flutter.plugins.firebase.messaging.R$dimen: int notification_action_text_size
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_fontStyle
com.google.firebase.installations.FirebaseInstallations$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String FLIGHT_NUMBER
io.flutter.view.AccessibilityBridge$StringAttributeType: AccessibilityBridge$StringAttributeType(java.lang.String,int)
com.google.firebase.ktx.R$layout: int notification_template_part_chronometer
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingText(java.lang.CharSequence,int)
io.flutter.view.FlutterNativeView$1: void onFlutterUiDisplayed()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler access$000(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl)
io.flutter.plugin.common.MethodChannel$Result: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: void didChangeEditingState(boolean,boolean,boolean)
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzu
io.flutter.embedding.engine.plugins.FlutterPlugin
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.BitmapSource largeIconBitmapSource
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder initialRoute(java.lang.String)
com.google.firebase.messaging.FirebaseMessaging$$Lambda$5
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_VIBRATION
io.flutter.Log: void v(java.lang.String,java.lang.String)
com.google.firebase.datatransport.R$integer
com.google.firebase.measurement.R: R()
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void teardownChannel()
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: void sendEvent()
com.google.firebase.heartbeatinfo.HeartBeatInfo: com.google.android.gms.tasks.Task storeHeartBeatInfo(java.lang.String)
com.google.firebase.installations.R$styleable: int GradientColor_android_tileMode
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalCacheDirectories()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder
com.google.firebase.datatransport.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.firebase.iid.FirebaseInstanceId$$Lambda$2: FirebaseInstanceId$$Lambda$2(java.util.concurrent.CountDownLatch)
com.google.firebase.messaging.FirebaseMessaging$$Lambda$2: java.lang.Object then(com.google.android.gms.tasks.Task)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String LIGHT_SETTINGS
io.flutter.view.FlutterView$ViewportMetrics: int physicalTouchSlop
io.flutter.embedding.android.FlutterActivity: void onStart()
com.google.firebase.installations.FirebaseInstallationsRegistrar
com.google.firebase.installations.FirebaseInstallationsApi
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
com.google.firebase.analytics.ktx.R
com.google.firebase.installations.interop.R$styleable: int[] GradientColorItem
io.flutter.Log: void d(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_22
com.google.firebase.messaging.EnhancedIntentService$$Lambda$2: android.content.Intent arg$2
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver$1: void onLost(android.net.Network)
com.google.firebase.ktx.R$id: int async
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_14
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String PLAY_SOUND
com.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$1$FirebaseInstanceId(java.lang.String,java.lang.String,java.lang.String)
io.flutter.app.FlutterActivity: void onTrimMemory(int)
com.google.firebase.components.R
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevLeft
io.flutter.embedding.android.FlutterSplashView$1
com.google.firebase.FirebaseCommonRegistrar: java.lang.String KOTLIN
io.flutter.view.AccessibilityBridge: void setAccessibilityPaneTitle(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$1: io.flutter.plugin.platform.VirtualDisplayController this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer iconResourceId
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
com.google.firebase.ktx.R$attr: int fontVariationSettings
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task firebaseAppToMap(com.google.firebase.FirebaseApp)
com.google.firebase.messaging.TopicsStore: android.content.SharedPreferences sharedPreferences
com.google.firebase.components.LazySet: void add(com.google.firebase.inject.Provider)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.FlutterView: io.flutter.plugin.editing.TextInputPlugin mTextInputPlugin
com.google.firebase.installations.FirebaseInstallations: void doNetworkCallIfNecessary(boolean)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: FlutterView$SurfaceTextureRegistryEntry(io.flutter.view.FlutterView,long,android.graphics.SurfaceTexture)
com.google.firebase.iid.FirebaseInstanceId: void clearInstancesForTest()
com.google.firebase.components.Component: boolean isLazy()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
com.google.firebase.components.DependencyException
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String EVENT_NOTIFICATION_FOREGROUND
io.flutter.plugins.connectivity.R$styleable: int ColorStateListItem_alpha
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder,io.flutter.FlutterInjector$1)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String sound
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String ADD_TO_CART
com.google.firebase.iid.R
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void unsetOnDescendantFocusChangeListener()
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] SUPPORTED_ABIS
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String SPLASH_SCREEN_META_DATA_KEY
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction
io.flutter.view.FlutterView$ViewportMetrics
io.flutter.plugins.sharedpreferences.R$drawable: int notify_panel_notification_icon_bg
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzdj: long zzl
com.google.firebase.analytics.connector.internal.zzc: java.util.List zzc
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent,java.lang.Character)
io.flutter.plugin.common.StandardMessageCodec: void writeAlignment(java.io.ByteArrayOutputStream,int)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: int hashCode()
io.flutter.plugins.urllauncher.R$drawable: int notification_tile_bg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void access$000(android.content.SharedPreferences$Editor,int)
io.flutter.plugins.sharedpreferences.R$id: int tag_state_description
io.flutter.embedding.engine.systemchannels.TextInputChannel: void performPrivateCommand(int,java.lang.String,android.os.Bundle)
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_endColor
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String MSGID_SERVER
io.flutter.app.FlutterFragmentActivity: void onPause()
com.dexterous.flutterlocalnotifications.models.PersonDetails
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.SplashScreen provideSplashScreen()
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String COLOR
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getAuthToken()
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType
com.google.firebase.encoders.ValueEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(byte[])
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isSoftwareRenderingEnabled()
com.google.firebase.ktx.R$id: int info
com.google.firebase.iid.Metadata: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
io.flutter.plugins.connectivity.R$attr: int ttcIndex
io.flutter.plugin.platform.PlatformPlugin$1: void popSystemNavigator()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.String fisError
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService,io.flutter.FlutterInjector$1)
androidx.fragment.app.Fragment: void performStart()
com.google.firebase.installations.remote.InstallationResponse
com.google.firebase.components.Dependency: boolean isSet()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showProgress
com.google.firebase.FirebaseApp$UiExecutor
io.flutter.view.FlutterView: FlutterView(android.content.Context)
io.flutter.embedding.android.FlutterSurfaceView: void init()
io.flutter.plugins.pathprovider.R$dimen: int notification_right_side_padding_top
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzho getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String decreasedValue
com.google.firebase.installations.FirebaseInstallations: void updateFidListener(com.google.firebase.installations.local.PersistedInstallationEntry,com.google.firebase.installations.local.PersistedInstallationEntry)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: EventChannel$IncomingStreamRequestHandler(io.flutter.plugin.common.EventChannel,io.flutter.plugin.common.EventChannel$StreamHandler)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUMMARY_TEXT
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_RAW_RESOURCE_ERROR_MESSAGE
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_31
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_16
io.flutter.view.AccessibilityBridge: java.util.Map customAccessibilityActions
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$matrix
io.flutter.plugins.pathprovider.R$attr: int font
com.google.firebase.components.BuildConfig: int VERSION_CODE
com.google.firebase.FirebaseCommonRegistrar$$Lambda$4: java.lang.String extract(java.lang.Object)
io.flutter.plugins.pathprovider.R$dimen
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader this$0
com.google.android.gms.internal.measurement.zzdb: long zzg
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides LEFT
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setTtl(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMessagingStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.firebase.FirebaseApp: java.lang.String getName()
com.google.firebase.installations.R$attr: int fontProviderQuery
com.google.firebase.FirebaseApp$UiExecutor: FirebaseApp$UiExecutor()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngine get(java.lang.String)
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: AutoValue_PersistedInstallationEntry(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String ICON
com.google.firebase.analytics.connector.internal.zze
io.flutter.plugins.sharedpreferences.R$id: int notification_background
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin)
com.google.firebase.installations.FirebaseInstallations: void triggerOnException(java.lang.Exception)
com.google.firebase.encoders.ValueEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(float)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: java.lang.String CHANNEL_NAME
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: android.os.Handler mainHandler
com.google.firebase.analytics.connector.internal.zzc: boolean zzf(java.lang.String,java.lang.String,android.os.Bundle)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String NOTIFICATION_PREFIX_OLD
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValueLabelHint()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.android.FlutterFragment: void onFlutterUiNoLongerDisplayed()
com.google.firebase.analytics.connector.internal.zzg: com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener zza
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: android.app.Activity getActivity()
io.flutter.plugins.sharedpreferences.R$id: int async
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHARED_PREFERENCES_KEY
io.flutter.app.FlutterFragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.firebase.components.ComponentRuntime$Builder: ComponentRuntime$Builder(java.util.concurrent.Executor)
androidx.fragment.app.Fragment: int hashCode()
com.google.firebase.components.Dependency: java.lang.String toString()
com.google.firebase.components.Component$$Lambda$3: Component$$Lambda$3(java.lang.Object)
com.google.android.gms.internal.measurement.zzbu: int zza
com.dexterous.flutterlocalnotifications.models.PersonDetails: com.dexterous.flutterlocalnotifications.models.IconSource iconBitmapSource
com.google.android.gms.internal.measurement.zzcn: boolean zzf
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLargeIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.String refreshToken
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String)
com.google.firebase.datatransport.R$attr: int fontProviderAuthority
io.flutter.plugins.sharedpreferences.R$styleable: int[] GradientColorItem
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_ON_MS
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_14
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$400(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.dart.DartMessenger: void handleError(java.lang.Error)
io.flutter.plugins.connectivity.R$styleable: int Capability_queryPatterns
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect getGlobalRect()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean globalGeometryDirty
com.google.firebase.iid.FirebaseInstanceId: java.lang.String getSubtype()
com.google.firebase.R$string: int common_google_play_services_unknown_issue
androidx.fragment.app.Fragment: void performDestroyView()
io.flutter.view.AccessibilityBridge: android.view.View rootAccessibilityView
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.util.Map remoteMessageToMap(com.google.firebase.messaging.RemoteMessage)
io.flutter.embedding.android.FlutterActivity: boolean shouldAttachEngineToActivity()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_1
io.flutter.embedding.android.FlutterView: boolean hasRenderedFirstFrame()
io.flutter.FlutterInjector$1
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: java.lang.String encodedName
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setFlutterJNIFactory(io.flutter.embedding.engine.FlutterJNI$Factory)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: com.google.firebase.messaging.RemoteMessage getRemoteMessageForArguments(java.util.Map)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: java.lang.Object getSystemService(java.lang.String)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
io.flutter.view.AccessibilityBridge: boolean access$500(io.flutter.view.AccessibilityBridge)
io.flutter.plugins.connectivity.R$attr: int fontProviderPackage
io.flutter.plugin.platform.VirtualDisplayController$1$1: VirtualDisplayController$1$1(io.flutter.plugin.platform.VirtualDisplayController$1)
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_13
com.google.firebase.encoders.FieldDescriptor$Builder: FieldDescriptor$Builder(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzv)
io.flutter.embedding.engine.renderer.FlutterRenderer: void startRenderingToSurface(android.view.Surface)
com.google.firebase.messaging.NotificationParams: boolean hasImage()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context)
io.flutter.embedding.engine.FlutterEngineCache: void clear()
io.flutter.app.FlutterFragmentActivity: boolean hasPlugin(java.lang.String)
io.flutter.plugins.connectivity.R$styleable: int GradientColorItem_android_color
io.flutter.embedding.android.FlutterTextureView: void access$200(io.flutter.embedding.android.FlutterTextureView)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_SUMMARY_TEXT
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onUserLeaveHint()
com.dexterous.flutterlocalnotifications.models.Time: Time()
com.google.firebase.analytics.connector.internal.zza: com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener zza()
com.dexterous.flutterlocalnotifications.models.NotificationDetails
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DEFAULT_LIBRARY
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: PlatformChannel$AppSwitcherDescription(int,java.lang.String)
io.flutter.view.FlutterView: void setInitialRoute(java.lang.String)
com.google.firebase.messaging.FirebaseMessaging: void lambda$deleteToken$3$FirebaseMessaging(com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String VIEW_ITEM
io.flutter.plugin.platform.PlatformPlugin$2: io.flutter.plugin.platform.PlatformPlugin this$0
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
com.google.firebase.datatransport.R$dimen: int notification_media_narrow_margin
io.flutter.plugin.editing.InputConnectionAdaptor: int mClient
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getParentNodeId
io.flutter.plugins.connectivity.R$styleable: int FontFamily_fontProviderCerts
io.flutter.plugins.pathprovider.R$dimen: int notification_top_pad_large_text
com.google.firebase.installations.R$id: int chronometer
com.google.firebase.components.OptionalProvider$$Lambda$1: com.google.firebase.inject.Deferred$DeferredHandler arg$1
io.flutter.plugins.firebase.core.R$attr: int fontProviderAuthority
io.flutter.embedding.android.SplashScreen: boolean doesSplashViewRememberItsTransition()
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_centerX
com.google.firebase.messaging.RemoteMessage: java.lang.String getFrom()
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedInputFocusedNodeId
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_fontWeight
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void release()
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String SELECT_ITEM
com.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.view.FlutterView: void preRun()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void enqueueMessageProcessing(android.content.Context,android.content.Intent)
com.google.firebase.iid.ServiceStarter: java.lang.String resolveServiceClassName(android.content.Context,android.content.Intent)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.android.FlutterActivity: boolean shouldDestroyEngineWithHost()
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_low_pressed
com.google.firebase.analytics.connector.AnalyticsConnector: java.util.Map getUserProperties(boolean)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String timedOutEventName
com.google.firebase.installations.FirebaseInstallations: FirebaseInstallations(java.util.concurrent.ExecutorService,com.google.firebase.FirebaseApp,com.google.firebase.installations.remote.FirebaseInstallationServiceClient,com.google.firebase.installations.local.PersistedInstallation,com.google.firebase.installations.Utils,com.google.firebase.installations.local.IidStore,com.google.firebase.installations.RandomFidGenerator)
com.google.firebase.installations.R$drawable: int notification_bg
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder
android.support.v4.media.MediaMetadataCompat
com.google.android.gms.internal.measurement.zzby: com.google.android.gms.internal.measurement.zzck zze
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: AutoValue_TokenResult$Builder()
io.flutter.embedding.android.FlutterActivity: void detachFromFlutterEngine()
org.threeten.bp.chrono.ThaiBuddhistChronology: java.lang.Object readResolve()
com.google.firebase.iid.Store: boolean isEmpty()
com.google.firebase.installations.R$styleable: int FontFamilyFont_android_fontWeight
io.flutter.plugin.platform.PlatformPlugin: void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_endColor
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.firebase.ktx.R$id: int notification_main_column_container
androidx.lifecycle.CompositeGeneratedAdaptersObserver
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.firebase.installations.remote.AutoValue_TokenResult: long getTokenExpirationTimestamp()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean destroyEngineWithFragment
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_startX
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_5
io.flutter.view.AccessibilityBridge$Action: int value
com.google.firebase.installations.AutoValue_InstallationTokenResult$1
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: TextInputChannel$Configuration$Autofill(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.plugins.firebase.core.R$drawable: int notification_bg_low
io.flutter.app.FlutterFragmentActivity: void onNewIntent(android.content.Intent)
com.google.firebase.messaging.FirebaseMessaging$$Lambda$2: com.google.android.gms.tasks.Continuation $instance
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: java.lang.String TAG
com.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$1(android.content.Context)
io.flutter.plugins.connectivity.Connectivity: Connectivity(android.net.ConnectivityManager)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String PLATFORM_BRIGHTNESS
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String PURCHASE
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: android.content.Context activeContext()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: FlutterRenderer$SurfaceTextureFinalizerRunnable(long,io.flutter.embedding.engine.FlutterJNI)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
io.flutter.plugins.firebase.core.R$id: int async
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.Store$Token getTokenWithoutTriggeringSync(java.lang.String,java.lang.String)
com.google.firebase.R$styleable: int ColorStateListItem_alpha
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevTop
io.flutter.plugins.firebase.messaging.R$id: int tag_screen_reader_focusable
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String readErrorResponse(java.net.HttpURLConnection)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: boolean equals(java.lang.Object)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_9
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_24
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_ERROR_CODE
com.google.firebase.R$layout
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware
io.flutter.plugins.connectivity.R$attr: int fontProviderAuthority
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingEnd
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String TEXT_RESOURCE_SUFFIX
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.google.android.gms.internal.measurement.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.internal.DataCollectionConfigStorage: boolean readAutoDataCollectionEnabled()
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: io.flutter.plugins.connectivity.Connectivity access$100(io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver)
com.google.firebase.messaging.SharedPreferencesQueue: java.lang.String itemSeparator
com.google.firebase.messaging.EnhancedIntentService: com.google.android.gms.tasks.Task access$000(com.google.firebase.messaging.EnhancedIntentService,android.content.Intent)
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTERVIEW_TRANSPARENCY_MODE
io.flutter.embedding.engine.dart.DartMessenger$1
com.google.firebase.analytics.ktx.ConsentBuilder: void setAnalyticsStorage(com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$1: void encode(java.lang.Object,java.io.Writer)
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: java.lang.Object get()
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_notification_ticker
io.flutter.plugins.urllauncher.R$id: int tag_state_description
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray overlayLayerViews
com.google.firebase.ktx.FirebaseKt: com.google.firebase.FirebaseApp app(com.google.firebase.ktx.Firebase,java.lang.String)
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onNewIntent(android.content.Intent)
io.flutter.embedding.engine.systemchannels.PlatformChannel: void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler)
io.flutter.plugins.sharedpreferences.R$styleable: R$styleable()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT
com.google.firebase.ktx.BuildConfig: boolean DEBUG
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.engine.FlutterShellArgs shellArgs
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
com.google.firebase.components.EventBus$$Lambda$1: java.lang.Runnable lambdaFactory$(java.util.Map$Entry,com.google.firebase.events.Event)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context)
com.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()
io.flutter.util.Preconditions: void checkState(boolean,java.lang.Object)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String VMSERVICE_SNAPSHOT_LIBRARY
com.google.firebase.encoders.annotations.Encodable
io.flutter.plugins.sharedpreferences.R$id: int info
io.flutter.embedding.engine.systemchannels.LifecycleChannel: java.lang.String TAG
io.flutter.plugins.connectivity.R$dimen: int notification_large_icon_height
io.flutter.plugins.urllauncher.R$integer: int status_bar_notification_info_maxnum
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: long motionEventId
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry access$700(io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.R$color: int notification_action_color_filter
io.flutter.embedding.engine.dart.DartMessenger: int getPendingChannelResponseCount()
androidx.media.AudioAttributesImplBase
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency scheduledNotificationRepeatFrequency
io.flutter.embedding.engine.renderer.FlutterRenderer: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_updating_text
com.google.firebase.R$styleable: int GradientColor_android_endY
com.google.firebase.messaging.Constants$ScionAnalytics$MessageType: java.lang.String DATA_MESSAGE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER
com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setToken(java.lang.String)
io.flutter.embedding.android.FlutterFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher: void didChangeEditingState(boolean,boolean,boolean)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderTemporaryDirectory()
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_28
com.google.firebase.iid.FirebaseInstanceIdService: FirebaseInstanceIdService()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getInitialRoute()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String groupId
com.google.firebase.messaging.RemoteMessage$Notification: RemoteMessage$Notification(com.google.firebase.messaging.NotificationParams,com.google.firebase.messaging.RemoteMessage$1)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setResponseCode(com.google.firebase.installations.remote.InstallationResponse$ResponseCode)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES
com.google.firebase.components.CycleDetector$ComponentNode: boolean isLeaf()
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: void onEngineWillDestroy()
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_unsupported_text
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver
com.google.firebase.heartbeatinfo.AutoValue_SdkHeartBeatResult: long getMillis()
com.google.firebase.encoders.FieldDescriptor: com.google.firebase.encoders.FieldDescriptor$Builder builder(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
com.google.firebase.installations.remote.TokenResult
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getInstanceId()
io.flutter.embedding.android.KeyboardManager: void onUnhandled(android.view.KeyEvent)
com.google.firebase.installations.FirebaseInstallations: java.lang.String API_KEY_VALIDATION_MSG
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getTitleLocalizationKey()
com.google.firebase.ktx.R$attr
androidx.core.app.ComponentActivity: ComponentActivity()
com.google.firebase.installations.interop.R$dimen: int notification_small_icon_background_padding
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel getLocalizationChannel()
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableSuggestions
io.flutter.embedding.engine.dart.PlatformTaskQueue
com.google.firebase.platforminfo.KotlinDetector: KotlinDetector()
com.google.firebase.installations.R$style: int TextAppearance_Compat_Notification
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: SingleViewPresentation$WindowManagerHandler(android.view.WindowManager,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
com.google.firebase.FirebaseApp: java.lang.String normalize(java.lang.String)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void synthesizeMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.messaging.FirebaseMessagingService: void onDeletedMessages()
io.flutter.plugin.common.MethodCall: java.lang.Object argument(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean obscureText
io.flutter.app.FlutterApplication
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: DefaultHeartBeatInfo$$Lambda$1(android.content.Context)
com.google.firebase.iid.RequestDeduplicator$$Lambda$0: com.google.firebase.iid.RequestDeduplicator arg$1
androidx.fragment.app.Fragment: boolean mPerformedCreateView
com.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getToken(boolean)
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2112(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.google.android.gms.internal.measurement.zzdb
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface getContentProviderControlSurface()
io.flutter.plugins.pathprovider.R$drawable: int notify_panel_notification_icon_bg
com.google.firebase.R$styleable: int FontFamilyFont_fontWeight
androidx.core.app.JobIntentService: java.lang.String TAG
com.google.firebase.FirebaseExceptionMapper
io.flutter.plugins.firebase.messaging.R$id: int auto
com.google.android.gms.internal.measurement.zzy: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.core.R$id: int actions
com.google.firebase.messaging.DisplayNotification: android.content.Context context
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_light_default
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue()
com.google.firebase.messaging.EnhancedIntentService: void finishTask(android.content.Intent)
io.flutter.plugin.editing.TextInputPlugin: void access$200(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugins.pathprovider.R$id: int tag_on_receive_content_mime_types
io.flutter.FlutterInjector: void setInstance(io.flutter.FlutterInjector)
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel)
io.flutter.plugins.pathprovider.R$color: int notification_action_color_filter
com.google.firebase.R$styleable: int GradientColor_android_endColor
com.google.firebase.installations.BuildConfig: java.lang.String BUILD_TYPE
com.google.firebase.iid.WithinAppServiceConnection$BindRequest$$Lambda$1: void onComplete(com.google.android.gms.tasks.Task)
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen splashScreen
com.google.firebase.internal.DataCollectionConfigStorage: com.google.firebase.events.Publisher publisher
com.google.firebase.iid.InstanceIdResultImpl: java.lang.String getId()
io.flutter.view.FlutterView: void addFirstFrameListener(io.flutter.view.FlutterView$FirstFrameListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_MESSAGE
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: AutoValue_PersistedInstallationEntry$Builder()
com.google.firebase.installations.interop.BuildConfig: boolean DEBUG
com.google.firebase.messaging.MessagingAnalytics$$Lambda$0: java.lang.Object apply(java.lang.Object)
io.flutter.view.FlutterView
com.google.firebase.FirebaseExceptionMapper: java.lang.Exception getException(com.google.android.gms.common.api.Status)
androidx.activity.OnBackPressedCallback: void handleOnBackPressed()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String TRANSACTION_ID
io.flutter.embedding.engine.dart.DartExecutor
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $VALUES
com.google.firebase.datatransport.R$id: int notification_main_column_container
com.google.android.gms.internal.measurement.zzcp: com.google.android.gms.internal.measurement.zzcp zzn
io.flutter.plugin.common.StandardMessageCodec: java.nio.charset.Charset UTF8
io.flutter.view.VsyncWaiter: float fps
io.flutter.util.ViewUtils: android.app.Activity getActivity(android.content.Context)
com.google.firebase.encoders.EncodingException: EncodingException(java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onNewIntent(android.content.Intent)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number eventTime
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$2: android.content.Intent arg$2
io.flutter.plugins.firebase.core.R$attr: int nestedScrollViewStyle
com.google.android.gms.internal.measurement.zzbw: boolean zzj
com.google.firebase.analytics.connector.AnalyticsConnectorImpl$1
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4200(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.firebase.R$dimen: int compat_control_corner_material
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String hint
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void onMoveToBackground()
io.flutter.view.AccessibilityBridge: boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.components.R: R()
com.google.firebase.messaging.NotificationParams: int[] getLightSettings()
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_6
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
io.flutter.plugin.mouse.MouseCursorPlugin$2
io.flutter.plugins.firebase.messaging.R$styleable: int ColorStateListItem_android_color
io.flutter.plugins.connectivity.R$drawable: R$drawable()
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: android.net.ConnectivityManager$NetworkCallback getNetworkCallback()
io.flutter.plugin.platform.PlatformPlugin$1: io.flutter.plugin.platform.PlatformPlugin this$0
com.google.firebase.messaging.FirebaseMessaging: void lambda$new$0$FirebaseMessaging(com.google.firebase.iid.FirebaseInstanceId)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_12
io.flutter.embedding.engine.systemchannels.PlatformChannel
io.flutter.plugins.firebase.messaging.R$styleable: int ColorStateListItem_alpha
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueue: DartMessenger$DefaultTaskQueue()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry textureRegistry
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: ComponentDiscovery$MetadataRegistrarNameRetriever(java.lang.Class,com.google.firebase.components.ComponentDiscovery$1)
com.google.android.gms.measurement.internal.zzaa: android.os.Parcelable$Creator CREATOR
com.google.firebase.installations.remote.AutoValue_InstallationResponse: boolean equals(java.lang.Object)
io.flutter.app.FlutterPluginRegistry: java.util.List mNewIntentListeners
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
com.google.firebase.installations.interop.R$attr: int fontProviderFetchTimeout
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String SHARED_PREFERENCES_NAME
com.google.firebase.iid.Metadata: int iidImplementation
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_tileMode
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: FlutterFirebaseMessagingBackgroundExecutor()
com.google.firebase.datatransport.TransportRegistrar
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CATEGORY
io.flutter.plugins.firebase.messaging.R$style: int TextAppearance_Compat_Notification_Info
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
com.google.firebase.messaging.ImageDownload$$Lambda$0: ImageDownload$$Lambda$0(com.google.firebase.messaging.ImageDownload)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setDatabaseUrl(java.lang.String)
com.google.firebase.iid.FirebaseInstanceId: boolean tokenNeedsRefresh(com.google.firebase.iid.Store$Token)
com.google.android.gms.internal.measurement.zzdj: int zze
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getSourceNodeId
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_PROJECT_NUMBER
com.google.firebase.datatransport.R$styleable: int FontFamily_fontProviderPackage
com.google.firebase.ktx.FirebaseKt: java.lang.String LIBRARY_NAME
com.google.firebase.components.OptionalProvider: java.lang.Object lambda$static$1()
com.google.firebase.components.ComponentRuntime$$Lambda$1: com.google.firebase.components.ComponentRuntime arg$1
com.google.firebase.installations.R$id: int right_side
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource valueOf(java.lang.String)
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_11
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String X_ANDROID_CERT_HEADER_KEY
io.flutter.embedding.android.FlutterView: java.lang.String TAG
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String mPackageName
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task deleteToken(java.util.Map)
com.dexterous.flutterlocalnotifications.models.Time: com.dexterous.flutterlocalnotifications.models.Time from(java.util.Map)
com.google.firebase.iid.WithinAppServiceConnection$BindRequest: com.google.android.gms.tasks.TaskCompletionSource taskCompletionSource
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType AD_STORAGE
io.flutter.plugins.urllauncher.R$id: int icon
com.google.firebase.encoders.json.JsonDataEncoderBuilder: void lambda$static$1(java.lang.String,com.google.firebase.encoders.ValueEncoderContext)
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String ENABLED
com.google.firebase.FirebaseNetworkException
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.firebase.installations.interop.R$id: int notification_main_column_container
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
io.flutter.embedding.android.FlutterView: void autofill(android.util.SparseArray)
com.google.firebase.messaging.ImageDownload: com.google.firebase.messaging.ImageDownload create(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String DESCRIPTION
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineDetachedFromFlutterView()
io.flutter.embedding.android.FlutterImageView: boolean acquireLatestImage()
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Deferred getDeferred(java.lang.Class)
io.flutter.plugins.firebase.messaging.R$id: R$id()
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
io.flutter.embedding.android.FlutterTextureView$1: io.flutter.embedding.android.FlutterTextureView this$0
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[])
com.google.firebase.R$styleable: int FontFamily_fontProviderQuery
io.flutter.app.FlutterFragmentActivity: void onLowMemory()
io.flutter.plugins.connectivity.R$id: int icon_group
io.flutter.embedding.engine.FlutterShellArgs: io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT
com.google.firebase.analytics.connector.internal.zze: void zzb(java.util.Set)
io.flutter.view.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.google.android.gms.internal.measurement.zzdz: java.lang.String zze
com.google.firebase.datatransport.R$id: int forever
io.flutter.plugins.pathprovider.R$drawable: R$drawable()
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: AutoValue_TokenResult$Builder(com.google.firebase.installations.remote.TokenResult,com.google.firebase.installations.remote.AutoValue_TokenResult$1)
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_fontWeight
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_enable_button
com.google.firebase.messaging.TopicsStore: boolean addTopicOperation(com.google.firebase.messaging.TopicOperation)
io.flutter.embedding.engine.renderer.FlutterRenderer: void markTextureFrameAvailable(long)
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener: void onIsolateServiceIdAvailable(java.lang.String)
com.google.firebase.FirebaseCommonRegistrar: java.lang.String DEVICE_NAME
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView getFlutterNativeView()
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String TRACK_CONVERSIONS
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String UNLOCK_ACHIEVEMENT
com.google.firebase.installations.R$dimen: int notification_top_pad_large_text
com.google.firebase.messaging.FirebaseMessaging$$Lambda$1: FirebaseMessaging$$Lambda$1(com.google.firebase.messaging.FirebaseMessaging)
io.flutter.embedding.engine.plugins.service.ServiceAware: void onDetachedFromService()
com.google.firebase.messaging.RemoteMessage$Notification: boolean getSticky()
com.google.firebase.iid.FirebaseInstanceId: java.lang.Object awaitTask(com.google.android.gms.tasks.Task)
com.google.firebase.installations.GetAuthTokenListener
io.flutter.plugins.urllauncher.R$id: int icon_group
io.flutter.plugins.firebase.core.R$dimen: int notification_content_margin_start
com.google.firebase.installations.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
com.google.firebase.events.Subscriber: void unsubscribe(java.lang.Class,com.google.firebase.events.EventHandler)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails
com.google.firebase.R$dimen: int notification_top_pad_large_text
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback: void registerWith(io.flutter.plugin.common.PluginRegistry)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
com.google.firebase.iid.RequestDeduplicator: RequestDeduplicator(java.util.concurrent.Executor)
io.flutter.plugins.urllauncher.R$id: int italic
io.flutter.embedding.engine.systemchannels.LifecycleChannel
io.flutter.plugins.urllauncher.R$styleable: int ColorStateListItem_android_alpha
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String NAME
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.google.firebase.iid.WithinAppServiceConnection: WithinAppServiceConnection(android.content.Context,java.lang.String)
io.flutter.Log: int logLevel
io.flutter.plugins.pathprovider.R$id: int title
io.flutter.plugins.firebase.core.R$style: int Widget_Compat_NotificationActionContainer
com.google.firebase.messaging.TopicsSyncTask: void run()
com.google.firebase.FirebaseCommonRegistrar: java.lang.String TARGET_SDK
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType)
io.flutter.plugins.firebase.messaging.R$dimen: int notification_large_icon_height
io.flutter.plugins.sharedpreferences.R$styleable: int ColorStateListItem_android_alpha
com.google.firebase.installations.R$id: int info
io.flutter.view.TextureRegistry
io.flutter.plugins.urllauncher.R$styleable: int[] FontFamily
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
com.google.firebase.inject.Deferred$DeferredHandler
com.google.firebase.messaging.Constants$MessageTypes: java.lang.String DELETED
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable val$self
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousActions
com.google.firebase.FirebaseApp$UserUnlockReceiver: java.util.concurrent.atomic.AtomicReference INSTANCE
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_tileMode
com.google.firebase.installations.FirebaseInstallationsException: FirebaseInstallationsException(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)
com.google.firebase.components.Component: boolean isEagerInDefaultApp()
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousFlags
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
com.google.firebase.installations.R$styleable: int[] ColorStateListItem
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean autocorrect
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerPropertiesList
io.flutter.embedding.android.FlutterImageView: void detachFromRenderer()
com.google.firebase.iid.SyncTask: android.os.PowerManager$WakeLock syncWakeLock
com.google.firebase.installations.R$styleable: int GradientColor_android_gradientRadius
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
com.google.firebase.iid.FcmBroadcastProcessor: FcmBroadcastProcessor(android.content.Context)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValue(java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterActivity: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.flutter.plugins.firebase.core.R$styleable: int FontFamily_fontProviderQuery
com.google.android.gms.measurement.AppMeasurementJobService
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setResponseCode(com.google.firebase.installations.remote.TokenResult$ResponseCode)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DESTROY_ENGINE_WITH_FRAGMENT
io.flutter.plugin.editing.TextInputPlugin: boolean handleKeyEvent(android.view.KeyEvent)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_DART_PROFILING
com.google.firebase.FirebaseOptions: java.lang.String apiKey
com.google.firebase.R$string
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: io.flutter.plugin.common.EventChannel$EventSink access$200(io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: void onStateUpdate(com.google.android.play.core.splitinstall.SplitInstallSessionState)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: boolean isBitSet(long,int)
io.flutter.plugins.connectivity.R$layout: int notification_action_tombstone
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: MethodCallHandlerImpl(android.content.Context)
com.google.firebase.R$dimen: int compat_notification_large_icon_max_height
com.google.firebase.installations.FirebaseInstallationsApi: com.google.firebase.installations.internal.FidListenerHandle registerFidListener(com.google.firebase.installations.internal.FidListener)
io.flutter.plugins.pathprovider.PathProviderPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.FlutterOverlaySurface: int id
io.flutter.plugin.common.MethodChannel$Result: void notImplemented()
io.flutter.plugin.editing.TextInputPlugin: void hideTextInput(android.view.View)
com.google.firebase.encoders.json.BuildConfig: boolean DEBUG
io.flutter.embedding.android.FlutterSurfaceView: void pause()
com.google.firebase.iid.FirebaseInstanceIdService: android.os.IBinder onBind(android.content.Intent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onRestoreInstanceState(android.os.Bundle)
io.flutter.plugins.pathprovider.R$styleable: int[] FontFamily
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: android.view.View embeddedView
com.google.firebase.messaging.FirelogAnalyticsEvent: java.lang.String eventType
com.google.firebase.components.Component$$Lambda$3: java.lang.Object arg$1
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils
com.google.firebase.installations.AwaitListener: AwaitListener()
com.google.android.gms.internal.measurement.zzcz: long zzf
com.google.firebase.installations.remote.RequestLimiter: boolean isSuccessfulOrRequiresNewFidCreation(int)
com.google.firebase.datatransport.TransportRegistrar$$Lambda$1: com.google.firebase.datatransport.TransportRegistrar$$Lambda$1 instance
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
io.flutter.plugin.common.EventChannel$StreamHandler: void onCancel(java.lang.Object)
org.threeten.bp.chrono.JapaneseEra: java.lang.Object writeReplace()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MESSAGES
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: FlutterMutatorView$1(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView,android.view.View$OnFocusChangeListener,android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler
io.flutter.Log: int WARN
io.flutter.embedding.android.FlutterFragment: boolean shouldDestroyEngineWithHost()
com.google.firebase.heartbeatinfo.HeartBeatConsumerComponent$1
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.view.AccessibilityBridge$Action: AccessibilityBridge$Action(java.lang.String,int,int)
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewAttached(android.view.View)
com.google.firebase.messaging.TopicsSubscriber: long MAX_DELAY_SEC
io.flutter.plugins.firebase.core.R$drawable: int notification_action_background
org.threeten.bp.zone.ZoneOffsetTransition
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$3: FcmBroadcastProcessor$$Lambda$3()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzs,int)
com.google.firebase.FirebaseError: int ERROR_CREDENTIAL_ALREADY_IN_USE
io.flutter.plugins.connectivity.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.plugins.firebase.core.R$dimen: int notification_top_pad
com.google.firebase.FirebaseApp$BackgroundStateChangeListener
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onUserLeaveHint()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(boolean)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: byte[] buffer()
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat heartBeat
com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setTokenExpirationTimestamp(long)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.flutter.plugin.editing.TextInputPlugin: boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String pathToBundle
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_text_light_normal_background
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.lang.String DELIMITER
com.google.firebase.encoders.json.JsonDataEncoderBuilder: java.util.Map objectEncoders
com.google.firebase.installations.FirebaseInstallations$3: int[] $SwitchMap$com$google$firebase$installations$remote$TokenResult$ResponseCode
com.google.firebase.installations.remote.AutoValue_InstallationResponse
io.flutter.view.FlutterNativeView: void attachViewAndActivity(io.flutter.view.FlutterView,android.app.Activity)
com.google.firebase.messaging.FirebaseMessaging$$Lambda$3: com.google.android.gms.tasks.TaskCompletionSource arg$2
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugin.platform.PlatformPlugin$1: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
androidx.fragment.app.FragmentActivity: void onResume()
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.components.CycleDetector$ComponentNode: java.util.Set dependents
com.google.firebase.messaging.FirebaseMessaging$$Lambda$0: FirebaseMessaging$$Lambda$0(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.iid.FirebaseInstanceId)
io.flutter.view.AccessibilityBridge$SemanticsNode: int currentValueLength
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0
com.google.firebase.messaging.R$string: R$string()
io.flutter.embedding.android.FlutterView$3: void onFlutterUiDisplayed()
io.flutter.view.AccessibilityBridge$Action
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: java.lang.String sdkName
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale resolveNativeLocale(java.util.List)
io.flutter.embedding.android.FlutterImageView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.firebase.FirebaseOptions: java.lang.String gaTrackingId
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void clearFocus(int)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
com.google.firebase.messaging.SharedPreferencesQueue: boolean bulkOperation
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
io.flutter.app.FlutterFragmentActivity: io.flutter.view.FlutterView createFlutterView(android.content.Context)
io.flutter.plugins.urllauncher.R$attr: int fontProviderQuery
com.google.android.gms.internal.measurement.zzdd: com.google.android.gms.internal.measurement.zzdd zzg
io.flutter.plugin.platform.PlatformPlugin$2: PlatformPlugin$2(io.flutter.plugin.platform.PlatformPlugin)
com.google.firebase.installations.FirebaseInstallationsApi: com.google.android.gms.tasks.Task getToken(boolean)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterTextureView flutterTextureView
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: android.content.Context context
com.google.firebase.messaging.FirebaseMessaging: FirebaseMessaging(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)
io.flutter.embedding.android.FlutterView
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CP1
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String access$000(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
com.google.firebase.messaging.NotificationParams: java.lang.String keyWithOldPrefix(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix matrix
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
com.google.firebase.messaging.RemoteMessage$MessagePriority
com.google.firebase.installations.R$styleable
io.flutter.plugins.urllauncher.R$id: int action_image
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.google.firebase.FirebaseError: int ERROR_OPERATION_NOT_ALLOWED
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String SCREEN_NAME
com.google.firebase.iid.FirebaseInstanceId$$Lambda$0: FirebaseInstanceId$$Lambda$0(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onUserLeaveHint()
io.flutter.plugins.firebase.messaging.R$drawable: int notification_template_icon_low_bg
io.flutter.view.VsyncWaiter: VsyncWaiter(float)
com.google.firebase.iid.FirebaseInstanceId: java.lang.Object awaitTaskAllowOnMainThread(com.google.android.gms.tasks.Task)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List decreasedValueAttributes
com.google.firebase.installations.R$id: int none
com.google.android.gms.internal.measurement.zzdu: double zzj
com.google.firebase.analytics.connector.internal.zzf: void onEvent(java.lang.String,java.lang.String,android.os.Bundle,long)
androidx.fragment.app.Fragment: Fragment(int)
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_android_ttcIndex
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map pendingReplies
io.flutter.embedding.android.FlutterSplashView$3
com.google.firebase.R$dimen: int compat_button_padding_vertical_material
io.flutter.embedding.engine.loader.ResourceExtractor$1: boolean accept(java.io.File,java.lang.String)
com.google.firebase.installations.FirebaseInstallations: java.lang.String cachedFid
com.google.firebase.datatransport.R$id: int line1
io.flutter.plugins.sharedpreferences.R$string
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
com.google.firebase.FirebaseError: int ERROR_NETWORK_REQUEST_FAILED
androidx.fragment.app.Fragment: boolean mMenuVisible
io.flutter.view.AccessibilityBridge: int FIRST_RESOURCE_ID
com.google.firebase.installations.R$id: int forever
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String COUPON
io.flutter.plugin.mouse.MouseCursorPlugin: MouseCursorPlugin(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.plugins.sharedpreferences.R$id: int tag_unhandled_key_listeners
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzhz zzg
com.google.firebase.iid.GmsRpc$$Lambda$0: java.lang.Object then(com.google.android.gms.tasks.Task)
com.google.firebase.components.BuildConfig: java.lang.String APPLICATION_ID
com.google.firebase.installations.remote.RequestLimiter: RequestLimiter()
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.Long timestamp
com.google.firebase.ktx.R$attr: R$attr()
io.flutter.view.VsyncWaiter$1: io.flutter.view.VsyncWaiter this$0
io.flutter.embedding.android.FlutterView$1: FlutterView$1(io.flutter.embedding.android.FlutterView)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean allowWhileIdle
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setData(java.util.Map)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getIcon()
com.google.firebase.installations.interop.R$id: int blocking
com.google.firebase.components.Component$$Lambda$2: Component$$Lambda$2(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel()
androidx.fragment.app.Fragment$2
com.google.firebase.iid.Registrar
io.flutter.embedding.android.FlutterView$1: io.flutter.embedding.android.FlutterView this$0
io.flutter.embedding.android.FlutterFragment$1: FlutterFragment$1(io.flutter.embedding.android.FlutterFragment,boolean)
com.google.firebase.iid.FirebaseInstanceId$$Lambda$3
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.FlutterTextUtils: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugins.sharedpreferences.R$id: int icon
com.dexterous.flutterlocalnotifications.models.Time
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.flutter.plugin.platform.PlatformPlugin: void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_wear_update_text
androidx.fragment.app.Fragment: void onStop()
org.threeten.bp.Month: org.threeten.bp.Month[] values()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE
io.flutter.plugins.sharedpreferences.R$layout: int custom_dialog
com.google.firebase.inject.Deferred$DeferredHandler: void handle(com.google.firebase.inject.Provider)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzL
com.google.firebase.components.Component: boolean isAlwaysEager()
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String summaryText
com.google.firebase.messaging.FirebaseMessaging
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
io.flutter.view.FlutterView: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
io.flutter.plugins.sharedpreferences.R$layout: int notification_template_part_time
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigTextStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.firebase.ktx.R$drawable
com.google.firebase.analytics.zzc: java.util.Map zzc(java.lang.String,java.lang.String,boolean)
io.flutter.plugins.urllauncher.R$attr
io.flutter.util.PathUtils: java.lang.String getCacheDirectory(android.content.Context)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: HeartBeatInfoStorage(android.content.Context)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] $VALUES
io.flutter.plugins.pathprovider.R$id: int italic
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides[] values()
io.flutter.embedding.android.FlutterTextureView$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.google.firebase.installations.R$styleable: int GradientColor_android_centerY
io.flutter.app.FlutterFragmentActivity: void onStop()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_RED
com.google.firebase.datatransport.R$id: int notification_background
com.google.firebase.ktx.R: R()
com.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0: com.google.firebase.components.ComponentFactory $instance
com.google.android.gms.internal.measurement.zzdx
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_endX
com.google.android.gms.internal.measurement.zzcd: int zza
com.google.firebase.R$styleable: int FontFamilyFont_android_fontWeight
io.flutter.plugin.common.EventChannel$EventSink: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.datatransport.R$id: int action_container
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_dark_pressed
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$1: com.google.firebase.messaging.FirebaseMessaging$AutoInit arg$1
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$1: com.google.firebase.encoders.ObjectEncoder lambdaFactory$()
org.threeten.bp.OffsetDateTime: java.lang.Object readResolve()
io.flutter.embedding.android.SplashScreen: android.view.View createSplashView(android.content.Context,android.os.Bundle)
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int UP
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.embedding.android.FlutterActivity: int FLUTTER_VIEW_ID
com.google.firebase.ktx.FirebaseKt
io.flutter.plugin.platform.PlatformViewsController: boolean validateDirection(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String)
com.google.firebase.components.Dependency: boolean isDirectInjection()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin
com.google.firebase.R$id: int icon
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String PRICE
io.flutter.view.FlutterView$2: void surfaceDestroyed(android.view.SurfaceHolder)
io.flutter.plugins.connectivity.R$styleable: int ColorStateListItem_android_color
com.google.firebase.components.DependencyCycleException
com.google.firebase.components.ComponentRuntime$$Lambda$3
io.flutter.view.FlutterMain: void startInitialization(android.content.Context)
io.flutter.embedding.android.FlutterFragment: android.app.Activity getActivity()
com.google.firebase.datatransport.R$attr: R$attr()
io.flutter.view.AccessibilityBridge$Flag
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$1: android.content.Intent arg$2
com.google.firebase.iid.WithinAppServiceBinder$IntentHandler: com.google.android.gms.tasks.Task handle(android.content.Intent)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: java.lang.String TAG
com.google.firebase.iid.internal.R
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Provider delegate
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.analytics.FirebaseAnalytics$UserProperty: java.lang.String ALLOW_AD_PERSONALIZATION_SIGNALS
com.google.android.gms.internal.measurement.zzck: int zza
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void show()
io.flutter.plugins.urllauncher.R$drawable: int notification_icon_background
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PAYLOAD
com.google.firebase.installations.remote.InstallationResponse: java.lang.String getUri()
io.flutter.plugin.platform.PlatformViewsController: void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.plugins.sharedpreferences.R$color
io.flutter.plugins.urllauncher.R$id: int chronometer
com.google.firebase.datatransport.R$string: int common_google_play_services_unknown_issue
com.google.firebase.components.ComponentRuntime$$Lambda$1: com.google.firebase.components.Component arg$2
io.flutter.plugins.firebase.core.R$attr
io.flutter.app.FlutterActivityDelegate: void onTrimMemory(int)
io.flutter.plugins.connectivity.R$integer: int status_bar_notification_info_maxnum
com.google.firebase.ktx.R$dimen: int notification_right_icon_size
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageTypeForScion(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.firebase.FirebaseError: int ERROR_INVALID_USER_TOKEN
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_25
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_centerX
io.flutter.plugins.firebase.core.R$styleable: int ColorStateListItem_android_color
io.flutter.plugins.connectivity.R$color: int notification_icon_bg_color
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_android_fontWeight
com.google.firebase.messaging.DisplayNotification: com.google.firebase.messaging.ImageDownload startImageDownloadInBackground()
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.SoundSource soundSource
com.google.firebase.emulators.EmulatedServiceSettings
com.google.android.gms.internal.measurement.zzcv: com.google.android.gms.internal.measurement.zzcv[] values()
io.flutter.embedding.engine.loader.FlutterLoader$1: FlutterLoader$1(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar publish(java.lang.Object)
io.flutter.embedding.android.FlutterFragment: void onBackPressed()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.core.app.JobIntentService: boolean DEBUG
com.google.firebase.components.Lazy: java.lang.Object instance
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CACHE_CONTROL_DIRECTIVE
com.google.android.gms.internal.measurement.zzbw: boolean zzl
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.engine.systemchannels.NavigationChannel
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_22
io.flutter.view.AccessibilityBridge$SemanticsNode: android.text.SpannableString createSpannableString(java.lang.String,java.util.List)
com.google.android.gms.internal.measurement.zzo: zzo()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String ABT_EXPERIMENT
io.flutter.plugins.urllauncher.R$dimen: int notification_top_pad_large_text
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
com.google.firebase.iid.FirebaseInstanceId$$Lambda$1: java.util.concurrent.Executor $instance
com.google.firebase.installations.R$id: int normal
io.flutter.embedding.android.FlutterTextureView: boolean isAttachedToFlutterRenderer
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.content.Context context
com.google.android.gms.internal.measurement.zzds: com.google.android.gms.internal.measurement.zzhy zzf
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.embedding.android.FlutterSplashView: java.lang.String previousCompletedSplashIsolate
com.google.firebase.heartbeatinfo.AutoValue_SdkHeartBeatResult: AutoValue_SdkHeartBeatResult(java.lang.String,long)
com.google.firebase.messaging.EnhancedIntentService: void lambda$onStartCommand$1$EnhancedIntentService(android.content.Intent,com.google.android.gms.tasks.Task)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus ACTIVITY_NOT_FOUND
io.flutter.plugin.platform.PlatformViewsController$1: PlatformViewsController$1(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugin.editing.TextInputPlugin: void notifyViewEntered()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void newline(int)
io.flutter.plugins.connectivity.R$attr: int fontProviderCerts
com.google.firebase.R$layout: R$layout()
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,double)
io.flutter.plugins.firebase.core.R$dimen: int notification_large_icon_height
com.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task sendMessage(java.util.Map)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer color
com.google.firebase.messaging.TopicOperation: com.google.firebase.messaging.TopicOperation from(java.lang.String)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: FlutterFirebaseMessagingStore()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelId
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
com.google.firebase.iid.WakeLockHolder: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)
io.flutter.embedding.android.DrawableSplashScreen: android.view.View createSplashView(android.content.Context,android.os.Bundle)
com.google.android.gms.internal.measurement.zzdj: int zza
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendSdkHeartBeat(java.lang.String,long)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int edgeFlags
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String AD_FORMAT
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_icon_disabled
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_USE_TEST_FONTS
io.flutter.plugins.sharedpreferences.R$drawable: int notification_template_icon_low_bg
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: PersistedInstallation$RegistrationStatus(java.lang.String,int)
io.flutter.plugins.urllauncher.R$id: int tag_on_apply_window_listener
org.threeten.bp.zone.ZoneOffsetTransitionRule
io.flutter.plugins.firebase.messaging.R$integer
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventWrapperEncoder: void encode(com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventWrapper,com.google.firebase.encoders.ObjectEncoderContext)
io.flutter.plugin.common.StandardMessageCodec: void writeLong(java.io.ByteArrayOutputStream,long)
io.flutter.plugins.pathprovider.R$dimen: int notification_right_icon_size
com.google.firebase.iid.FirebaseInstanceId: boolean syncScheduledOrRunning
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String text
com.google.firebase.messaging.ImageDownload$$Lambda$0: com.google.firebase.messaging.ImageDownload arg$1
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int STYLUS
com.google.firebase.components.Component: com.google.firebase.components.ComponentFactory factory
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_MESSAGING_SENDER_ID
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean channelShowBadge
io.flutter.plugin.common.MessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
com.google.android.gms.internal.measurement.zzbw: boolean zzh
com.google.firebase.components.ComponentDiscovery$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(java.lang.String)
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withFisError(java.lang.String)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int overrideId
io.flutter.plugins.urllauncher.R$dimen: int notification_action_text_size
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_METHOD
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_CATEGORY5
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventWrapper: com.google.firebase.messaging.FirelogAnalyticsEvent firelogAnalyticsEvent
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware: void onDetachedFromBroadcastReceiver()
io.flutter.embedding.android.FlutterSplashView: android.view.View access$300(io.flutter.embedding.android.FlutterSplashView)
com.google.firebase.installations.local.PersistedInstallation: com.google.firebase.FirebaseApp firebaseApp
com.google.android.gms.internal.measurement.zzdb: int zza
com.google.firebase.components.EventBus: void subscribe(java.lang.Class,java.util.concurrent.Executor,com.google.firebase.events.EventHandler)
io.flutter.plugins.urllauncher.R$layout: R$layout()
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: long id()
com.google.firebase.installations.R$id: int action_text
io.flutter.plugin.platform.PlatformPlugin: void destroy()
com.google.firebase.installations.interop.R$id: int action_text
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: java.lang.String token
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
io.flutter.plugins.urllauncher.R$id: int tag_on_receive_content_listener
com.google.firebase.R$styleable: int FontFamily_fontProviderCerts
io.flutter.plugins.pathprovider.R$layout: int notification_action_tombstone
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions options
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener
io.flutter.plugins.pathprovider.R$id: int forever
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TEXT
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventWrapperEncoder: void encode(java.lang.Object,java.lang.Object)
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_14
com.google.firebase.iid.R: R()
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: PlatformChannel$HapticFeedbackType(java.lang.String,int,java.lang.String)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: MethodChannel$IncomingMethodCallHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler)
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$3
com.google.firebase.installations.interop.R$id: int forever
com.google.firebase.installations.FirebaseInstallations: java.lang.String LOCKFILE_NAME_GENERATE_FID
com.google.firebase.ktx.R$styleable: int FontFamilyFont_android_ttcIndex
io.flutter.plugin.common.StandardMessageCodec: byte LIST
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.firebase.components.ComponentRuntime$$Lambda$3: ComponentRuntime$$Lambda$3(com.google.firebase.components.OptionalProvider,com.google.firebase.inject.Provider)
io.flutter.plugin.editing.ListenableEditingState$1: io.flutter.plugin.editing.ListenableEditingState this$0
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLedDetails(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_centerColor
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.gms.internal.measurement.zzdz: com.google.android.gms.internal.measurement.zzhz zzf
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_4
com.google.firebase.FirebaseApp: void initializeAllApis()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder dartEntrypoint(java.lang.String)
io.flutter.app.FlutterPluginRegistry: void destroy()
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_tint
com.google.firebase.messaging.DisplayNotification: void showNotification(com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo)
com.google.firebase.installations.remote.TokenResult$Builder: com.google.firebase.installations.remote.TokenResult build()
com.google.firebase.analytics.connector.internal.zzc: java.util.List zze
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_8
com.google.firebase.components.DependencyCycleException: java.util.List componentsInCycle
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
com.google.firebase.FirebaseApp: java.lang.String FIREBASE_ANDROID
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void finalize()
io.flutter.plugins.pathprovider.R$styleable: R$styleable()
io.flutter.embedding.engine.FlutterEngineCache: java.util.Map cachedEngines
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
io.flutter.view.AccessibilityBridge: void access$400(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: FlutterImageView$SurfaceKind(java.lang.String,int)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String initialRoute
io.flutter.view.FlutterRunArguments: java.lang.String libraryPath
io.flutter.plugin.localization.LocalizationPlugin$1
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge$3: io.flutter.view.AccessibilityBridge this$0
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logBadConfigError()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetBottom
com.google.firebase.ktx.R$attr: int fontProviderQuery
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String TAG
com.google.android.gms.internal.measurement.zzdj: long zzV
com.google.firebase.messaging.RemoteMessage$Notification: boolean localOnly
com.google.firebase.iid.WithinAppServiceBinder: void lambda$send$0$WithinAppServiceBinder(com.google.firebase.iid.WithinAppServiceConnection$BindRequest,com.google.android.gms.tasks.Task)
com.google.firebase.components.ComponentDiscovery$1
io.flutter.plugins.firebase.messaging.ContextHolder
com.google.firebase.installations.R$attr: int alpha
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromAppComponent()
io.flutter.view.AccessibilityBridge$SemanticsNode: int platformViewId
io.flutter.embedding.engine.dart.DartExecutor: DartExecutor(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String INITIAL_ROUTE_META_DATA_KEY
io.flutter.plugin.platform.PlatformViewsController$1
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_2
io.flutter.embedding.android.FlutterFragment: java.lang.String getAppBundlePath()
com.google.firebase.FirebaseApp: void access$400(com.google.firebase.FirebaseApp)
com.google.firebase.ktx.R$attr: int fontProviderAuthority
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$4
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isSigned
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventWrapper
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Object getAppComponent()
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_5
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.service.ServiceControlSurface getServiceControlSurface()
com.google.firebase.datatransport.R$id: int text2
io.flutter.plugins.pathprovider.R$id: int right_icon
io.flutter.FlutterInjector: void reset()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore
io.flutter.embedding.android.FlutterFragment: boolean shouldHandleDeeplinking()
com.google.android.gms.internal.measurement.zzbw: com.google.android.gms.internal.measurement.zzhz zzg
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzs,long)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer importance
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int UNKNOWN
com.google.firebase.installations.remote.TokenResult: TokenResult()
io.flutter.plugins.firebase.core.R$id: int tag_screen_reader_focusable
com.google.firebase.datatransport.R$dimen: int compat_button_inset_horizontal_material
io.flutter.app.FlutterPluginRegistry: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
com.google.android.gms.internal.measurement.zzdj: long zzk
io.flutter.app.FlutterPluginRegistry: java.util.Map access$500(io.flutter.app.FlutterPluginRegistry)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.lang.String STORAGE_PREFERENCES_NAME
io.flutter.plugin.platform.VirtualDisplayController$1$1: io.flutter.plugin.platform.VirtualDisplayController$1 this$1
com.google.firebase.R$integer: int google_play_services_version
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.flutter.plugins.connectivity.Connectivity: java.lang.String getNetworkType()
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String TUTORIAL_BEGIN
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$1: java.lang.Object call()
io.flutter.plugins.firebase.messaging.R$styleable: int LoadingImageView_imageAspectRatioAdjust
io.flutter.plugin.platform.SingleViewPresentation$PresentationState
io.flutter.plugins.urllauncher.R$styleable: int[] Capability
io.flutter.plugins.firebase.messaging.R$attr: R$attr()
com.google.firebase.encoders.FieldDescriptor$Builder: java.lang.String name
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void setDeferredComponentChannel(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.firebase.installations.time.Clock: long currentTimeMillis()
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener
com.google.firebase.analytics.ktx.ConsentBuilder: ConsentBuilder()
io.flutter.embedding.android.FlutterActivity
io.flutter.plugin.platform.PlatformView: void dispose()
com.google.firebase.datatransport.R$attr: int ttcIndex
io.flutter.plugins.connectivity.R$id: int tag_unhandled_key_listeners
com.google.firebase.components.Component$$Lambda$3: java.lang.Object create(com.google.firebase.components.ComponentContainer)
com.google.firebase.installations.R$id: int line1
com.google.firebase.installations.FirebaseInstallations: java.lang.String getCacheFid()
io.flutter.Log: void w(java.lang.String,java.lang.String)
com.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)
io.flutter.Log: int INFO
io.flutter.plugins.pathprovider.R$id: int right_side
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int getDrawableResourceId(android.content.Context,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource)
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String METADATA_DEFAULT_COLOR
io.flutter.view.FlutterView: void pushRoute(java.lang.String)
com.google.firebase.messaging.FirebaseMessagingService: void onNewToken(java.lang.String)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType[] zza
com.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: io.flutter.embedding.engine.FlutterEngine backgroundFlutterEngine
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean has(java.lang.Class)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: SingleViewPresentation$FakeWindowViewGroup(android.content.Context)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient
io.flutter.embedding.android.FlutterFragmentActivity: void configureStatusBarForFullscreenFlutterExperience()
com.google.firebase.installations.interop.R$id: int async
com.google.firebase.R$attr: int fontProviderFetchStrategy
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getSound()
com.google.firebase.components.OptionalProvider: void set(com.google.firebase.inject.Provider)
io.flutter.embedding.android.FlutterActivity: void configureWindowForTransparency()
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: int MAX_SIZE_NOTIFICATIONS
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_centerColor
com.google.firebase.R$dimen: int compat_notification_large_icon_max_width
io.flutter.embedding.android.FlutterFragment: void updateSystemUiOverlays()
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.String mPackageName
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String SIGN_UP_METHOD
com.google.firebase.datatransport.R$style: int Widget_Compat_NotificationActionContainer
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollIndex
io.flutter.view.FlutterRunArguments: java.lang.String bundlePath
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldAttachEngineToActivity
io.flutter.view.FlutterView$3: io.flutter.plugin.platform.PlatformPlugin val$platformPlugin
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorHandle registerAnalyticsConnectorListener(java.lang.String,com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener)
io.flutter.view.AccessibilityBridge: void onTouchExplorationExit()
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: InboxStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean)
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable getEditable()
org.threeten.bp.Year: java.lang.Object readResolve()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String DOUBLE_PREFIX
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void schedule(android.view.View,java.lang.Runnable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode()
com.google.firebase.installations.local.IidStore
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String USER_AGENT_HEADER
com.google.firebase.components.ComponentDiscovery: java.lang.String TAG
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_23
com.google.firebase.components.ComponentRuntime: java.util.List unprocessedRegistrarProviders
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String ACTION_TOKEN
io.flutter.plugins.urllauncher.R$layout: int notification_template_icon_group
com.google.firebase.R$dimen: int notification_big_circle_margin
io.flutter.plugin.common.BinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object)
com.google.firebase.messaging.FirebaseMessagingService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)
com.google.firebase.components.Component$$Lambda$1: java.lang.Object arg$1
io.flutter.embedding.android.FlutterSurfaceView: boolean isAttachedToFlutterRenderer
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_low
io.flutter.plugins.firebase.messaging.R$id: int icon
com.google.firebase.heartbeatinfo.SdkHeartBeatResult: int compareTo(com.google.firebase.heartbeatinfo.SdkHeartBeatResult)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String VIRTUAL_CURRENCY_NAME
io.flutter.embedding.android.FlutterActivity: boolean shouldHandleDeeplinking()
io.flutter.embedding.android.DrawableSplashScreen: void transitionToFlutter(java.lang.Runnable)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.google.firebase.analytics.connector.internal.zzb: java.lang.Object create(com.google.firebase.components.ComponentContainer)
androidx.fragment.app.Fragment: int getNextTransitionStyle()
com.google.firebase.iid.Metadata: boolean isGmscorePresent()
io.flutter.plugins.connectivity.R$attr: int fontProviderFetchTimeout
com.google.firebase.messaging.MessagingAnalytics: void setDeliveryMetricsExportToBigQuery(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.SoundSource soundSource
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldAttachEngineToActivity(boolean)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String KEY_MESSAGE_ID
io.flutter.plugin.editing.ListenableEditingState: void setComposingRange(int,int)
io.flutter.plugins.urllauncher.R$attr: int fontProviderAuthority
io.flutter.plugin.common.StandardMessageCodec: boolean LITTLE_ENDIAN
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: int atMost(int)
com.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1
io.flutter.view.AccessibilityBridge$1: io.flutter.view.AccessibilityBridge this$0
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.flutter.view.AccessibilityBridge$3
io.flutter.embedding.android.FlutterView: boolean fitSystemWindows(android.graphics.Rect)
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering
io.flutter.plugin.editing.TextInputPlugin: void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean)
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_16
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder configureWith(com.google.firebase.encoders.config.Configurator)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler)
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.google.firebase.encoders.annotations.ExtraProperty: java.lang.Class[] allowedTypes()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI)
com.google.firebase.installations.interop.R$styleable: int FontFamily_fontProviderQuery
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void onDraw()
com.google.android.gms.internal.measurement.zzcx: int zze
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $VALUES
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String EARN_VIRTUAL_CURRENCY
com.google.firebase.messaging.NotificationParams: android.os.Bundle paramsWithReservedKeysRemoved()
io.flutter.embedding.engine.dart.DartExecutor: boolean isExecutingDart()
io.flutter.view.FlutterNativeView: io.flutter.view.FlutterView mFlutterView
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
io.flutter.plugin.platform.PlatformViewsController$1: void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable)
com.google.firebase.messaging.TopicsSubscriber: boolean isSyncScheduledOrRunning()
io.flutter.plugins.urllauncher.WebViewActivity: android.content.Intent createIntent(android.content.Context,java.lang.String,boolean,boolean,android.os.Bundle)
io.flutter.app.FlutterPluginRegistry: boolean onNewIntent(android.content.Intent)
com.google.firebase.messaging.FirebaseMessaging$$Lambda$1
com.google.firebase.encoders.ValueEncoderContext
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: boolean access$200(io.flutter.view.FlutterView$SurfaceTextureRegistryEntry)
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String getFid()
com.google.firebase.installations.FirebaseInstallations$$Lambda$1: void run()
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String origin
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_31
com.google.firebase.ktx.BuildConfig: java.lang.String FLAVOR
com.google.firebase.installations.R$string: R$string()
com.google.firebase.installations.interop.R$attr: int font
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.google.firebase.analytics.connector.AnalyticsConnectorImpl$1: void unregisterEventNames()
io.flutter.embedding.engine.plugins.PluginRegistry: void add(java.util.Set)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DAY
io.flutter.view.AccessibilityBridge$1: AccessibilityBridge$1(io.flutter.view.AccessibilityBridge)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String HEART_BEAT_HEADER
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_METHOD
io.flutter.plugin.platform.PlatformViewsController$1: long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
com.google.firebase.installations.interop.R$drawable: R$drawable()
com.google.firebase.datatransport.R$id: int actions
com.google.android.gms.internal.measurement.zzdb: com.google.android.gms.internal.measurement.zzhz zze
com.google.firebase.messaging.TopicOperation: java.lang.String getOperation()
com.google.android.gms.internal.measurement.zzb: android.os.IBinder asBinder()
androidx.fragment.app.Fragment: java.lang.String toString()
io.flutter.embedding.engine.loader.ResourceExtractor
com.google.firebase.datatransport.R$layout: R$layout()
io.flutter.embedding.android.FlutterActivity: void onTrimMemory(int)
io.flutter.plugin.editing.ListenableEditingState: ListenableEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onDetachedFromActivityForConfigChanges()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String FRAMEWORK_RESTORATION_BUNDLE_KEY
io.flutter.view.FlutterView: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
io.flutter.plugins.connectivity.R$drawable
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_21
com.google.firebase.components.ComponentRuntime: void initializeEagerComponents(boolean)
io.flutter.plugin.common.ErrorLogResult: void success(java.lang.Object)
com.google.android.gms.internal.measurement.zzdj: boolean zzz
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onTrimMemory(int)
com.google.firebase.installations.Utils
io.flutter.plugins.firebase.messaging.R$attr: int scopeUris
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CONTENT_TYPE_HEADER_KEY
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: SyncTask$ConnectivityChangeReceiver(com.google.firebase.iid.SyncTask)
com.google.firebase.ktx.R$dimen: int compat_button_padding_vertical_material
io.flutter.plugins.sharedpreferences.R$styleable: int ColorStateListItem_alpha
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides()
com.google.firebase.FirebaseError: int ERROR_INVALID_CREDENTIAL
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: com.google.firebase.messaging.TopicsSyncTask task
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification_Time
com.google.firebase.iid.WithinAppServiceConnection$BindRequest$$Lambda$1: java.util.concurrent.ScheduledFuture arg$1
com.google.firebase.iid.Metadata: Metadata(android.content.Context)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long getId()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousLabel
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_25
com.google.firebase.iid.FirebaseInstanceId$$Lambda$2: void onComplete(com.google.android.gms.tasks.Task)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent)
com.google.firebase.datatransport.R$attr: int fontWeight
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder initialRoute(java.lang.String)
com.google.firebase.emulators.EmulatedServiceSettings: int getPort()
com.google.firebase.iid.WithinAppServiceConnection
com.google.firebase.installations.R$id: int notification_background
io.flutter.plugin.editing.TextInputPlugin
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_endColor
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean released
io.flutter.plugins.pathprovider.R$id: int info
com.google.firebase.components.ComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)
io.flutter.plugins.connectivity.R$integer: R$integer()
com.google.firebase.components.Dependency: boolean isDeferred()
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface: void detachFromBroadcastReceiver()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails from(java.util.Map)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String encodeList(java.util.List)
com.google.firebase.datatransport.BuildConfig
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object unwrapNull(java.lang.Object)
com.google.android.gms.internal.measurement.zzeg: int zze
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler
io.flutter.plugins.connectivity.R$dimen: int compat_control_corner_material
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: int describeContents()
io.flutter.plugins.urllauncher.R$color: int androidx_core_secondary_text_default_material_light
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String toString()
io.flutter.plugins.firebase.core.R$attr: int fontStyle
com.google.firebase.messaging.Constants$ScionAnalytics
io.flutter.app.FlutterActivityDelegate: android.graphics.drawable.Drawable getLaunchScreenDrawableFromActivityTheme()
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_startX
io.flutter.embedding.android.FlutterFragmentActivity: FlutterFragmentActivity()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiNoLongerDisplayed()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler)
io.flutter.plugin.editing.ListenableEditingState: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus)
io.flutter.view.FlutterNativeView: io.flutter.view.FlutterView access$000(io.flutter.view.FlutterNativeView)
org.threeten.bp.zone.ZoneOffsetTransitionRule: java.lang.Object writeReplace()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
com.google.firebase.ktx.R$id: int action_text
io.flutter.plugin.common.StandardMessageCodec: void writeDouble(java.io.ByteArrayOutputStream,double)
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_tileMode
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource FlutterBitmapAsset
com.google.firebase.iid.Store: void deleteAll()
com.google.firebase.FirebaseApp: void addLifecycleEventListener(com.google.firebase.FirebaseAppLifecycleListener)
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.flutter.plugins.connectivity.BuildConfig: java.lang.String BUILD_TYPE
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek[] values()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$3: com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo arg$1
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
io.flutter.Log: int ASSERT
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String BODY
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit[] values()
com.google.firebase.analytics.FirebaseAnalytics$Event
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionEnd
io.flutter.view.VsyncWaiter$1$1: VsyncWaiter$1$1(io.flutter.view.VsyncWaiter$1,long)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] $VALUES
com.google.firebase.components.AbstractComponentContainer: java.lang.Object get(java.lang.Class)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE_INFORMATION
com.google.firebase.messaging.FirebaseMessaging$$Lambda$3: com.google.firebase.messaging.FirebaseMessaging arg$1
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_ALPHA
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_4
com.google.firebase.ktx.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.android.gms.internal.measurement.zzbu: com.google.android.gms.internal.measurement.zzhz zzg
io.flutter.view.FlutterMain: java.lang.String getLookupKeyForAsset(java.lang.String)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: void maybeUnNest()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldAttachEngineToActivity(boolean)
com.google.firebase.installations.Utils: java.lang.String APP_ID_IDENTIFICATION_SUBSTRING
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener
io.flutter.plugin.platform.PlatformPlugin: io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate
io.flutter.plugin.editing.ListenableEditingState: void clearBatchDeltas()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: FlutterFirebaseMessagingBackgroundExecutor$1(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor,java.util.concurrent.CountDownLatch)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugins.firebase.core.R$id: int info
com.google.firebase.analytics.connector.internal.zzc: java.util.Set zza
io.flutter.embedding.android.MotionEventTracker: MotionEventTracker()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI)
com.google.firebase.R$id: int action_container
com.google.firebase.components.ComponentRuntime: void processDependencies()
io.flutter.app.FlutterActivityDelegate: void runBundle(java.lang.String)
com.google.firebase.FirebaseApp$UiExecutor: FirebaseApp$UiExecutor(com.google.firebase.FirebaseApp$1)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
org.threeten.bp.LocalTime
io.flutter.plugins.sharedpreferences.R$id: int right_icon
com.google.firebase.messaging.RemoteMessage: int PRIORITY_UNKNOWN
org.threeten.bp.ZoneRegion: java.lang.Object readResolve()
io.flutter.plugins.sharedpreferences.R$id: int normal
androidx.fragment.app.Fragment: boolean isPostponed()
com.google.firebase.FirebaseOptions: java.lang.String applicationId
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
com.google.firebase.iid.ServiceStarter: void startMessagingServiceViaReceiver(android.content.Context,android.content.Intent)
io.flutter.plugins.connectivity.R$dimen: int notification_top_pad_large_text
io.flutter.embedding.android.FlutterFragment: androidx.activity.OnBackPressedCallback onBackPressedCallback
com.google.android.gms.internal.measurement.zzck: com.google.android.gms.internal.measurement.zzhz zzh
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_startColor
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_android_font
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzs)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.flutter.plugins.pathprovider.R$style: R$style()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_GREEN
io.flutter.embedding.android.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
io.flutter.plugins.firebase.core.R$id: int tag_state_description
com.google.firebase.ktx.R$dimen: int notification_large_icon_height
io.flutter.plugins.firebase.core.R$styleable: int[] ColorStateListItem
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: java.lang.String pluginKey
com.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: FirebaseInstallationsRegistrar$$Lambda$1()
androidx.core.app.JobIntentService: android.os.IBinder onBind(android.content.Intent)
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.RequestLimiter requestLimiter
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setRefreshToken(java.lang.String)
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra valueOf(java.lang.String)
com.google.firebase.datatransport.R$styleable: int ColorStateListItem_alpha
io.flutter.view.FlutterView: java.util.concurrent.atomic.AtomicLong nextTextureId
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: FlutterRenderer$ViewportMetrics()
com.google.firebase.analytics.ktx.AnalyticsKt: java.lang.Object zzb
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.BinaryMessenger messenger()
io.flutter.plugins.connectivity.R$dimen: int notification_top_pad
com.google.firebase.installations.remote.TokenResult: com.google.firebase.installations.remote.TokenResult$ResponseCode getResponseCode()
com.google.firebase.events.Subscriber: void subscribe(java.lang.Class,com.google.firebase.events.EventHandler)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_TITLE
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: java.util.Map message
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.firebase.installations.remote.TokenResult$ResponseCode
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2900(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.firebase.heartbeatinfo.AutoValue_SdkHeartBeatResult: java.lang.String getSdkName()
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String expiredEventName
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_MESSAGE_TYPE
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView flutterImageView
io.flutter.plugins.connectivity.R$dimen: int notification_big_circle_margin
androidx.core.app.JobIntentService: java.util.ArrayList mCompatQueue
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readPlatformSpecifics(java.util.Map,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugins.urllauncher.R$attr: int fontProviderSystemFontFamily
io.flutter.view.FlutterView: io.flutter.view.AccessibilityBridge mAccessibilityNodeProvider
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,java.lang.Object)
com.google.firebase.installations.local.IidStore: java.lang.String readInstanceIdFromLocalStorage()
com.google.firebase.encoders.annotations.Encodable$Field: java.lang.String name()
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.concurrent.atomic.AtomicLong nextTextureId
io.flutter.app.FlutterPluginRegistry: boolean onViewDestroy(io.flutter.view.FlutterNativeView)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String X_ANDROID_PACKAGE_HEADER_KEY
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: BooleanUtils()
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_gradientRadius
io.flutter.embedding.engine.renderer.RenderSurface
io.flutter.plugins.firebase.messaging.R$id: int tag_unhandled_key_listeners
io.flutter.embedding.android.KeyboardManager$Responder
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge accessibilityBridge
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,boolean)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzs)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.firebase.installations.interop.R$drawable: int notification_tile_bg
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.app.FlutterApplication: android.app.Activity mCurrentActivity
com.google.firebase.installations.interop.R$styleable: int[] FontFamilyFont
io.flutter.plugins.pathprovider.R$styleable: int[] FontFamilyFont
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light
io.flutter.plugins.firebase.core.R$attr: int fontProviderFetchStrategy
io.flutter.plugin.editing.InputConnectionAdaptor: java.lang.String TAG
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: java.lang.Long tokenCreationTimestamp
com.google.firebase.components.CycleDetector: void detect(java.util.List)
com.google.firebase.installations.remote.RequestLimiter: RequestLimiter(com.google.firebase.installations.Utils)
io.flutter.plugin.common.PluginRegistry$Registrar: android.app.Activity activity()
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: ResourceExtractor$ExtractTask(java.lang.String,java.util.HashSet,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager)
com.google.firebase.messaging.TopicsStore: java.lang.ref.WeakReference topicsStoreWeakReference
com.google.firebase.messaging.NotificationParams: java.lang.Integer getNotificationCount()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_16
com.google.firebase.installations.remote.TokenResult$Builder: TokenResult$Builder()
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_startY
io.flutter.plugins.firebase.core.R$layout
io.flutter.embedding.android.FlutterActivity: void onResume()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onRestoreInstanceState(android.os.Bundle)
io.flutter.embedding.android.FlutterEngineConfigurator: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.FirebaseCommonRegistrar$$Lambda$6: java.lang.String extract(java.lang.Object)
io.flutter.plugins.pathprovider.R$attr: R$attr()
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: AnalyticsConnector$ConditionalUserProperty()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: java.lang.String encodedName
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String LINK_ANDROID
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime build()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents valueOf(java.lang.String)
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: ConnectivityBroadcastReceiver(android.content.Context,io.flutter.plugins.connectivity.Connectivity)
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String MINUTE
com.google.firebase.R$styleable: int GradientColor_android_startColor
com.google.firebase.installations.R$id: int action_image
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String TAG_FLUTTER_FRAGMENT
io.flutter.plugins.urllauncher.R$dimen: int notification_big_circle_margin
com.google.firebase.messaging.RemoteMessage: com.google.firebase.messaging.RemoteMessage$Notification getNotification()
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_MESSAGE_DEVICE_TIME
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int)
com.google.android.gms.internal.measurement.zzdo: com.google.android.gms.internal.measurement.zzdo zzg
com.google.firebase.messaging.NotificationParams: java.lang.Object[] getLocalizationArgsForKey(java.lang.String)
io.flutter.view.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.flutter.Log: int ERROR
com.google.firebase.messaging.FirebaseMessagingRegistrar$1
io.flutter.plugins.pathprovider.R$id: int line3
io.flutter.plugins.firebase.core.R$style: int TextAppearance_Compat_Notification
com.google.firebase.messaging.RemoteMessage$Notification: boolean getDefaultSound()
io.flutter.app.FlutterPlayStoreSplitApplication: FlutterPlayStoreSplitApplication()
com.google.firebase.datatransport.R$integer: int status_bar_notification_info_maxnum
io.flutter.plugins.connectivity.R$id: R$id()
io.flutter.plugins.firebase.messaging.R$id: int tag_accessibility_heading
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ACHIEVEMENT_ID
com.google.firebase.installations.interop.R$styleable: int[] ColorStateListItem
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment createFlutterFragment()
io.flutter.plugins.firebase.core.R$id: int tag_unhandled_key_event_manager
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_20
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
io.flutter.plugin.editing.FlutterTextUtils: boolean isTagSpecChar(int)
io.flutter.plugins.urllauncher.R
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_LIST
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler
com.google.firebase.FirebaseError: int ERROR_WRONG_PASSWORD
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderFetchTimeout
io.flutter.plugins.firebase.core.R$attr: int fontProviderSystemFontFamily
com.google.firebase.encoders.FieldDescriptor$Builder: com.google.firebase.encoders.FieldDescriptor$Builder withProperty(java.lang.annotation.Annotation)
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.InputMethodManager mImm
io.flutter.plugins.firebase.messaging.R$id: int text2
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
io.flutter.plugin.common.BasicMessageChannel: java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel)
com.google.firebase.iid.BuildConfig: java.lang.String VERSION_NAME
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action PASTE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.firebase.R$drawable: int notification_bg_low_normal
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String,boolean)
com.google.android.gms.internal.measurement.zzdb: com.google.android.gms.internal.measurement.zzdb zzj
io.flutter.app.FlutterActivityEvents: void onPause()
com.google.firebase.installations.interop.R$id: int tag_unhandled_key_listeners
com.google.firebase.iid.FirebaseIidExecutors
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
io.flutter.app.FlutterActivityDelegate: java.lang.String SPLASH_SCREEN_META_DATA_KEY
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode surface
com.google.firebase.encoders.json.R: R()
io.flutter.view.VsyncWaiter: long access$000(io.flutter.view.VsyncWaiter)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void disposeAndroidViewForPlatformView(int)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra[] values()
com.google.firebase.ktx.R$id: int actions
io.flutter.embedding.engine.systemchannels.SettingsChannel
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: void writeInt(java.io.ByteArrayOutputStream,int)
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.view.AccessibilityBridge: boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: boolean isDartBackgroundHandlerRegistered()
io.flutter.view.FlutterView$3: io.flutter.view.FlutterView this$0
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel$Reply callback
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToContentProvider(android.content.ContentProvider,androidx.lifecycle.Lifecycle)
com.google.firebase.messaging.TopicsSubscriber: void syncWithDelaySecondsInternal(long)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_NOTIFICATION_REPEAT_FREQUENCY
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService access$200(io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$2: com.google.firebase.messaging.FirebaseMessaging val$firebaseMessaging
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.app.FlutterPlayStoreSplitApplication: void onCreate()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$500(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel this$0
com.google.firebase.analytics.FirebaseAnalytics: void resetAnalyticsData()
com.google.firebase.messaging.FirebaseMessaging: java.util.concurrent.Executor fileIoExecutor
io.flutter.plugins.connectivity.R$dimen: int notification_main_column_padding_top
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore getInstance()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: java.lang.String encodedName
com.google.firebase.analytics.connector.AnalyticsConnector: void logEvent(java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.plugins.pathprovider.R$dimen: int notification_top_pad
io.flutter.plugins.firebase.core.R$id: int action_image
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String EVENT_NOTIFICATION_OPEN
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addViewDestroyListener(io.flutter.plugin.common.PluginRegistry$ViewDestroyListener)
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_centerX
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: boolean usesVirtualDisplay(java.lang.Integer)
com.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task scheduleTopicOperation(com.google.firebase.messaging.TopicOperation)
io.flutter.plugins.sharedpreferences.R$attr
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler: void onFrameworkResponse(boolean)
com.google.firebase.R$id: int blocking
com.google.firebase.FirebaseCommonRegistrar$$Lambda$4: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()
io.flutter.plugins.pathprovider.R$styleable: int[] ColorStateListItem
io.flutter.plugins.sharedpreferences.R$layout
com.google.firebase.ktx.R$attr: int fontProviderCerts
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: java.lang.String token
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: android.os.Bundle createArgs()
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_font
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver$1: ConnectivityBroadcastReceiver$1(io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver)
com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener
io.flutter.plugins.pathprovider.PathProviderPlugin$1: void onSuccess(java.lang.Object)
com.google.firebase.messaging.NotificationParams: java.lang.String getPossiblyLocalizedString(android.content.res.Resources,java.lang.String,java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: DartExecutor$DartCallback(android.content.res.AssetManager,java.lang.String,io.flutter.view.FlutterCallbackInformation)
io.flutter.embedding.android.SplashScreen: android.os.Bundle saveSplashScreenState()
com.google.android.gms.internal.measurement.zzcf: com.google.android.gms.internal.measurement.zzcf zzk
com.google.firebase.iid.Registrar$$Lambda$0: Registrar$$Lambda$0()
io.flutter.plugins.firebase.core.R$id: R$id()
io.flutter.view.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
com.google.firebase.installations.GetAuthTokenListener: com.google.android.gms.tasks.TaskCompletionSource resultTaskCompletionSource
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void setDirection(int,int)
com.google.firebase.iid.FcmBroadcastProcessor: com.google.firebase.iid.WithinAppServiceConnection fcmServiceConn
io.flutter.plugins.firebase.core.R$styleable: int FontFamily_fontProviderFetchTimeout
com.google.firebase.installations.FirebaseInstallations$$Lambda$2: com.google.firebase.installations.FirebaseInstallations arg$1
androidx.fragment.app.Fragment: void performAttach()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onActivityResultListeners
com.google.firebase.components.MissingDependencyException
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder registerEncoder(java.lang.Class,com.google.firebase.encoders.ValueEncoder)
com.google.firebase.datatransport.R$color: int notification_icon_bg_color
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_startX
com.google.firebase.messaging.TopicsSubscriber: java.util.concurrent.ScheduledExecutorService syncExecutor
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
com.google.firebase.components.ComponentRuntime: ComponentRuntime(java.util.concurrent.Executor,java.lang.Iterable,com.google.firebase.components.Component[])
com.google.firebase.messaging.RemoteMessage$Notification: boolean defaultSound
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmoji(int)
io.flutter.FlutterInjector$Builder$NamedThreadFactory
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String TAG
com.google.firebase.analytics.connector.internal.zze: com.google.firebase.analytics.connector.internal.zzd zzd
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.view.TextureRegistry textures()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarDividerColor
com.google.firebase.components.ComponentRuntime: void discoverComponents()
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageTime(android.content.Intent)
com.google.firebase.messaging.TopicsSyncTask: boolean hasAccessNetworkStatePermission(android.content.Context)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performContextMenuAction(int)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder destroyEngineWithFragment(boolean)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
io.flutter.plugins.connectivity.ConnectivityPlugin: void setupChannels(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
com.google.android.gms.internal.measurement.zzdf: java.lang.String zzf
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_19
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$2
com.google.firebase.heartbeatinfo.HeartBeatConsumerComponent
io.flutter.plugin.common.PluginRegistry$Registrar: android.content.Context context()
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String ECOMMERCE_PURCHASE
com.google.firebase.messaging.Constants: Constants()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.DateTimeComponents matchDateTimeComponents
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(byte[])
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeView(java.lang.Object[])
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0
com.google.firebase.ktx.R$id: int action_image
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long expiresInSecs
io.flutter.view.AccessibilityBridge
com.google.firebase.messaging.EnhancedIntentService: com.google.android.gms.tasks.Task processIntent(android.content.Intent)
io.flutter.plugins.firebase.core.R$dimen: int compat_notification_large_icon_max_height
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
com.google.firebase.messaging.MessagingAnalytics$$Lambda$0: MessagingAnalytics$$Lambda$0()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host
com.google.firebase.messaging.FirebaseMessaging: com.google.android.datatransport.TransportFactory getTransportFactory()
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CACHE_CONTROL_HEADER_KEY
com.google.firebase.messaging.TopicsSyncTask: android.os.PowerManager$WakeLock syncWakeLock
io.flutter.embedding.engine.dart.PlatformTaskQueue: void dispatch(java.lang.Runnable)
com.google.firebase.components.ComponentRuntime$$Lambda$5: com.google.firebase.components.ComponentRuntime$$Lambda$5 instance
io.flutter.plugins.firebase.messaging.R$string: R$string()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser[] values()
androidx.fragment.app.Fragment: int mState
com.google.firebase.dynamicloading.ComponentLoader: void discoverComponents()
androidx.activity.ComponentActivity: void onBackPressed()
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$1
io.flutter.view.AccessibilityBridge$SemanticsNode: int actions
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.lang.String TAG
io.flutter.embedding.android.FlutterSplashView: android.os.Bundle splashScreenState
io.flutter.plugins.connectivity.R$id: int icon
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Weekly
com.google.firebase.analytics.zzc: zzc(com.google.android.gms.internal.measurement.zzbr)
io.flutter.embedding.engine.loader.ResourceExtractor: void waitForCompletion()
com.google.firebase.analytics.connector.internal.zza: void zzb(java.util.Set)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: android.os.Bundle extractBundle(java.util.Map)
com.google.firebase.ktx.R$styleable: int GradientColorItem_android_color
com.google.firebase.installations.interop.R$styleable: int GradientColorItem_android_offset
com.google.firebase.messaging.Constants$MessageNotificationKeys: Constants$MessageNotificationKeys()
com.google.firebase.datatransport.R$color: int notification_action_color_filter
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
io.flutter.view.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderPackage
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setProgress(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.android.MotionEventTracker motionEventTracker
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity: void onPostResume()
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.util.List jsonArrayToList(org.json.JSONArray)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_27
com.google.firebase.installations.interop.R$id: int icon
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()
io.flutter.embedding.android.FlutterFragment: FlutterFragment()
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1
com.google.firebase.iid.FirebaseIidExecutors$$Lambda$0: java.util.concurrent.Executor $instance
io.flutter.app.FlutterPluginRegistry: android.content.Context access$100(io.flutter.app.FlutterPluginRegistry)
com.google.android.gms.internal.measurement.zzcz: int zza
com.google.firebase.components.ComponentRuntime$$Lambda$4: ComponentRuntime$$Lambda$4(com.google.firebase.components.LazySet,com.google.firebase.inject.Provider)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.plugin.common.StandardMessageCodec: int readSize(java.nio.ByteBuffer)
io.flutter.plugins.firebase.messaging.R$attr: int colorScheme
io.flutter.app.FlutterActivityDelegate: boolean onBackPressed()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: java.util.List messagingQueue
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,boolean)
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView)
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification_Line2
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.firebase.installations.interop.R$id: int text2
com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
com.google.firebase.installations.FirebaseInstallations: java.lang.Object lock
io.flutter.plugin.common.StringCodec: java.nio.charset.Charset UTF8
com.google.firebase.components.Component: Component(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set)
androidx.core.app.RemoteActionCompatParcelizer
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_6
org.threeten.bp.YearMonth
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_fontStyle
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.firebase.datatransport.BuildConfig: BuildConfig()
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_android_fontWeight
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_NAME
io.flutter.plugins.urllauncher.R$color: R$color()
com.google.firebase.iid.WithinAppServiceBinder$$Lambda$0: com.google.firebase.iid.WithinAppServiceConnection$BindRequest arg$1
io.flutter.plugin.common.FlutterException: FlutterException(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.messaging.SharedPreferencesQueue: boolean remove(java.lang.Object)
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText mExtractedText
com.google.firebase.R$attr: int fontProviderAuthority
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventEncoder: void encode(com.google.firebase.messaging.FirelogAnalyticsEvent,com.google.firebase.encoders.ObjectEncoderContext)
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int MOUSE
io.flutter.plugins.pathprovider.R$attr: int fontStyle
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String PROMOTION_ID
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 this$1
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel getDeferredComponentChannel()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String KEY_DATA
io.flutter.plugins.urllauncher.UrlLauncherPlugin
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float yPrecision
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_26
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLATFORM_SPECIFICS
io.flutter.plugin.editing.InputConnectionAdaptor: boolean doPerformContextMenuAction(int)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: int threadId
io.flutter.app.FlutterActivity: io.flutter.app.FlutterActivityDelegate delegate
com.google.firebase.installations.InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult$Builder setTokenCreationTimestamp(long)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
io.flutter.plugins.firebase.messaging.R$color
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
com.google.firebase.R$styleable: int[] GradientColor
com.google.firebase.messaging.MessagingAnalytics: boolean shouldUploadScionMetrics(android.content.Intent)
com.google.firebase.components.DependencyCycleException: DependencyCycleException(java.util.List)
io.flutter.plugin.common.StandardMessageCodec: void writeBytes(java.io.ByteArrayOutputStream,byte[])
com.google.firebase.analytics.ktx.AnalyticsKt: void setConsent(com.google.firebase.analytics.FirebaseAnalytics,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivity: void updateSystemUiOverlays()
androidx.fragment.app.Fragment: float mPostponedAlpha
io.flutter.embedding.android.AndroidTouchProcessor: AndroidTouchProcessor(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.firebase.installations.R$styleable: int FontFamilyFont_android_font
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task topicsSubscriberTask
org.threeten.bp.chrono.ThaiBuddhistChronology
org.threeten.bp.chrono.IsoChronology
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_0
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: NotificationChannelAction(java.lang.String,int)
com.google.firebase.datatransport.R$dimen: int notification_main_column_padding_top
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_install_text
com.google.firebase.datatransport.R$style: int TextAppearance_Compat_Notification_Line2
com.google.firebase.installations.interop.R$id: int tag_unhandled_key_event_manager
io.flutter.plugins.urllauncher.R$id: int notification_main_column_container
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: FlutterActivityLaunchConfigs$BackgroundMode(java.lang.String,int)
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRefreshToken(java.lang.String)
io.flutter.plugins.firebase.messaging.R$id: int action_text
io.flutter.plugins.connectivity.R$integer
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onUserLeaveHint()
io.flutter.embedding.android.FlutterFragment: void onCreate(android.os.Bundle)
io.flutter.plugins.firebase.messaging.R$layout: int notification_action_tombstone
io.flutter.embedding.android.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.plugins.connectivity.R$id: int time
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.flutter.embedding.android.FlutterFragment: void onStart()
com.google.firebase.iid.Registrar$FIIDInternalAdapter: Registrar$FIIDInternalAdapter(com.google.firebase.iid.FirebaseInstanceId)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CAMPAIGN
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: android.os.Bundle expiredEventParams
io.flutter.embedding.android.FlutterView: void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
com.google.firebase.R$styleable: int GradientColor_android_startX
com.google.firebase.analytics.connector.internal.zzd
com.google.firebase.installations.interop.R$drawable: int notification_bg_normal
androidx.fragment.app.FragmentActivity: FragmentActivity(int)
com.google.firebase.installations.remote.TokenResult: com.google.firebase.installations.remote.TokenResult$Builder builder()
io.flutter.plugins.connectivity.R$id: int tag_on_receive_content_mime_types
com.google.firebase.iid.Store$Token: java.lang.String token
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
com.google.firebase.messaging.RemoteMessage: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasAction(io.flutter.view.AccessibilityBridge$Action)
com.google.firebase.components.ComponentContainer: com.google.firebase.inject.Deferred getDeferred(java.lang.Class)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void completeInstallSuccess(java.lang.String)
io.flutter.embedding.android.FlutterFragment$1
com.google.firebase.messaging.FcmExecutors
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String)
io.flutter.app.FlutterPluginRegistry: void onPreEngineRestart()
com.google.firebase.installations.remote.InstallationResponse$Builder: InstallationResponse$Builder()
com.google.firebase.FirebaseError
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$402(io.flutter.embedding.android.FlutterSplashView,java.lang.String)
com.google.firebase.installations.FirebaseInstallationsException: com.google.firebase.installations.FirebaseInstallationsException$Status getStatus()
com.google.firebase.components.ComponentRuntime: com.google.firebase.components.EventBus eventBus
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidRawSoundResource(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugins.urllauncher.R$drawable: int notification_bg
com.google.android.gms.internal.measurement.zzeg: java.lang.String zzh
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_PURGE_PERSISTENT_CACHE
com.google.firebase.components.Component$Builder: int instantiation
io.flutter.view.FlutterView: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.view.FlutterView: void onFirstFrame()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler)
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: java.lang.Boolean autoInitEnabled
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setExpiresInSecs(long)
io.flutter.app.FlutterActivity: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides LEFT
com.google.firebase.provider.FirebaseInitProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
com.google.firebase.R$drawable: int notification_template_icon_low_bg
com.google.firebase.components.ComponentRuntime$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.installations.GetIdListener: boolean onException(java.lang.Exception)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Daily
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_SKIA_DETERMINISTIC_RENDERING
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_5
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: android.app.Activity activity()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.flutter.plugins.urllauncher.R$id: int right_icon
io.flutter.plugins.pathprovider.PathProviderPlugin: PathProviderPlugin()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5
io.flutter.view.AccessibilityBridge$SemanticsNode: void log(java.lang.String,boolean)
com.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task unsubscribeFromTopic(java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$1: FlutterFirebaseMessagingPlugin$1(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin,java.lang.String)
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzP
com.google.firebase.messaging.ImageDownload: byte[] blockingDownloadBytes()
com.google.firebase.ktx.R$layout: int notification_template_custom_big
io.flutter.plugin.common.ErrorLogResult: ErrorLogResult(java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.android.DrawableSplashScreen
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$2: java.util.Map val$remoteMessageMap
io.flutter.plugin.platform.PlatformPlugin: void access$100(io.flutter.plugin.platform.PlatformPlugin,int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String ticker
io.flutter.plugins.sharedpreferences.R$layout: int notification_action_tombstone
io.flutter.embedding.android.FlutterActivity: boolean stillAttachedForEvent(java.lang.String)
com.google.firebase.datatransport.R$attr: int fontProviderFetchStrategy
com.google.firebase.messaging.TopicsSubscriber: com.google.firebase.iid.GmsRpc rpc
io.flutter.plugins.firebase.messaging.R$id: int tag_unhandled_key_event_manager
com.google.firebase.messaging.RemoteMessage: java.lang.String getMessageType()
io.flutter.plugins.connectivity.R$styleable: int[] FontFamily
com.google.firebase.messaging.FirebaseMessagingRegistrar
com.google.firebase.installations.interop.R$dimen: int notification_large_icon_height
io.flutter.embedding.engine.systemchannels.PlatformChannel: PlatformChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.firebase.messaging.EnhancedIntentService$$Lambda$2: void onComplete(com.google.android.gms.tasks.Task)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware: void onDetachedFromContentProvider()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.plugin.platform.VirtualDisplayController: VirtualDisplayController(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformViewFactory,android.view.Surface,io.flutter.view.TextureRegistry$SurfaceTextureEntry,android.view.View$OnFocusChangeListener,int,java.lang.Object)
io.flutter.plugins.pathprovider.PathProviderPlugin$1: void onFailure(java.lang.Throwable)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.iid.FirebaseInstanceId iid
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer maxProgress
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder
io.flutter.plugins.pathprovider.R$attr: int queryPatterns
com.google.firebase.iid.internal.FirebaseInstanceIdInternal
com.google.firebase.FirebaseCommonRegistrar: java.lang.String FIREBASE_COMMON
io.flutter.plugins.connectivity.R$id: int tag_accessibility_pane_title
io.flutter.plugin.platform.PlatformViewsController: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$ResponseCode responseCode
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readProgressInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setTokenExpirationTimestamp(long)
androidx.core.app.JobIntentService: boolean isStopped()
io.flutter.embedding.engine.FlutterEngineGroup$1: FlutterEngineGroup$1(io.flutter.embedding.engine.FlutterEngineGroup,io.flutter.embedding.engine.FlutterEngine)
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.flutter.embedding.android.FlutterActivity: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
com.google.firebase.messaging.EnhancedIntentService: android.content.Intent getStartCommandIntent(android.content.Intent)
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_fontStyle
com.google.firebase.installations.interop.R$integer: R$integer()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] titleLocArgs
com.google.firebase.messaging.NotificationParams: java.lang.String getString(java.lang.String)
io.flutter.plugins.urllauncher.R$drawable: R$drawable()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.google.firebase.installations.local.IidStore: java.lang.String readPublicKeyFromLocalStorageAndCalculateInstanceId()
com.google.firebase.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.firebase.ktx.R$id: int tag_unhandled_key_event_manager
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_INITIAL_ROUTE
io.flutter.view.AccessibilityBridge: void access$200(io.flutter.view.AccessibilityBridge,int,int)
io.flutter.embedding.android.FlutterImageView
io.flutter.plugins.urllauncher.R$dimen: int compat_control_corner_material
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String JOIN_GROUP
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,int)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: int NETWORK_TIMEOUT_MILLIS
io.flutter.plugins.connectivity.R$layout: int custom_dialog
io.flutter.view.FlutterNativeView: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.firebase.installations.R$drawable: int notification_icon_background
io.flutter.plugin.common.MethodCall: MethodCall(java.lang.String,java.lang.Object)
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_font
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldDestroyEngineWithHost()
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$5: JsonDataEncoderBuilder$$Lambda$5()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String lookupKeyForAsset(java.lang.String)
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventEncoder
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLAY_SOUND
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
io.flutter.plugins.firebase.core.R$id: int italic
io.flutter.app.FlutterPluginRegistry: android.app.Activity mActivity
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_text_light_normal
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides BOTH
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$4: com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$4 instance
com.google.firebase.ktx.R$styleable: int[] ColorStateListItem
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_23
org.threeten.bp.ZonedDateTime: java.lang.Object writeReplace()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[])
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_7
io.flutter.view.FlutterView: java.util.List mFirstFrameListeners
org.threeten.bp.ZoneOffset
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String VM_SNAPSHOT_DATA_KEY
io.flutter.plugin.common.BinaryCodec: BinaryCodec(boolean)
com.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task delete()
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: FlutterFragmentActivity$CachedEngineIntentBuilder(java.lang.Class,java.lang.String)
com.google.firebase.R$styleable: int GradientColor_android_centerColor
io.flutter.plugins.pathprovider.R$styleable: int[] Capability
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$4: FcmBroadcastProcessor$$Lambda$4()
io.flutter.embedding.android.FlutterImageView: void closeCurrentImage()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: void publish(com.google.firebase.events.Event)
com.google.firebase.datatransport.R$id
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_startX
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager this$0
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray sessionIdToName
io.flutter.embedding.android.FlutterFragment$ActivityCallThrough
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
com.google.firebase.installations.FirebaseInstallations: java.lang.Void deleteFirebaseInstallationId()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Default
org.threeten.bp.chrono.HijrahChronology
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.firebase.components.ComponentDiscovery
io.flutter.plugins.connectivity.R$dimen: int compat_button_padding_horizontal_material
com.google.firebase.messaging.TopicsSubscriber: java.lang.Object awaitTask(com.google.android.gms.tasks.Task)
com.google.android.gms.internal.measurement.zzby: com.google.android.gms.internal.measurement.zzby zzi
com.google.firebase.components.EventBus: java.util.Set getHandlers(com.google.firebase.events.Event)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$1: com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$1 instance
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: FlutterRenderer$SurfaceTextureRegistryEntry$1(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
io.flutter.plugins.sharedpreferences.R$styleable: int[] FontFamilyFont
io.flutter.plugins.firebase.messaging.R$attr: int fontProviderQuery
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
com.google.firebase.components.Component: java.util.Set getProvidedInterfaces()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$600(io.flutter.view.AccessibilityBridge)
io.flutter.app.FlutterActivityDelegate$ViewFactory: boolean retainFlutterNativeView()
io.flutter.app.FlutterActivityDelegate: io.flutter.view.FlutterView flutterView
com.google.firebase.messaging.RemoteMessage: java.lang.String getCollapseKey()
io.flutter.plugins.connectivity.R$styleable: int[] GradientColorItem
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugin.platform.PlatformPlugin: void setClipboardData(java.lang.String)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
io.flutter.plugins.firebase.messaging.R$attr: int fontProviderSystemFontFamily
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$500(io.flutter.embedding.android.FlutterSplashView)
io.flutter.plugins.sharedpreferences.R$styleable: int[] ColorStateListItem
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionUnlocked()
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel access$1200(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.plugins.firebase.core.R$attr: int fontProviderCerts
com.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()
io.flutter.plugins.firebase.core.R$attr: int shortcutMatchRequired
com.google.firebase.installations.FirebaseInstallations: java.lang.String CHIME_FIREBASE_APP_NAME
io.flutter.plugin.editing.TextInputPlugin$MinMax: void inspect(double,double)
io.flutter.plugin.editing.ListenableEditingState: int mSelectionEndWhenBeginBatchEdit
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext nested(java.lang.String)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: com.google.firebase.events.Subscriber subscriber
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Inbox
io.flutter.plugin.platform.PlatformViewRegistry: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: boolean uninstallDeferredComponent(int,java.lang.String)
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String RESERVED_CLIENT_LIB_PREFIX
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldDelayFirstAndroidViewDraw
com.google.firebase.FirebaseApp$$Lambda$1: FirebaseApp$$Lambda$1(com.google.firebase.FirebaseApp,android.content.Context)
com.google.firebase.messaging.ImageDownload
io.flutter.embedding.android.FlutterFragment: boolean shouldDelayFirstAndroidViewDraw()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String pluginId
com.google.android.gms.internal.measurement.zzid: com.google.android.gms.internal.measurement.zzid[] values()
com.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1
io.flutter.plugins.firebase.core.R$attr: int alpha
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_15
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering
com.google.android.gms.internal.measurement.zzcd: java.lang.String zzh
io.flutter.plugins.urllauncher.R$integer: R$integer()
io.flutter.embedding.engine.loader.ResourceExtractor: java.util.HashSet mResources
io.flutter.plugins.connectivity.ConnectivityMethodChannelHandler: boolean $assertionsDisabled
com.google.firebase.FirebaseApp$UserUnlockReceiver
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.lang.String TAG
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_centerY
com.google.android.gms.internal.measurement.zzhk: com.google.android.gms.internal.measurement.zzhk[] values()
com.google.android.gms.internal.measurement.zzcx: int zza
io.flutter.plugin.platform.PlatformViewFactory: PlatformViewFactory(io.flutter.plugin.common.MessageCodec)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: java.util.concurrent.atomic.AtomicLong ID_COUNTER
com.google.firebase.iid.FirebaseInstanceId: boolean isDebugLogEnabled()
com.google.android.gms.internal.measurement.zzcx: com.google.android.gms.internal.measurement.zzdq zzg
io.flutter.plugins.firebase.messaging.R$dimen: int notification_main_column_padding_top
com.google.firebase.messaging.EnhancedIntentService: android.os.IBinder onBind(android.content.Intent)
com.google.firebase.iid.ServiceStarter: int startMessagingService(android.content.Context,android.content.Intent)
io.flutter.plugin.editing.TextInputPlugin: void showTextInput(android.view.View)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDestroyView()
com.google.android.gms.common.internal.ResolveAccountRequest: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterTextureView: void init()
io.flutter.plugins.firebase.core.R$styleable: int[] FontFamilyFont
com.google.firebase.iid.Registrar$$Lambda$0: java.lang.Object create(com.google.firebase.components.ComponentContainer)
io.flutter.plugins.pathprovider.R$id: int time
io.flutter.plugins.pathprovider.R$dimen: R$dimen()
com.google.firebase.ktx.R$styleable: int FontFamilyFont_fontStyle
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_type
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_24
io.flutter.plugin.common.JSONMessageCodec: io.flutter.plugin.common.JSONMessageCodec INSTANCE
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String PREFIX
com.google.firebase.datatransport.R$styleable: int GradientColor_android_endX
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever retriever
io.flutter.embedding.engine.loader.FlutterLoader
io.flutter.view.FlutterNativeView: FlutterNativeView(android.content.Context)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_font
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void doInitialFlutterViewRun()
com.google.firebase.messaging.TopicsSyncTask: TopicsSyncTask(com.google.firebase.messaging.TopicsSubscriber,android.content.Context,com.google.firebase.iid.Metadata,long)
com.google.firebase.ktx.R$drawable: int notification_icon_background
io.flutter.plugin.editing.TextInputPlugin$1: void setEditableSizeAndTransform(double,double,double[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULE_METHOD
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String title
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: java.lang.String lookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo)
com.google.firebase.messaging.FirebaseMessagingService: boolean alreadyReceivedMessage(java.lang.String)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set requestPermissionsResultListeners
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar publish(java.lang.Object)
com.google.firebase.FirebaseError: int ERROR_INVALID_API_KEY
com.google.firebase.R$id: int right_icon
com.google.firebase.messaging.SendException: int getErrorCode()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1
io.flutter.plugins.urllauncher.R$id: int async
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: android.content.SharedPreferences preferences
com.google.firebase.installations.FirebaseInstallations$$Lambda$1: com.google.firebase.installations.FirebaseInstallations arg$1
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
io.flutter.embedding.android.FlutterFragment: void onPause()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1
com.google.firebase.installations.local.PersistedInstallationEntry: boolean isRegistered()
com.google.firebase.FirebaseOptions$Builder: java.lang.String gaTrackingId
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: WebViewActivity$FlutterWebChromeClient(io.flutter.plugins.urllauncher.WebViewActivity)
com.google.firebase.R$id: int normal
io.flutter.view.FlutterView$1
com.google.firebase.R$styleable: int ColorStateListItem_android_color
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.String,io.flutter.embedding.android.FlutterFragment$1)
io.flutter.embedding.engine.dart.DartExecutor$1: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
io.flutter.plugins.firebase.core.R$layout: R$layout()
io.flutter.view.VsyncWaiter$1: void asyncWaitForVsync(long)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int getCode()
androidx.activity.ComponentActivity: ComponentActivity(int)
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DART_ENTRYPOINT
com.google.firebase.installations.remote.AutoValue_TokenResult$1
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
io.flutter.app.FlutterActivityDelegate: void onLowMemory()
io.flutter.plugin.editing.TextInputPlugin: android.util.SparseArray mAutofillConfigurations
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzeb: com.google.android.gms.internal.measurement.zzdx zzf
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.view.FlutterView view()
androidx.core.app.JobIntentService: java.util.HashMap sClassWorkEnqueuer
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides[] $VALUES
io.flutter.plugins.pathprovider.R$drawable: int notification_action_background
com.google.firebase.messaging.Constants
io.flutter.plugins.firebase.messaging.R$dimen: int compat_button_inset_horizontal_material
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setSystemUiChangeListener()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] getTitleLocalizationArgs()
com.google.firebase.messaging.NotificationParams: org.json.JSONArray getJSONArray(java.lang.String)
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_DELAY_FIRST_ANDROID_VIEW_DRAW
com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzhz zzG
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,int)
com.google.firebase.messaging.SharedPreferencesQueue: boolean checkAndSyncState(boolean)
io.flutter.plugins.connectivity.R$style: int TextAppearance_Compat_Notification_Title
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterUiNoLongerDisplayed()
com.google.firebase.encoders.FieldDescriptor: int hashCode()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.plugins.pathprovider.R$dimen: int notification_action_icon_size
io.flutter.embedding.engine.systemchannels.SystemChannel: java.lang.String TAG
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_ENABLED
com.google.firebase.R$attr: int fontStyle
androidx.fragment.app.Fragment: int mBackStackNesting
com.google.firebase.datatransport.R$styleable: int[] ColorStateListItem
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
io.flutter.plugin.common.StandardMessageCodec: byte TRUE
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerDeviceTypeForToolType(int)
com.google.firebase.installations.GetIdListener: GetIdListener(com.google.android.gms.tasks.TaskCompletionSource)
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasSelection()
io.flutter.view.FlutterNativeView$1: io.flutter.view.FlutterNativeView this$0
io.flutter.view.FlutterMain: FlutterMain()
io.flutter.plugins.firebase.messaging.R$dimen: int notification_content_margin_start
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult$Builder setTokenCreationTimestamp(long)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder eagerInDefaultApp()
io.flutter.plugin.common.PluginRegistry$NewIntentListener
io.flutter.plugins.pathprovider.R
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamily_fontProviderCerts
com.google.firebase.R$string: R$string()
com.google.firebase.messaging.R$string: int fcm_fallback_notification_channel_label
io.flutter.plugins.firebase.messaging.R$drawable: int notification_icon_background
org.threeten.bp.chrono.HijrahDate: java.lang.Object readResolve()
com.google.firebase.R$id: int title
com.google.firebase.iid.FirebaseInstanceId: java.util.concurrent.Executor fileIoExecutor
io.flutter.plugins.firebase.messaging.R$styleable: int[] FontFamily
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions build()
com.google.firebase.messaging.R$string
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus OK
com.google.firebase.FirebaseOptions: boolean equals(java.lang.Object)
io.flutter.plugins.pathprovider.PathProviderPlugin
com.google.firebase.messaging.SharedPreferencesQueue$$Lambda$0: SharedPreferencesQueue$$Lambda$0(com.google.firebase.messaging.SharedPreferencesQueue)
com.google.firebase.components.RestrictedComponentContainer: java.util.Set setOf(java.lang.Class)
com.google.firebase.analytics.connector.internal.zze: java.util.Set zza
com.google.firebase.installations.interop.BuildConfig: java.lang.String FLAVOR
io.flutter.plugins.connectivity.R$attr: int alpha
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle)
com.google.firebase.installations.FirebaseInstallations$$Lambda$3: com.google.firebase.installations.FirebaseInstallations arg$1
io.flutter.FlutterInjector$Builder$NamedThreadFactory: io.flutter.FlutterInjector$Builder this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getColor()
com.google.firebase.messaging.RemoteMessageCreator: void writeToParcel(com.google.firebase.messaging.RemoteMessage,android.os.Parcel,int)
io.flutter.view.FlutterNativeView
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_6
com.google.firebase.FirebaseError: int ERROR_EMAIL_ALREADY_IN_USE
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: boolean val$response
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMESTAMP
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalWidth
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.view.TextureRegistry textures()
com.google.firebase.installations.R$styleable: int GradientColor_android_centerColor
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationChannels(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.util.Preconditions: void checkState(boolean)
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamily_fontProviderFetchTimeout
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_VERBOSE_LOGGING
io.flutter.plugin.common.StandardMessageCodec: byte BYTE_ARRAY
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firebase.FirebaseApp$1
com.google.firebase.FirebaseError: int ERROR_NO_SUCH_PROVIDER
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.google.firebase.iid.WithinAppServiceConnection$BindRequest
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()
io.flutter.plugins.firebase.core.R$id: int action_container
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval valueOf(java.lang.String)
io.flutter.plugin.common.ErrorLogResult: java.lang.String tag
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification_Line2
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStop()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
com.google.firebase.FirebaseApp: java.lang.String KOTLIN
com.google.firebase.FirebaseApp: java.util.List lifecycleListeners
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_26
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: boolean isEventHandled
com.google.firebase.installations.remote.AutoValue_InstallationResponse: AutoValue_InstallationResponse(java.lang.String,java.lang.String,java.lang.String,com.google.firebase.installations.remote.TokenResult,com.google.firebase.installations.remote.InstallationResponse$ResponseCode,com.google.firebase.installations.remote.AutoValue_InstallationResponse$1)
com.google.firebase.iid.ServiceStarter: java.lang.String ACTION_MESSAGING_EVENT
io.flutter.embedding.engine.systemchannels.PlatformChannel: int decodeOrientations(org.json.JSONArray)
io.flutter.plugins.pathprovider.R$layout
io.flutter.plugins.firebase.core.R$drawable: int notification_template_icon_low_bg
com.google.firebase.installations.remote.InstallationResponse: java.lang.String getRefreshToken()
io.flutter.embedding.engine.FlutterEngine$1: FlutterEngine$1(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_android_font
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType,long)
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager afm
com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo: java.lang.String tag
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
com.google.android.gms.common.api.GoogleApiActivity
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface getBroadcastReceiverControlSurface()
androidx.core.app.JobIntentService: int onStartCommand(android.content.Intent,int,int)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_30
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager,io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$1)
com.google.firebase.iid.FirebaseInstanceIdReceiver: android.content.Intent createServiceIntent(android.content.Context,java.lang.String,android.os.Bundle)
io.flutter.plugin.platform.PlatformPlugin
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List labelAttributes
com.google.firebase.R$attr: int alpha
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewPaddingBottom
io.flutter.app.FlutterFragmentActivity: java.lang.Object valuePublishedByPlugin(java.lang.String)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigText
com.google.firebase.FirebaseCommonRegistrar$$Lambda$4: FirebaseCommonRegistrar$$Lambda$4()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_28
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_METHOD
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: void onNotificationDismissed(android.content.Context,android.os.Bundle)
io.flutter.plugins.sharedpreferences.R$string: R$string()
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry$1: FlutterView$SurfaceTextureRegistryEntry$1(io.flutter.view.FlutterView$SurfaceTextureRegistryEntry)
io.flutter.embedding.android.FlutterActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.google.android.gms.internal.measurement.zzdb: long zzh
com.google.android.gms.internal.measurement.zzdf: long zzg
com.google.firebase.datatransport.R$attr: int fontProviderQuery
io.flutter.embedding.android.FlutterFragment: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String METHOD
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.plugins.urllauncher.R$id: int tag_accessibility_heading
com.google.firebase.analytics.connector.AnalyticsConnector: int getMaxUserProperties(java.lang.String)
io.flutter.plugins.firebase.core.R$layout: int notification_action_tombstone
org.threeten.bp.chrono.JapaneseChronology
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
com.google.firebase.installations.StateListener: boolean onException(java.lang.Exception)
io.flutter.plugins.firebase.messaging.PluginRegistrantException: PluginRegistrantException()
io.flutter.plugins.pathprovider.R$dimen: int compat_control_corner_material
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initAndroidThreeTen(android.content.Context)
com.google.firebase.R$styleable: int FontFamily_fontProviderFetchStrategy
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLargeIconInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.plugins.firebase.messaging.R$drawable: int notification_action_background
io.flutter.plugins.firebase.core.R$styleable: int[] Capability
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: io.flutter.plugins.urllauncher.UrlLauncher urlLauncher
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_21
com.google.firebase.analytics.ktx.AnalyticsKt
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,java.lang.Object)
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ACTION_CLOSE
com.google.firebase.ktx.R$dimen: int compat_button_padding_horizontal_material
com.google.firebase.iid.FirebaseInstanceId: void enqueueTaskWithDelaySeconds(java.lang.Runnable,long)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer groupAlertBehavior
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newTopicsSyncTriggerExecutor()
com.google.firebase.installations.interop.R$dimen: int compat_button_inset_vertical_material
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_enable_title
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
io.flutter.view.AccessibilityBridge$StringAttributeType
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry$1
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void initInstance(io.flutter.plugin.common.BinaryMessenger)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String X_ANDROID_IID_MIGRATION_KEY
io.flutter.plugin.common.StandardMessageCodec: void writeSize(java.io.ByteArrayOutputStream,int)
com.google.firebase.encoders.Encoder: void encode(java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.FlutterTextUtils
io.flutter.app.FlutterActivity: void onPostResume()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AOT_SHARED_LIBRARY_NAME
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$WorkEnqueuer mCompatWorkEnqueuer
io.flutter.plugins.firebase.core.R$dimen: int compat_button_inset_vertical_material
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry
com.google.firebase.components.Component$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.Object)
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_type
io.flutter.view.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mMouseCursorPlugin
com.google.firebase.iid.Store: com.google.firebase.iid.Store$Token getToken(java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugins.connectivity.R$styleable: int GradientColorItem_android_offset
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.google.firebase.components.Component: java.util.Set publishedEvents
io.flutter.plugins.firebase.core.R$integer: int status_bar_notification_info_maxnum
io.flutter.plugins.connectivity.ConnectivityPlugin: void teardownChannels()
com.google.firebase.FirebaseError: int ERROR_USER_NOT_FOUND
com.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class,java.lang.Class[])
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void setJNI(io.flutter.embedding.engine.FlutterJNI)
io.flutter.view.FlutterView$2: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.google.firebase.installations.R$id: int action_divider
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.nio.ByteBuffer params
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: SettingsChannel$MessageBuilder(io.flutter.plugin.common.BasicMessageChannel)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SET_AS_GROUP_SUMMARY
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long id
io.flutter.plugins.firebase.messaging.R$string: int common_open_on_phone
io.flutter.plugins.pathprovider.R$drawable: int notification_tile_bg
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void notImplemented()
io.flutter.embedding.android.FlutterFragment
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_EVENT
io.flutter.plugins.firebase.core.R$color
com.google.firebase.datatransport.R$styleable: int GradientColor_android_centerY
com.google.firebase.encoders.json.BuildConfig: java.lang.String FLAVOR
io.flutter.app.FlutterActivity: io.flutter.view.FlutterView createFlutterView(android.content.Context)
io.flutter.app.FlutterActivityDelegate: java.lang.Object valuePublishedByPlugin(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.firebase.installations.FirebaseInstallations: java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void skipTag(android.content.res.XmlResourceParser)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String)
com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_16
io.flutter.plugins.firebase.messaging.R$layout: int notification_template_part_chronometer
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunEngine(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
com.google.firebase.components.Dependency: boolean equals(java.lang.Object)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType[] values()
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String REMOVE_FROM_CART
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer id
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: java.util.concurrent.Executor backgroundExecutor
com.google.firebase.BuildConfig: BuildConfig()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode transparent
com.google.firebase.R$layout: int notification_template_part_time
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: AutoValue_TokenResult$Builder(com.google.firebase.installations.remote.TokenResult)
io.flutter.plugins.firebase.messaging.R$id: int line3
io.flutter.embedding.engine.dart.DartMessenger$Reply: DartMessenger$Reply(io.flutter.embedding.engine.FlutterJNI,int)
io.flutter.plugin.common.BinaryMessenger$BinaryReply: void reply(java.nio.ByteBuffer)
io.flutter.plugin.platform.PlatformPlugin$1: void restoreSystemUiOverlays()
com.google.firebase.components.InvalidRegistrarException
com.google.firebase.ktx.R$id: int text2
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void teardown()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: void onNotificationOpen(android.content.Context,android.os.Bundle)
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String toString()
io.flutter.plugins.connectivity.R$dimen: int compat_button_padding_vertical_material
io.flutter.plugins.urllauncher.R$dimen: int compat_button_padding_horizontal_material
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg
com.google.firebase.iid.Store$Token
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory)
com.google.firebase.iid.RequestDeduplicator
io.flutter.plugins.firebase.core.R$id: int tag_unhandled_key_listeners
io.flutter.app.FlutterPluginRegistry: java.util.List access$900(io.flutter.app.FlutterPluginRegistry)
com.google.firebase.encoders.annotations.Encodable$Field
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String triggeredEventName
io.flutter.plugin.platform.PlatformViewsController: android.view.View getPlatformViewById(java.lang.Integer)
com.google.firebase.components.Component: Component(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set,com.google.firebase.components.Component$1)
com.google.firebase.installations.interop.R$style: int TextAppearance_Compat_Notification_Title
io.flutter.view.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: ScheduledNotificationBootReceiver()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: void run()
io.flutter.view.FlutterNativeView: void attach(io.flutter.view.FlutterNativeView)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzx)
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$4: com.google.android.gms.tasks.Continuation $instance
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$CompatJobEngine mJobImpl
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List decodeSystemUiOverlays(org.json.JSONArray)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager this$0
io.flutter.plugins.sharedpreferences.R$color: int notification_action_color_filter
com.google.firebase.R$dimen: int notification_media_narrow_margin
io.flutter.view.AccessibilityBridge: int access$7000()
com.google.android.gms.internal.measurement.zzdo: int zze
com.google.firebase.datatransport.R$styleable
io.flutter.app.FlutterActivityDelegate: void onStart()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.flutter.plugins.connectivity.R$id: int tag_screen_reader_focusable
io.flutter.plugin.platform.PlatformViewsController: void destroyOverlaySurfaces()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String ADD_SHIPPING_INFO
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_INITIAL_ROUTE
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient this$1
io.flutter.view.FlutterView: void releaseAccessibilityNodeProvider()
com.google.firebase.installations.FirebaseInstallationsApi: com.google.android.gms.tasks.Task getId()
com.google.firebase.installations.R$style: int Widget_Compat_NotificationActionContainer
io.flutter.view.AccessibilityBridge: int previousRouteId
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
com.google.firebase.iid.RequestDeduplicator$$Lambda$0: RequestDeduplicator$$Lambda$0(com.google.firebase.iid.RequestDeduplicator,android.util.Pair)
com.google.firebase.iid.FirebaseInstanceId: java.util.concurrent.ScheduledExecutorService syncExecutor
com.google.firebase.FirebaseOptions: java.lang.String DATABASE_URL_RESOURCE_NAME
com.google.firebase.components.Component$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)
com.google.firebase.components.ComponentDiscovery$$Lambda$1: java.lang.Object get()
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: android.content.Intent build(android.content.Context)
com.google.firebase.FirebaseNetworkException: FirebaseNetworkException(java.lang.String)
com.google.firebase.iid.WithinAppServiceConnection$BindRequest: com.google.android.gms.tasks.Task getTask()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setGcmSenderId(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean)
io.flutter.embedding.android.FlutterActivity: android.content.Intent createDefaultIntent(android.content.Context)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix getMatrix()
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void deleteFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.models.PersonDetails: PersonDetails(java.lang.Boolean,java.lang.String,com.dexterous.flutterlocalnotifications.models.IconSource,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails readPersonDetails(java.util.Map)
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field[] values()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldHandleDeeplinking()
io.flutter.plugins.connectivity.R$styleable: int FontFamily_fontProviderPackage
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra[] values()
io.flutter.embedding.android.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
com.google.firebase.heartbeatinfo.HeartBeatResult: HeartBeatResult()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
com.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: DefaultUserAgentPublisher$$Lambda$1()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.google.firebase.iid.WithinAppServiceConnection: WithinAppServiceConnection(android.content.Context,java.lang.String,java.util.concurrent.ScheduledExecutorService)
io.flutter.Log: void setLogLevel(int)
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService()
io.flutter.Log: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_android_font
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: java.lang.String getType(android.net.Uri)
com.google.firebase.messaging.ImageDownload: com.google.android.gms.tasks.Task task
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.view.FlutterView: android.graphics.Bitmap getBitmap()
com.google.firebase.messaging.ImageDownload: java.net.URL url
io.flutter.embedding.android.FlutterActivity: void onNewIntent(android.content.Intent)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
io.flutter.util.Preconditions
com.google.firebase.components.CycleDetector$ComponentNode: void addDependency(com.google.firebase.components.CycleDetector$ComponentNode)
io.flutter.plugin.editing.InputConnectionAdaptor: int clampIndexToEditable(int,android.text.Editable)
io.flutter.view.VsyncWaiter$1: VsyncWaiter$1(io.flutter.view.VsyncWaiter)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH
io.flutter.embedding.engine.renderer.RenderSurface: void pause()
io.flutter.plugins.firebase.messaging.R$styleable: int SignInButton_colorScheme
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.google.firebase.installations.InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult$Builder setToken(java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_endColor
com.google.firebase.components.Component$$Lambda$3
com.google.firebase.installations.R$drawable: int notify_panel_notification_icon_bg
com.google.firebase.installations.interop.R$attr: int fontStyle
com.google.firebase.messaging.SendException
io.flutter.plugins.firebase.core.R$id: int blocking
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.RequestDeduplicator requestDeduplicator
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext nested(java.lang.String)
io.flutter.app.FlutterActivityDelegate: android.view.View access$002(io.flutter.app.FlutterActivityDelegate,android.view.View)
com.google.firebase.iid.WithinAppServiceBinder: WithinAppServiceBinder(com.google.firebase.iid.WithinAppServiceBinder$IntentHandler)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: java.lang.Boolean readEnabled()
io.flutter.plugins.pathprovider.BuildConfig
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.String initialRoute
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationCompat$MessagingStyle$Message createMessage(android.content.Context,com.dexterous.flutterlocalnotifications.models.MessageDetails)
com.google.firebase.installations.local.PersistedInstallationEntry: long getExpiresInSecs()
com.google.firebase.messaging.TopicsSyncTask: com.google.firebase.iid.Metadata metadata
com.google.firebase.installations.R$styleable: int GradientColor_android_endColor
com.google.firebase.analytics.connector.internal.zzc: java.util.List zzd
io.flutter.view.AccessibilityBridge: boolean isReleased
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.flutter.app.FlutterActivityEvents: void onStart()
io.flutter.embedding.android.FlutterActivity: java.lang.String TAG
com.google.firebase.installations.R$id: int blocking
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiChangeListener()
io.flutter.plugins.firebase.messaging.R$id: int action_image
com.google.firebase.installations.remote.RequestLimiter: com.google.firebase.installations.Utils utils
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotificationMatchingDateComponents(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugins.firebase.core.R$string: int common_google_play_services_unknown_issue
com.google.firebase.messaging.CommonNotificationBuilder
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_unknown_issue
com.google.firebase.encoders.ValueEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(long)
com.google.firebase.analytics.ktx.ParametersBuilder: android.os.Bundle zza
io.flutter.plugins.pathprovider.BuildConfig: boolean DEBUG
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_install_title
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: MouseCursorChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.firebase.datatransport.R$id: int none
io.flutter.plugin.editing.TextInputPlugin: android.text.Editable getEditable()
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzR
com.google.firebase.iid.SyncTask: com.google.firebase.iid.FirebaseInstanceId access$000(com.google.firebase.iid.SyncTask)
io.flutter.plugin.platform.PlatformPlugin: void access$1000(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
io.flutter.view.AccessibilityBridge$Flag: int value
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface: void attachToContentProvider(android.content.ContentProvider,androidx.lifecycle.Lifecycle)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.SplashScreen provideSplashScreen()
io.flutter.view.FlutterView: boolean checkInputConnectionProxy(android.view.View)
com.google.firebase.iid.WithinAppServiceConnection$BindRequest: WithinAppServiceConnection$BindRequest(android.content.Intent)
com.google.firebase.iid.BuildConfig: BuildConfig()
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,int,java.nio.ByteBuffer)
com.google.firebase.components.OptionalProvider$$Lambda$1: com.google.firebase.inject.Deferred$DeferredHandler arg$2
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String CHANNEL_ACTION
androidx.fragment.app.Fragment: boolean isResumed()
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_centerX
com.google.android.gms.internal.measurement.zzcx: com.google.android.gms.internal.measurement.zzdq zzf
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderPackage
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource[] $VALUES
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.plugins.firebase.core.R$styleable
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_17
com.google.firebase.messaging.FirebaseMessaging: java.lang.String lambda$getToken$2$FirebaseMessaging(com.google.android.gms.tasks.Task)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: AccessibilityBridge$SemanticsNode(io.flutter.view.AccessibilityBridge)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_centerX
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.messaging.TopicsSyncTask: android.content.Context access$300(com.google.firebase.messaging.TopicsSyncTask)
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.firebase.messaging.FirebaseMessaging$$Lambda$2
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getComposerLabel(android.content.Intent)
io.flutter.plugins.pathprovider.R$dimen: int compat_button_inset_vertical_material
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder
io.flutter.plugins.firebase.messaging.R$id: int none
com.google.android.gms.internal.measurement.zzcp: com.google.android.gms.internal.measurement.zzhz zzj
com.google.firebase.installations.FirebaseInstallationsException
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface)
com.google.firebase.installations.interop.R$style
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext nested(com.google.firebase.encoders.FieldDescriptor)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PENDING_NOTIFICATION_REQUESTS_METHOD
io.flutter.plugins.GeneratedPluginRegistrant
io.flutter.plugins.pathprovider.R$id: int tag_unhandled_key_listeners
io.flutter.plugin.localization.LocalizationPlugin$1: io.flutter.plugin.localization.LocalizationPlugin this$0
androidx.lifecycle.ReportFragment$LifecycleCallbacks
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: int hashCode()
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.FirebaseInstallations getInstance(com.google.firebase.FirebaseApp)
io.flutter.plugins.sharedpreferences.R$drawable
com.google.firebase.installations.FirebaseInstallations$1
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord)
com.google.firebase.messaging.FirebaseMessaging$$Lambda$3: void run()
io.flutter.plugin.editing.TextInputPlugin$InputTarget
com.google.firebase.messaging.RemoteMessageCreator: com.google.firebase.messaging.RemoteMessage[] newArray(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToBroadcastReceiver(android.content.BroadcastReceiver,androidx.lifecycle.Lifecycle)
io.flutter.view.AccessibilityBridge$1: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
com.google.firebase.analytics.connector.internal.zze: com.google.android.gms.measurement.api.AppMeasurementSdk zzc
io.flutter.plugins.firebase.messaging.R$drawable: int notification_bg_low_pressed
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT
com.google.android.gms.internal.measurement.zzcp: com.google.android.gms.internal.measurement.zzhz zzh
io.flutter.embedding.android.KeyboardManager: java.util.HashSet redispatchedEvents
com.google.firebase.ktx.R$integer: int status_bar_notification_info_maxnum
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_CONVERSATION
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String name
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.localization.LocalizationPlugin: void sendLocalesToFlutter(android.content.res.Configuration)
io.flutter.plugins.firebase.core.R$dimen: int notification_right_icon_size
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onDetachedFromActivity()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: io.flutter.plugins.urllauncher.MethodCallHandlerImpl methodCallHandler
io.flutter.plugins.urllauncher.UrlLauncherPlugin: java.lang.String TAG
io.flutter.app.FlutterPluginRegistry: io.flutter.view.FlutterView mFlutterView
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_fontStyle
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzs)
io.flutter.plugins.pathprovider.R$dimen: int notification_big_circle_margin
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: PlayStoreDeferredComponentManager(android.content.Context,io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebViewClient webViewClient
io.flutter.plugins.firebase.core.R$dimen: int notification_small_icon_size_as_large
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()
com.google.firebase.components.ComponentRuntime$$Lambda$2: ComponentRuntime$$Lambda$2(com.google.firebase.components.ComponentRegistrar)
com.google.firebase.installations.interop.R$styleable: int FontFamily_fontProviderPackage
com.google.firebase.components.Component: java.lang.Object lambda$intoSet$2(java.lang.Object,com.google.firebase.components.ComponentContainer)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: java.lang.String lookupKeyForAsset(java.lang.String)
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: java.util.List lambda$getAndClearStoredHeartBeatInfo$2(com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo)
com.google.firebase.installations.FirebaseInstallations$2
io.flutter.plugin.editing.TextInputPlugin$1: void finishAutofillContext(boolean)
com.google.firebase.FirebaseOptions: java.lang.String access$500(com.google.firebase.FirebaseOptions)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.google.firebase.components.OptionalProvider$$Lambda$1: OptionalProvider$$Lambda$1(com.google.firebase.inject.Deferred$DeferredHandler,com.google.firebase.inject.Deferred$DeferredHandler)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler
com.google.firebase.analytics.connector.internal.zzc: boolean zzi(java.lang.String)
com.google.firebase.messaging.NotificationParams: boolean isAnalyticsKey(java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map packageData(byte[])
io.flutter.embedding.engine.dart.DartMessenger$Reply: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor
com.google.firebase.iid.Store: void deleteToken(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorHandle: void registerEventNames(java.util.Set)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.fragment.app.Fragment: boolean mRestored
io.flutter.plugins.pathprovider.R$attr: int fontVariationSettings
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String COMPOSER_LABEL
com.google.firebase.messaging.CommonNotificationBuilder: int getConsolidatedDefaults(com.google.firebase.messaging.NotificationParams)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVisibility(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugins.sharedpreferences.R$dimen: R$dimen()
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.Map getAllPrefs()
org.threeten.bp.Period: java.lang.Object readResolve()
io.flutter.plugin.common.BasicMessageChannel$Reply: void reply(java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivity()
io.flutter.view.FlutterView$2: io.flutter.view.FlutterView this$0
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
com.google.firebase.messaging.Constants$FirelogAnalytics
io.flutter.plugins.connectivity.ConnectivityPlugin
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointLibrary
com.google.android.gms.internal.measurement.zzdh
io.flutter.embedding.android.FlutterTextureView: void access$400(io.flutter.embedding.android.FlutterTextureView)
com.google.firebase.installations.R$id: int line3
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CURRENCY
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel()
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_4
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_26
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void setCallbackDispatcher(long)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1)
io.flutter.plugins.pathprovider.R$id: int tag_accessibility_heading
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker INSTANCE
io.flutter.plugins.pathprovider.R$dimen: int notification_large_icon_width
com.google.firebase.components.ComponentRuntime: ComponentRuntime(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection,com.google.firebase.components.ComponentRuntime$1)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$1
com.google.firebase.messaging.FirebaseMessagingService: java.lang.String ACTION_DIRECT_BOOT_REMOTE_INTENT
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
com.google.firebase.installations.FirebaseInstallations: void triggerOnStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer importance
com.google.firebase.iid.WithinAppServiceConnection$BindRequest: void arrangeTimeout(java.util.concurrent.ScheduledExecutorService)
androidx.fragment.app.Fragment: void performResume()
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String name
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
io.flutter.plugin.common.BasicMessageChannel$MessageHandler
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerCoords
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_icon_dark_normal
com.google.firebase.analytics.connector.internal.zze: zze(com.google.android.gms.measurement.api.AppMeasurementSdk,com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener)
com.google.firebase.components.ComponentRegistrar
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.EditorInfo mEditorInfo
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized()
io.flutter.app.FlutterActivityDelegate: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.android.FlutterImageView: void onDraw(android.graphics.Canvas)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_DRAWABLE_RESOURCE_ERROR_MESSAGE
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedPlatformViewIds
io.flutter.view.AccessibilityBridge: void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.installations.FirebaseInstallations: void preConditionChecks()
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int ADD
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderSystemFontFamily
io.flutter.view.FlutterNativeView: java.lang.String getObservatoryUri()
com.google.firebase.ktx.R$id: int blocking
com.google.firebase.firebase_analytics.R
com.google.firebase.components.ComponentRuntime$$Lambda$2
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
com.google.firebase.messaging.EnhancedIntentService: void lambda$processIntent$0$EnhancedIntentService(android.content.Intent,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.embedding.android.KeyboardManager$1
com.google.firebase.analytics.connector.AnalyticsConnector: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long)
com.google.firebase.installations.interop.BuildConfig: int VERSION_CODE
com.google.android.gms.internal.measurement.zzdu: java.lang.String zzg
io.flutter.embedding.android.FlutterImageView: void logW(java.lang.String,java.lang.Object[])
io.flutter.embedding.engine.loader.ResourceExtractor: void deleteFiles(java.lang.String,java.util.HashSet)
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.Metadata metadata
io.flutter.embedding.engine.systemchannels.RestorationChannel: void setRestorationData(byte[])
com.google.firebase.iid.ServiceStarter: android.content.Intent unwrapServiceIntent(android.content.Intent)
io.flutter.plugins.connectivity.R$id: int notification_main_column_container
com.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task subscribeToTopic(java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugins.firebase.core.R$string: int status_bar_notification_info_overflow
com.google.firebase.FirebaseApp: java.util.List getApps(android.content.Context)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_centerY
io.flutter.app.FlutterFragmentActivity
io.flutter.view.FlutterNativeView: void assertAttached()
org.threeten.bp.chrono.ThaiBuddhistDate
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemNavigationBarContrastEnforced
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: java.lang.Class fragmentClass
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderFetchStrategy
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage
io.flutter.plugins.pathprovider.R$id: int icon_group
io.flutter.plugins.firebase.core.R$drawable: int notification_bg_low_pressed
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer decodeMessage(java.nio.ByteBuffer)
com.google.firebase.messaging.TopicOperation: com.google.firebase.messaging.TopicOperation subscribe(java.lang.String)
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedDirectInterfaces
com.google.firebase.iid.FirebaseInstanceId: void deleteInstanceId()
com.google.firebase.encoders.FieldDescriptor: FieldDescriptor(java.lang.String,java.util.Map,com.google.firebase.encoders.FieldDescriptor$1)
com.google.firebase.R$color: int notification_icon_bg_color
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getLibraryName()
io.flutter.plugins.sharedpreferences.R$id: int tag_accessibility_clickable_spans
com.google.firebase.R$dimen: int notification_action_text_size
io.flutter.view.FlutterMain: java.lang.String findAppBundlePath()
io.flutter.plugins.firebase.core.R$color: int androidx_core_secondary_text_default_material_light
com.google.firebase.messaging.FirebaseMessaging$AutoInit: void lambda$initialize$1$FirebaseMessaging$AutoInit(com.google.firebase.events.Event)
org.threeten.bp.chrono.MinguoDate: java.lang.Object writeReplace()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
io.flutter.plugins.firebase.core.R$string: R$string()
io.flutter.plugins.sharedpreferences.R$id: int forever
io.flutter.plugins.firebase.messaging.R$style: R$style()
com.google.android.gms.internal.measurement.zzcp: int zzg
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.firebase.messaging.MessagingAnalytics: void logNotificationReceived(android.content.Intent)
io.flutter.plugins.urllauncher.UrlLauncher: android.content.Context applicationContext
com.google.firebase.iid.WakeLockHolder: void reset()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.google.firebase.measurement_impl.R: R()
io.flutter.plugins.connectivity.R$dimen: int notification_action_text_size
com.google.firebase.components.LazySet: java.lang.Object get()
io.flutter.plugins.urllauncher.R$id: int action_divider
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String TIMESTAMP_PREFIX
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_tileMode
com.google.firebase.analytics.connector.internal.zzc: java.lang.String zzk(java.lang.String)
io.flutter.plugins.pathprovider.R$id: int action_image
io.flutter.view.AccessibilityBridge$1
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider EMPTY_PROVIDER
io.flutter.plugins.firebase.core.R$dimen: int compat_button_padding_horizontal_material
io.flutter.view.AccessibilityBridge$SemanticsNode: int flags
io.flutter.plugins.pathprovider.R$styleable
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
io.flutter.plugins.urllauncher.R$id: int blocking
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String USES_CHRONOMETER
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_fontWeight
com.google.android.gms.internal.measurement.zzeg: com.google.android.gms.internal.measurement.zzeg zzk
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel
io.flutter.plugins.firebase.core.R$dimen: int notification_large_icon_width
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment createDefault()
io.flutter.plugins.connectivity.R$color
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
com.google.firebase.messaging.EnhancedIntentService: int onStartCommand(android.content.Intent,int,int)
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColorItem_android_offset
com.google.firebase.components.ComponentRuntime: void initializeAllComponentsForTests()
io.flutter.plugin.common.MethodChannel$Result: void success(java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationCompleteAsync(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: boolean verifyJNI()
com.google.firebase.datatransport.R$attr: int fontStyle
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int)
com.google.firebase.components.Component: java.util.Set dependencies
io.flutter.plugins.firebase.messaging.R$layout
com.google.android.gms.internal.measurement.zzdj: int zzs
com.google.firebase.ktx.R$style
com.google.firebase.heartbeatinfo.AutoValue_SdkHeartBeatResult: java.lang.String toString()
com.google.firebase.installations.local.PersistedInstallation: java.lang.String FIREBASE_INSTALLATION_ID_KEY
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: long getUserCallbackHandle()
io.flutter.embedding.android.FlutterActivity: void configureStatusBarForFullscreenFlutterExperience()
org.threeten.bp.OffsetDateTime: java.lang.Object writeReplace()
com.google.android.gms.internal.measurement.zzdj: int zzQ
io.flutter.app.FlutterActivityDelegate$1
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isWaitingForActivityReattachment
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationManagerCompat getNotificationManager(android.content.Context)
io.flutter.view.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: void run()
com.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.Executor directExecutor()
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.RenderMode getRenderMode()
com.google.firebase.ktx.R$id: int time
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface: void detachFromContentProvider()
com.google.firebase.iid.FirebaseInstanceId$$Lambda$0
io.flutter.embedding.android.FlutterActivity: void switchLaunchThemeForNormalTheme()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_27
io.flutter.plugins.firebase.messaging.R$id: int accessibility_action_clickable_span
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
com.google.firebase.iid.InstanceIdResultImpl
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
io.flutter.plugin.editing.ListenableEditingState: void beginBatchEdit()
com.google.android.gms.internal.measurement.zzeg: int zza
io.flutter.view.FlutterView: boolean mIsSoftwareRenderingEnabled
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.google.firebase.messaging.TopicsSubscriber: android.content.Context context
org.threeten.bp.Ser: Ser()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.View mFlutterView
com.google.firebase.iid.FirebaseInstanceId: java.lang.String getToken(java.lang.String,java.lang.String)
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String STICKY
com.google.firebase.installations.interop.R$dimen: int compat_button_padding_horizontal_material
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService executorService
com.google.firebase.installations.R$styleable: int ColorStateListItem_android_color
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost()
com.google.firebase.iid.SyncTask: void run()
io.flutter.app.FlutterActivityEvents: void onNewIntent(android.content.Intent)
io.flutter.plugin.platform.VirtualDisplayController$1
io.flutter.plugins.connectivity.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.firebase.installations.local.PersistedInstallation: java.lang.String FIS_ERROR_KEY
com.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance(com.google.firebase.installations.time.Clock)
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTER_INITIALIZATION_ARGS
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: java.lang.String getSdkName()
com.google.firebase.components.InvalidRegistrarException: InvalidRegistrarException(java.lang.String,java.lang.Throwable)
com.google.firebase.analytics.ktx.ConsentBuilder: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus getAdStorage()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.HashMap getMappedNotificationChannel(android.app.NotificationChannel)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderCerts
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzA
io.flutter.plugin.editing.TextInputPlugin: void lockPlatformViewInputConnection()
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageChannel(android.content.Intent)
io.flutter.view.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.google.firebase.platforminfo.LibraryVersion: java.lang.String getLibraryName()
io.flutter.plugins.firebase.messaging.R$id: int tag_state_description
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableLights
com.google.firebase.R$dimen: int notification_large_icon_height
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColorItem_android_color
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
io.flutter.embedding.engine.plugins.service.ServiceControlSurface
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_android_fontStyle
com.google.android.gms.internal.measurement.zzby
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_7
com.google.firebase.installations.interop.R$dimen: int compat_control_corner_material
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.google.firebase.installations.R$styleable: int GradientColor_android_startColor
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseIntArray access$100(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.app.FlutterActivityDelegate: void addLaunchView()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo lambda$component$4(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: void send()
io.flutter.app.FlutterFragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_PROJECT_ID
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.app.FlutterPluginRegistry: void detach()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CONTENT_TYPE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action TAP
com.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)
com.google.android.gms.internal.measurement.zzcp: int zza
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onReceive(android.content.Context,android.content.Intent)
io.flutter.plugins.firebase.messaging.R$id: int right_icon
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1)
com.google.firebase.FirebaseOptions: java.lang.String access$200(com.google.firebase.FirebaseOptions)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String nativeLibraryDir
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener
io.flutter.plugins.firebase.core.R$styleable: int[] GradientColor
com.google.firebase.datatransport.R$attr: int fontVariationSettings
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: MethodChannel$IncomingMethodCallHandler$1(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.plugin.editing.InputConnectionAdaptor: void closeConnection()
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder addData(java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzdf: java.lang.String zze
com.google.android.gms.internal.measurement.zzdj: long zzn
io.flutter.plugins.firebase.messaging.R$id: int text
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
com.google.firebase.FirebaseApp: java.lang.String toString()
io.flutter.plugin.editing.TextInputPlugin: boolean needsAutofill()
io.flutter.embedding.android.FlutterEngineConfigurator: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AUTOMATICALLY_REGISTER_PLUGINS_METADATA_KEY
io.flutter.Log: void v(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.activity.ComponentActivity$2
io.flutter.view.FlutterView$ViewportMetrics: int systemGestureInsetLeft
com.google.firebase.messaging.TopicsStore: java.util.concurrent.Executor syncExecutor
com.google.firebase.messaging.FirebaseMessagingRegistrar$DevNullTransport: FirebaseMessagingRegistrar$DevNullTransport(com.google.firebase.messaging.FirebaseMessagingRegistrar$1)
com.google.firebase.analytics.connector.internal.zzc: java.util.List zzf
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.Class activityClass
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
com.google.firebase.FirebaseApp: java.lang.String DEFAULT_APP_NAME
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface
io.flutter.view.AccessibilityBridge: int ACTION_SHOW_ON_SCREEN
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String OLD_GEN_HEAP_SIZE_META_DATA_KEY
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String SIGN_UP
com.google.firebase.messaging.FirebaseMessaging$$Lambda$0: void run()
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec codec
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PERSON
com.google.firebase.messaging.NotificationParams: boolean isReservedKey(java.lang.String)
com.google.android.gms.internal.measurement.zzeg: java.lang.String zzg
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: AutoValue_InstallationResponse$Builder()
com.google.firebase.events.Event
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelDescription
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask mExtractTask
com.google.firebase.components.RestrictedComponentContainer: RestrictedComponentContainer(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)
com.google.firebase.iid.FirebaseInstanceId: boolean isGmsCorePresent()
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: java.lang.Long tokenExpirationTimestamp
com.google.firebase.datatransport.R$styleable: int FontFamily_fontProviderQuery
io.flutter.plugin.common.BinaryCodec: io.flutter.plugin.common.BinaryCodec INSTANCE
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.embedding.android.MotionEventTracker: java.util.PriorityQueue unusedEvents
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String[] toArray()
com.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$2$FirebaseInstanceId(java.lang.String,java.lang.String,com.google.android.gms.tasks.Task)
com.google.android.gms.internal.measurement.zzdf: com.google.android.gms.internal.measurement.zzhz zzj
io.flutter.embedding.android.FlutterFragment: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugin.common.StandardMessageCodec: io.flutter.plugin.common.StandardMessageCodec INSTANCE
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getChannelId()
com.google.firebase.FirebaseApp$$Lambda$1
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getRouteName()
com.google.firebase.installations.remote.AutoValue_InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$ResponseCode responseCode
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean fullScreenIntent
io.flutter.view.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.google.firebase.installations.R$dimen: int compat_notification_large_icon_max_width
com.google.firebase.components.OptionalProvider$$Lambda$1
com.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance()
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.LifecycleRegistry lifecycle
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventWrapper: FirelogAnalyticsEvent$FirelogAnalyticsEventWrapper(com.google.firebase.messaging.FirelogAnalyticsEvent)
io.flutter.embedding.android.FlutterSurfaceView: boolean gatherTransparentRegion(android.graphics.Region)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TAG
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute(io.flutter.view.AccessibilityBridge$1)
com.google.firebase.iid.WithinAppServiceConnection$BindRequest: void lambda$arrangeTimeout$1$WithinAppServiceConnection$BindRequest(java.util.concurrent.ScheduledFuture,com.google.android.gms.tasks.Task)
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback
io.flutter.plugins.firebase.messaging.R$style: int Widget_Compat_NotificationActionContainer
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$2: android.content.Context arg$1
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: ShimRegistrar(java.lang.String,java.util.Map)
com.google.firebase.heartbeatinfo.SdkHeartBeatResult: int compareTo(java.lang.Object)
com.google.firebase.iid.ServiceStarter: int ERROR_UNKNOWN
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_4
com.google.firebase.installations.local.IidStore: java.lang.String parseIidTokenFromJson(java.lang.String)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldAutomaticallyHandleOnBackPressed
io.flutter.app.FlutterActivityEvents: void onDestroy()
io.flutter.embedding.android.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.lang.Class)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets
com.google.firebase.events.Subscriber
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_7
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp getInstance(java.lang.String)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String LOCAL_ONLY
com.google.android.gms.measurement.internal.zzp: android.os.Parcelable$Creator CREATOR
io.flutter.view.VsyncWaiter$1$1
io.flutter.plugin.editing.ListenableEditingState: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)
com.google.firebase.messaging.EnhancedIntentService$$Lambda$1
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.embedding.android.FlutterSurfaceView: java.lang.String TAG
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken
com.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetAuthTokenListener()
io.flutter.plugin.common.FlutterException: java.lang.Object details
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
android.support.v4.media.MediaBrowserCompat$MediaItem
com.google.firebase.installations.interop.R$layout: int notification_template_part_chronometer
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener
io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_14
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: java.util.Set consumers
io.flutter.plugin.common.FlutterException: java.lang.String code
io.flutter.plugins.sharedpreferences.R$id: int line1
com.google.firebase.installations.Utils: long AUTH_TOKEN_EXPIRATION_BUFFER_IN_SECS
com.google.firebase.ktx.R$styleable: int[] GradientColorItem
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
io.flutter.plugins.urllauncher.R$layout: int notification_action_tombstone
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus[] values()
com.google.firebase.BuildConfig: boolean DEBUG
com.google.firebase.messaging.MessagingAnalytics: int getMessagePriority(java.lang.String)
com.google.firebase.installations.FirebaseInstallations: java.lang.String getName()
com.google.firebase.ktx.R$styleable: int FontFamily_fontProviderFetchStrategy
com.dexterous.flutterlocalnotifications.models.NotificationDetails: NotificationDetails()
com.google.firebase.ktx.R$layout: int notification_action_tombstone
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_START_PAUSED
com.google.firebase.iid.FirebaseInstanceId$$Lambda$1: FirebaseInstanceId$$Lambda$1()
com.google.firebase.ktx.R$string
com.google.firebase.components.Component$$Lambda$2
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CHARACTER
com.google.firebase.FirebaseError: int ERROR_USER_MISMATCH
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler
com.google.firebase.FirebaseApp: java.util.concurrent.atomic.AtomicBoolean access$500(com.google.firebase.FirebaseApp)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.lang.String TAG
io.flutter.plugin.editing.TextInputPlugin: int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization)
io.flutter.embedding.android.FlutterFragmentActivity: android.os.Bundle getMetaData()
com.google.firebase.FirebaseOptions: java.lang.String access$400(com.google.firebase.FirebaseOptions)
com.google.firebase.iid.WithinAppServiceBinder: void send(com.google.firebase.iid.WithinAppServiceConnection$BindRequest)
io.flutter.app.FlutterActivityDelegate: void onDestroy()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromActivityForConfigChanges()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void startBackgroundIsolate()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String domainNetworkPolicy
com.google.firebase.FirebaseOptions$Builder: java.lang.String gcmSenderId
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInHitTestOrder
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
com.google.firebase.iid.ServiceStarter: android.app.PendingIntent createMessagingPendingIntent(android.content.Context,int,android.content.Intent,int)
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Provider EMPTY_PROVIDER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine spawn(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.lang.String)
com.google.firebase.iid.GmsRpc: GmsRpc(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)
com.google.firebase.R$id: int text
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager
org.threeten.bp.chrono.MinguoChronology: java.lang.Object readResolve()
io.flutter.plugins.connectivity.Connectivity: android.net.ConnectivityManager getConnectivityManager()
io.flutter.plugin.editing.TextInputPlugin$InputTarget: TextInputPlugin$InputTarget(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int)
io.flutter.plugin.common.PluginRegistry$NewIntentListener: boolean onNewIntent(android.content.Intent)
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_fontStyle
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.Store store
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap contextToPlatformView
io.flutter.plugins.firebase.core.BuildConfig: boolean DEBUG
com.google.firebase.FirebaseError: int ERROR_USER_DISABLED
io.flutter.view.AccessibilityBridge: java.util.List flutterNavigationStack
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_low
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1
com.google.firebase.iid.RequestDeduplicator: com.google.android.gms.tasks.Task getOrStartGetTokenRequest(java.lang.String,java.lang.String,com.google.firebase.iid.RequestDeduplicator$GetTokenRequest)
androidx.fragment.app.Fragment: java.lang.Object requireHost()
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics zza
com.google.firebase.installations.R$id: int text2
com.google.firebase.iid.FcmBroadcastProcessor: java.util.concurrent.Executor executor
com.google.firebase.encoders.json.JsonDataEncoderBuilder: java.util.Map valueEncoders
com.google.firebase.DataCollectionDefaultChange: DataCollectionDefaultChange(boolean)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry()
com.google.firebase.analytics.ktx.ParametersBuilder: void param(java.lang.String,android.os.Bundle)
io.flutter.view.VsyncWaiter$1$1: void doFrame(long)
androidx.fragment.app.Fragment: void onLowMemory()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status TOO_MANY_REQUESTS
com.google.firebase.installations.FirebaseInstallations: void addStateListeners(com.google.firebase.installations.StateListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: FlutterMutatorsStack$FlutterMutatorType(java.lang.String,int)
io.flutter.plugins.urllauncher.R$attr: int fontProviderCerts
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo
com.google.android.gms.internal.measurement.zzck: boolean zzg
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4400(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.firebase.messaging.FirebaseMessaging: boolean isAutoInitEnabled()
com.google.firebase.installations.interop.R$drawable: int notification_template_icon_bg
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_SOFTWARE_RENDERING
io.flutter.embedding.android.FlutterSplashView: void transitionToFlutter()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigTextStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.google.firebase.iid.ServiceStarter: android.content.Intent getMessagingEvent()
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader()
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_12
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEMS
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzW
com.google.firebase.components.CycleDetector$1
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.android.KeyboardManager keyboardManager
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.inject.Provider heartbeatInfo
io.flutter.plugins.firebase.core.R$styleable: int[] GradientColorItem
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride
io.flutter.embedding.engine.dart.DartMessenger: java.lang.String TAG
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory getFlutterJNIFactory()
io.flutter.embedding.android.FlutterImageView: void resizeIfNeeded(int,int)
com.google.firebase.components.OptionalProvider: java.lang.Object get()
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field valueOf(java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.google.firebase.components.ComponentRuntime$$Lambda$3: void run()
io.flutter.view.AccessibilityBridge: io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate
io.flutter.embedding.engine.loader.FlutterLoader$Settings: FlutterLoader$Settings()
com.google.firebase.analytics.zzb: com.google.firebase.analytics.FirebaseAnalytics zza
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_15
io.flutter.embedding.engine.FlutterEngineGroup$1: void onEngineWillDestroy()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_LIST_ID
io.flutter.plugin.platform.AccessibilityEventsDelegate: AccessibilityEventsDelegate()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context)
io.flutter.embedding.engine.loader.ResourceExtractor: ResourceExtractor(java.lang.String,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager)
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.GmsRpc rpc
com.google.firebase.iid.FirebaseInstanceId: long getCreationTime()
io.flutter.plugin.editing.ListenableEditingState: java.lang.String toString()
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatSummaryText
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_PLUGIN_CONSTANTS
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager getInputMethodManager()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver$2
com.google.firebase.messaging.MessagingAnalytics: void logToScion(java.lang.String,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate
com.google.firebase.messaging.SharedPreferencesQueue
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler)
io.flutter.plugins.urllauncher.R$attr: R$attr()
io.flutter.plugins.urllauncher.R$attr: int font
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$4
com.google.firebase.components.Dependency: java.lang.String describeInjection(int)
com.google.firebase.analytics.zza
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.config.EncoderConfig registerEncoder(java.lang.Class,com.google.firebase.encoders.ValueEncoder)
io.flutter.plugins.urllauncher.WebViewActivity$2
io.flutter.embedding.android.FlutterTextureView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.android.FlutterView: void resetWillNotDraw(boolean,boolean)
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_endColor
io.flutter.plugins.connectivity.ConnectivityMethodChannelHandler
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel)
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String VIEW_PROMOTION
io.flutter.plugin.platform.PlatformPlugin: void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.google.firebase.ktx.R$id
com.google.firebase.installations.interop.R$styleable: int FontFamily_fontProviderFetchStrategy
io.flutter.plugin.common.BinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.firebase.installations.remote.AutoValue_InstallationResponse: AutoValue_InstallationResponse(java.lang.String,java.lang.String,java.lang.String,com.google.firebase.installations.remote.TokenResult,com.google.firebase.installations.remote.InstallationResponse$ResponseCode)
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String PRESENT_OFFER
com.google.firebase.installations.local.PersistedInstallationEntry: boolean isErrored()
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String MSGID
com.google.firebase.iid.RequestDeduplicator: com.google.android.gms.tasks.Task lambda$getOrStartGetTokenRequest$0$RequestDeduplicator(android.util.Pair,com.google.android.gms.tasks.Task)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Class,java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AUTOMATICALLY_REGISTER_PLUGINS_KEY
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus)
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.SingleViewPresentation presentation
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: long id
io.flutter.plugin.editing.InputConnectionAdaptor: boolean finishComposingText()
io.flutter.embedding.android.FlutterActivity: void onUserLeaveHint()
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_12
com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo: CommonNotificationBuilder$DisplayNotificationInfo(androidx.core.app.NotificationCompat$Builder,java.lang.String,int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void setUserCallbackHandle(long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
io.flutter.plugins.urllauncher.R$color: int androidx_core_ripple_material_light
com.google.firebase.iid.Store$Token: boolean needsRefresh(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType
io.flutter.plugins.firebase.messaging.R$id: int adjust_height
io.flutter.embedding.engine.dart.DartMessenger: java.util.WeakHashMap createdTaskQueues
io.flutter.app.FlutterActivityDelegate$1$1: io.flutter.app.FlutterActivityDelegate$1 this$1
io.flutter.Log: void e(java.lang.String,java.lang.String)
com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setAuthToken(com.google.firebase.installations.remote.TokenResult)
com.google.firebase.messaging.RemoteMessage$Notification: boolean defaultVibrateTimings
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_METHOD
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_icon_dark_normal_background
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState[] newArray(int)
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeatNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.String backgroundMode
com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzdo zzS
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getCachedEngineId()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getString(android.os.Bundle,java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingDeltaJSON(java.util.ArrayList)
com.google.firebase.R$id: int notification_main_column
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity attachedActivity()
com.google.firebase.installations.R$styleable: int GradientColor_android_type
com.google.firebase.iid.FcmBroadcastProcessor
io.flutter.view.VsyncWaiter: void init()
io.flutter.plugins.sharedpreferences.R$layout: int notification_action
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task getToken()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK
io.flutter.plugin.platform.VirtualDisplayController: android.view.Surface surface
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int metaState
androidx.fragment.app.Fragment: void onPause()
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$1: FcmBroadcastProcessor$$Lambda$1(android.content.Context,android.content.Intent)
com.google.android.gms.internal.measurement.zzdb: int zzi
io.flutter.app.FlutterActivity: boolean hasPlugin(java.lang.String)
com.google.firebase.iid.WakeLockHolder: long WAKE_LOCK_ACQUIRE_TIMEOUT_MILLIS
com.google.android.gms.common.api.internal.LifecycleCallback
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldAutomaticallyHandleOnBackPressed
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: java.lang.String engineId
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_UP
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1
com.google.firebase.analytics.connector.zza: zza()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeViewImmediate(java.lang.Object[])
io.flutter.plugins.pathprovider.R$id: R$id()
io.flutter.plugins.pathprovider.R$dimen: int notification_subtext_size
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval EveryMinute
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String contentTitle
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry textureRegistry
com.google.firebase.components.Preconditions: Preconditions()
com.google.firebase.installations.interop.R$drawable: int notification_bg_low_normal
com.google.firebase.R$styleable: int[] ColorStateListItem
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: ShimPluginRegistry$ShimRegistrarAggregate()
io.flutter.embedding.android.ExclusiveAppComponent: void detachFromFlutterEngine()
com.google.firebase.installations.R$styleable: int FontFamily_fontProviderQuery
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: android.app.Activity activity
com.google.firebase.iid.Metadata: int getGmsVersionCode()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long getExpiresInSecs()
com.google.firebase.installations.R$layout: R$layout()
com.google.firebase.datatransport.R$id: int tag_transition_group
com.google.firebase.ktx.R$id: int right_icon
io.flutter.plugin.platform.PlatformPlugin: void restoreSystemChromeSystemUIOverlays()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()
io.flutter.view.AccessibilityBridge$StringAttribute: io.flutter.view.AccessibilityBridge$StringAttributeType type
com.google.firebase.iid.FirebaseInstanceId$$Lambda$4: FirebaseInstanceId$$Lambda$4(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.datatransport.R$dimen: int notification_action_icon_size
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: void registerVersion(java.lang.String,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$1: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String ACCEPT_HEADER_KEY
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
io.flutter.view.FlutterMain$Settings: java.lang.String logTag
io.flutter.plugins.pathprovider.StorageDirectoryMapper: StorageDirectoryMapper()
androidx.fragment.app.Fragment: int getStateAfterAnimating()
io.flutter.embedding.android.FlutterImageView$1: int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind
io.flutter.plugins.firebase.core.R$id: int notification_background
com.google.firebase.datatransport.R$styleable: int FontFamily_fontProviderFetchStrategy
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelName
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
io.flutter.plugin.platform.AccessibilityEventsDelegate: io.flutter.view.AccessibilityBridge accessibilityBridge
com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo: int id
androidx.core.app.JobIntentService: boolean doStopCurrentWork()
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider setOfProvider(java.lang.Class)
com.google.firebase.R$integer
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser valueOf(java.lang.String)
com.google.firebase.R$styleable: int GradientColor_android_centerY
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_28
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: BasicMessageChannel$IncomingMessageHandler$1(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.firebase.installations.InstallationTokenResult$Builder
com.google.firebase.components.ComponentDiscovery: ComponentDiscovery(java.lang.Object,com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever)
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.view.TextureRegistry$SurfaceTextureEntry textureEntry
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: void onGlobalFocusChanged(android.view.View,android.view.View)
io.flutter.embedding.android.KeyboardManager: void destroy()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
io.flutter.view.TextureRegistry$SurfaceTextureEntry
com.google.firebase.installations.interop.R$id: int line3
org.threeten.bp.OffsetTime: java.lang.Object readResolve()
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$CommandProcessor mCurProcessor
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
com.google.firebase.messaging.DisplayNotification: boolean isAppForeground()
com.google.firebase.iid.FcmBroadcastProcessor: com.google.android.gms.tasks.Task lambda$startMessagingService$2$FcmBroadcastProcessor(android.content.Context,android.content.Intent,com.google.android.gms.tasks.Task)
io.flutter.plugin.editing.TextInputPlugin: boolean canShowTextInput()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.iid.Metadata: java.lang.String appVersionName
androidx.fragment.app.FragmentActivity: int allocateRequestIndex(androidx.fragment.app.Fragment)
com.google.android.gms.internal.measurement.zzdo: com.google.android.gms.internal.measurement.zzhz zzf
com.google.firebase.messaging.FirebaseMessagingService: void handleIntent(android.content.Intent)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_7
com.google.firebase.installations.FirebaseInstallations: java.util.Set access$000(com.google.firebase.installations.FirebaseInstallations)
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.Object value
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.util.List getStoredHeartBeats(boolean)
androidx.lifecycle.ViewModel: ViewModel()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_NOTIFICATION
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String refreshToken
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()
io.flutter.embedding.android.AndroidTouchProcessor: boolean onGenericMotionEvent(android.view.MotionEvent)
io.flutter.plugin.editing.TextEditingDelta: int getNewComposingEnd()
com.google.firebase.iid.InstanceIdResult: java.lang.String getToken()
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
io.flutter.plugin.common.StandardMessageCodec: byte NULL
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifierBase(int)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetAfter(java.lang.CharSequence,int)
io.flutter.plugins.connectivity.R$drawable: int notification_template_icon_bg
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_font
io.flutter.embedding.engine.loader.ResourceExtractor: void access$200(java.io.InputStream,java.io.OutputStream)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(android.content.Context)
androidx.fragment.app.Fragment: java.lang.String mTag
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.google.firebase.installations.R$styleable: int FontFamily_fontProviderPackage
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onUserLeaveHintListeners
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_dark_default
com.google.firebase.datatransport.R$styleable: int GradientColorItem_android_offset
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_APP_ID
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
io.flutter.plugins.firebase.messaging.R$attr: int fontVariationSettings
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_PRIORITY
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String TITLE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.flutter.plugins.sharedpreferences.R$drawable: int notification_template_icon_bg
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_GREEN
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer day
io.flutter.plugins.urllauncher.R$dimen: int compat_notification_large_icon_max_height
com.google.firebase.installations.FirebaseInstallations: java.lang.Object lockGenerateFid
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION
org.threeten.bp.MonthDay: java.lang.Object writeReplace()
com.google.firebase.components.Component$Builder: java.util.Set providedInterfaces
com.google.firebase.installations.R$styleable: int FontFamilyFont_fontStyle
com.google.firebase.iid.InstanceIdResultImpl: java.lang.String token
io.flutter.embedding.android.FlutterView: android.view.View findViewByAccessibilityIdTraversal(int)
io.flutter.plugins.urllauncher.R$styleable: int Capability_queryPatterns
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$StringAttribute
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputActionFromTextInputAction(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency
io.flutter.plugin.common.BasicMessageChannel: void resizeChannelBuffer(io.flutter.plugin.common.BinaryMessenger,java.lang.String,int)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext inline(java.lang.Object)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] getLocalizationArgs(com.google.firebase.messaging.NotificationParams,java.lang.String)
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueue: void dispatch(java.lang.Runnable)
com.google.firebase.heartbeatinfo.SdkHeartBeatResult: java.lang.String getSdkName()
io.flutter.embedding.engine.systemchannels.PlatformChannel: int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.flutter.embedding.engine.plugins.FlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.R$drawable: R$drawable()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ACLID
io.flutter.plugin.platform.PlatformViewsController: boolean synchronizeToNativeViewHierarchy
com.google.firebase.installations.Utils: Utils(com.google.firebase.installations.time.Clock)
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_icon_dark
com.google.firebase.analytics.connector.internal.zzf: com.google.firebase.analytics.connector.internal.zzg zza
io.flutter.embedding.android.FlutterFragment: void onDestroyView()
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: StandardMessageCodec$ExposedByteArrayOutputStream()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityPluginBinding
io.flutter.plugins.pathprovider.R$dimen: int compat_button_inset_horizontal_material
com.google.android.gms.internal.measurement.zzck: java.lang.String zzf
com.google.firebase.iid.FirebaseInstanceId$$Lambda$4: java.lang.String arg$2
io.flutter.plugins.urllauncher.R$attr: int fontVariationSettings
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_17
androidx.lifecycle.FullLifecycleObserverAdapter
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mBatchTextEditingDeltas
com.google.firebase.R$style: int Widget_Compat_NotificationActionText
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$3: com.google.android.gms.tasks.Continuation $instance
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_CACHED_ENGINE_ID
com.google.firebase.datatransport.R$layout: int notification_action
com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzdj zzZ
io.flutter.plugins.urllauncher.BuildConfig
com.google.firebase.FirebaseOptions$Builder: java.lang.String storageBucket
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject)
io.flutter.plugins.connectivity.R$id: int action_text
com.google.firebase.installations.R$styleable: int GradientColor_android_startY
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
com.google.firebase.R$id: int notification_main_column_container
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4202(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: SingleViewPresentation$AccessibilityDelegatingFrameLayout(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onMoveToForeground()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_21
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $VALUES
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_fontWeight
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_18
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_SKIA_DETERMINISTIC_RENDERING
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel channel
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
io.flutter.plugins.pathprovider.R$id: int icon
com.google.firebase.installations.interop.R$id: int title
com.google.firebase.datatransport.R$dimen: int compat_notification_large_icon_max_height
com.google.firebase.encoders.FieldDescriptor$Builder: java.util.Map properties
com.google.firebase.FirebaseOptions: int hashCode()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int physicalTouchSlop
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult build()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showWhen
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: android.view.View view
com.google.firebase.R$style: int TextAppearance_Compat_Notification_Info
io.flutter.plugins.firebase.messaging.R$styleable: int[] LoadingImageView
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: long millis
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus registrationStatus
com.google.firebase.messaging.FirelogAnalyticsEvent: java.lang.String getEventType()
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String CHANNEL
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.encoders.json.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.plugins.connectivity.R$dimen: int compat_notification_large_icon_max_height
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: boolean access$400(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
org.threeten.bp.Year
io.flutter.plugins.firebase.core.R$dimen: int notification_right_side_padding_top
io.flutter.plugin.editing.TextEditingDelta: int newSelectionEnd
io.flutter.plugins.connectivity.R$styleable: int[] Capability
io.flutter.plugin.localization.LocalizationPlugin
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: TextInputChannel$TextInputType(java.lang.String,int,java.lang.String)
com.google.firebase.iid.WakeLockHolder
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_18
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
com.google.firebase.components.EventBus$$Lambda$1: java.util.Map$Entry arg$1
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_CACHE_SKSL
io.flutter.plugins.pathprovider.R$layout: int notification_template_custom_big
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageLabel(android.content.Intent)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onTouchEvent(android.view.MotionEvent)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_BLUE
com.google.firebase.datatransport.R$styleable: int GradientColor_android_centerX
com.google.firebase.installations.R$attr: int font
com.google.firebase.components.ComponentRuntime$Builder: java.util.List additionalComponents
io.flutter.plugin.platform.PlatformPlugin$1: void setPreferredOrientations(int)
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(java.lang.Object)
com.google.firebase.installations.remote.RequestLimiter: long getBackoffDuration(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel
org.threeten.bp.chrono.Ser: java.lang.Object readResolve()
com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzhy zza
com.google.firebase.R$layout: int notification_template_part_chronometer
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.TransparencyMode)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map access$200(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: android.content.SharedPreferences heartBeatSharedPreferences
io.flutter.plugin.platform.PlatformViewsController$1$1: io.flutter.plugin.platform.PlatformViewsController$1 this$1
android.support.v4.media.AudioAttributesImplApi21Parcelizer
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate: boolean popSystemNavigator()
com.google.android.gms.internal.measurement.zzcj: com.google.android.gms.internal.measurement.zzcj[] values()
io.flutter.plugins.urllauncher.WebViewActivity$2: WebViewActivity$2(io.flutter.plugins.urllauncher.WebViewActivity)
com.google.firebase.ktx.R$styleable: int FontFamilyFont_android_fontWeight
com.google.firebase.datatransport.R$attr
io.flutter.plugins.connectivity.R$string: R$string()
com.google.firebase.datatransport.R$styleable: int GradientColor_android_startX
io.flutter.view.FlutterView: void onPause()
com.google.firebase.iid.WakeLockHolder: void checkAndInitWakeLock(android.content.Context)
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedAccessibilityFocusedNodeId
com.google.android.gms.internal.measurement.zzdj: long zzM
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void addPlugin(io.flutter.embedding.engine.plugins.shim.ShimRegistrar)
com.google.firebase.iid.SyncTask: android.content.Context getContext()
com.google.firebase.installations.FirebaseInstallationsApi: com.google.android.gms.tasks.Task delete()
com.google.firebase.installations.Utils: long currentTimeInSecs()
com.google.firebase.iid.Store: android.content.SharedPreferences store
io.flutter.plugin.editing.TextInputPlugin: java.lang.String TAG
io.flutter.view.FlutterView: java.lang.String TAG
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didChangeLabel()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
io.flutter.plugins.firebase.core.R$layout: int custom_dialog
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
io.flutter.plugins.urllauncher.R$color
com.google.firebase.installations.interop.R$attr: int fontProviderFetchStrategy
com.google.firebase.ktx.R$id: int icon
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel
io.flutter.plugin.common.PluginRegistry: boolean hasPlugin(java.lang.String)
io.flutter.embedding.engine.dart.PlatformMessageHandler: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.app.FlutterPluginRegistry: java.util.List access$800(io.flutter.app.FlutterPluginRegistry)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Long eventTime
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String SUCCESS
io.flutter.view.FlutterView$FirstFrameListener: void onFirstFrame()
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus[] zza
com.google.firebase.ktx.R$dimen: int notification_right_side_padding_top
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage lambda$new$1(android.content.Context)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint
io.flutter.plugin.platform.SingleViewPresentation: int viewId
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalHeight
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_11
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,int)
io.flutter.plugins.firebase.messaging.R$id: int line1
io.flutter.embedding.engine.loader.ResourceExtractor: void copy(java.io.InputStream,java.io.OutputStream)
com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setResponseCode(com.google.firebase.installations.remote.InstallationResponse$ResponseCode)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.Set)
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String bigPicture
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String)
com.google.firebase.components.Lazy
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onResume()
com.google.firebase.components.EventBus: java.util.concurrent.Executor defaultExecutor
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus registrationStatus
io.flutter.embedding.android.FlutterSurfaceView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,boolean)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.PluginRegistry getPlugins()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_15
io.flutter.plugins.sharedpreferences.R$dimen: int notification_media_narrow_margin
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency deferred(java.lang.Class)
com.google.firebase.ktx.R$styleable: int GradientColor_android_tileMode
io.flutter.plugins.urllauncher.R$style: int Widget_Compat_NotificationActionText
io.flutter.plugins.urllauncher.R$styleable: int ColorStateListItem_android_color
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent launchIntent
com.google.android.datatransport.cct.CctBackendFactory
io.flutter.plugins.firebase.messaging.R$styleable: int LoadingImageView_imageAspectRatio
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedSetDirectInterfaces
com.google.firebase.FirebaseCommonRegistrar$$Lambda$5
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object readResolve()
io.flutter.view.AccessibilityBridge$AccessibilityFeature
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
io.flutter.plugins.firebase.core.R$color: int notification_action_color_filter
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON_BITMAP_SOURCE
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.google.firebase.installations.FirebaseInstallations$$Lambda$4: FirebaseInstallations$$Lambda$4(com.google.firebase.installations.FirebaseInstallations,boolean)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(boolean)
com.google.firebase.messaging.SendException: int ERROR_INVALID_PARAMETERS
io.flutter.plugins.firebase.messaging.R$dimen: R$dimen()
io.flutter.plugin.common.MethodCall: java.lang.Object arguments
com.google.firebase.installations.Utils: boolean isAuthTokenExpired(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.firebase.iid.GmsRpc: java.lang.String getHashedFirebaseAppName()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Long getEventTime()
io.flutter.plugins.firebase.core.R$styleable: int[] FontFamily
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_17
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode
io.flutter.plugin.common.ErrorLogResult: void notImplemented()
com.google.firebase.FirebaseApp: java.lang.Object access$300()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.fragment.app.Fragment: int mContentLayoutId
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
io.flutter.embedding.engine.renderer.FlutterRenderer: java.lang.String TAG
com.google.firebase.installations.interop.R$dimen: int notification_right_side_padding_top
com.google.firebase.analytics.connector.R: R()
com.dexterous.flutterlocalnotifications.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: android.content.Context applicationContext
androidx.fragment.app.Fragment: void onDestroyView()
com.google.firebase.FirebaseTooManyRequestsException: FirebaseTooManyRequestsException(java.lang.String)
com.google.firebase.FirebaseApp$UiExecutor: void execute(java.lang.Runnable)
com.google.firebase.messaging.FirebaseMessagingRegistrar$DevNullTransportFactory
io.flutter.plugin.editing.TextInputPlugin: void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
io.flutter.plugins.urllauncher.WebViewActivity: android.content.BroadcastReceiver broadcastReceiver
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.Class,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderCerts
com.google.firebase.components.LazySet: void updateSet()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONTENT_TITLE
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler handler
com.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)
io.flutter.view.FlutterView: void send(java.lang.String,java.nio.ByteBuffer)
com.google.firebase.installations.GetAuthTokenListener: boolean onException(java.lang.Exception)
com.google.firebase.installations.R$string: int status_bar_notification_info_overflow
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification_Title
io.flutter.plugin.platform.PlatformView: void onFlutterViewAttached(android.view.View)
com.google.firebase.ktx.R$integer
io.flutter.embedding.engine.systemchannels.LocalizationChannel: LocalizationChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingState(int,java.lang.String,int,int,int,int)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_9
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_1
io.flutter.plugins.urllauncher.R$styleable: int ColorStateListItem_alpha
com.google.firebase.installations.R$drawable: int notification_bg_low_pressed
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: MethodChannel$IncomingResultHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.analytics.zzc: int zzq(java.lang.String)
io.flutter.plugins.pathprovider.R$id: int tag_on_apply_window_listener
com.google.firebase.installations.interop.R$id: R$id()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill
io.flutter.app.FlutterActivityDelegate$ViewFactory
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND_SOURCE
io.flutter.plugin.common.EventChannel: java.lang.String access$200(io.flutter.plugin.common.EventChannel)
com.google.firebase.messaging.NotificationParams: boolean isNotification(android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String timeZoneName
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_10
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
com.google.firebase.messaging.TopicOperation: java.lang.String topic
io.flutter.plugin.mouse.MouseCursorPlugin$1: MouseCursorPlugin$1(io.flutter.plugin.mouse.MouseCursorPlugin)
com.google.firebase.iid.WakeLockHolder: void initWakeLock(android.content.Context)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: boolean extractAPK(java.io.File)
com.google.firebase.installations.interop.R$styleable: int FontFamily_fontProviderCerts
com.google.firebase.installations.interop.R$style: int TextAppearance_Compat_Notification
com.google.firebase.installations.AutoValue_InstallationTokenResult: long getTokenCreationTimestamp()
org.threeten.bp.chrono.ThaiBuddhistDate: java.lang.Object writeReplace()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
com.google.firebase.ktx.R$styleable: int GradientColor_android_endX
io.flutter.plugins.pathprovider.R$attr: int fontProviderFetchStrategy
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMediaStyle(androidx.core.app.NotificationCompat$Builder)
com.google.firebase.installations.FirebaseInstallations$2: com.google.firebase.installations.internal.FidListener val$listener
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_23
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean inverseTransformDirty
com.google.firebase.platforminfo.LibraryVersion
io.flutter.embedding.android.FlutterTextureView: void disconnectSurfaceFromRenderer()
com.google.firebase.ktx.R$drawable: int notify_panel_notification_icon_bg
io.flutter.embedding.android.FlutterFragmentActivity
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$2: java.lang.Object call()
org.threeten.bp.zone.StandardZoneRules
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_font
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPostResume()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback()
io.flutter.plugin.platform.PlatformViewRegistry
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String SECOND
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String SPEND_VIRTUAL_CURRENCY
androidx.versionedparcelable.ParcelImpl
io.flutter.plugins.sharedpreferences.R$attr: int shortcutMatchRequired
io.flutter.embedding.engine.dart.PlatformTaskQueue: android.os.Handler handler
com.google.firebase.heartbeatinfo.HeartBeatResult: com.google.firebase.heartbeatinfo.HeartBeatResult create(java.lang.String,long,com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onMoveToBackground()
com.google.firebase.R$dimen: int compat_button_padding_horizontal_material
com.google.firebase.components.EventBus$$Lambda$1
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String GROUP_ID
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueue
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task getToken(java.util.Map)
com.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.TopicsStore store
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: DefaultStyleInformation(java.lang.Boolean,java.lang.Boolean)
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField[] values()
com.google.firebase.iid.FirebaseInstanceId$$Lambda$0: java.lang.Object then(com.google.android.gms.tasks.Task)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String aotSharedLibraryName
io.flutter.view.FlutterView: void disableTransparentBackground()
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] getExistingTimestamps(java.io.File)
com.google.firebase.components.AbstractComponentContainer
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatBody
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsPaused()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long millisecondsSinceEpoch
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_low_normal
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
io.flutter.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.firebase.installations.Utils: boolean isValidAppIdFormat(java.lang.String)
com.google.firebase.datatransport.R$dimen: int notification_subtext_size
com.google.firebase.R$styleable: int[] FontFamily
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE
io.flutter.plugins.firebase.core.R$dimen: int notification_action_icon_size
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.flutter.plugins.firebase.core.R$dimen: int compat_button_inset_horizontal_material
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDateMatchingDateTimeComponents(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.view.AccessibilityBridge$2: AccessibilityBridge$2(io.flutter.view.AccessibilityBridge)
io.flutter.plugin.platform.PlatformViewRegistryImpl
io.flutter.view.FlutterView: java.lang.String getLookupKeyForAsset(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String pathToBundle
com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever: java.util.List retrieve(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Activity mainActivity
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_1
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_STORAGE_BUCKET
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String APP_OPEN
com.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter getInstance()
com.google.firebase.R$drawable: int notify_panel_notification_icon_bg
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromePreferredOrientations(int)
io.flutter.FlutterInjector$Builder: FlutterInjector$Builder()
io.flutter.Log: void i(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterView: java.util.Set flutterEngineAttachmentListeners
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.embedding.android.FlutterSplashView$2: FlutterSplashView$2(io.flutter.embedding.android.FlutterSplashView)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
io.flutter.view.FlutterView: io.flutter.plugin.localization.LocalizationPlugin mLocalizationPlugin
com.google.firebase.installations.R$drawable: R$drawable()
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String METADATA_DEFAULT_CHANNEL_ID
io.flutter.embedding.android.FlutterSplashView$3: void run()
com.google.android.gms.internal.measurement.zzby: java.lang.String zzh
io.flutter.view.FlutterNativeView: FlutterNativeView(android.content.Context,boolean)
io.flutter.embedding.android.FlutterActivity: android.app.Activity getActivity()
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra[] values()
io.flutter.embedding.android.AndroidTouchProcessor: android.graphics.Matrix IDENTITY_TRANSFORM
io.flutter.app.FlutterPluginRegistry: java.util.List mViewDestroyListeners
com.google.firebase.installations.interop.R$id: int right_side
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Media
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
com.google.firebase.analytics.zzb: java.lang.Object call()
com.google.firebase.components.Component$Builder: void validateInterface(java.lang.Class)
com.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,android.content.Context,java.util.concurrent.ScheduledExecutorService)
io.flutter.plugins.urllauncher.R$id: int tag_transition_group
com.google.firebase.events.Event: java.lang.Class getType()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleVerticalMovement(boolean,boolean)
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_startX
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_BRAND
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$1: void run()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONLY_ALERT_ONCE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: android.app.Service getService()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder)
com.google.firebase.ktx.R$attr: int fontWeight
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder withNewEngine()
com.google.firebase.datatransport.R$drawable: int notification_bg_low
com.google.firebase.FirebaseError: int ERROR_INVALID_EMAIL
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IMAGE
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$ResponseCode responseCode
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelAllNotifications(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.installations.RandomFidGenerator: RandomFidGenerator()
io.flutter.plugins.connectivity.R$id: int tag_unhandled_key_event_manager
io.flutter.embedding.android.DrawableSplashScreen: android.widget.ImageView$ScaleType scaleType
androidx.fragment.app.Fragment: int getNextAnim()
io.flutter.plugins.sharedpreferences.R$id
org.threeten.bp.LocalDate: java.lang.Object writeReplace()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: WebViewActivity$FlutterWebChromeClient$1(io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient)
com.google.firebase.FirebaseOptions: java.lang.String APP_ID_RESOURCE_NAME
io.flutter.app.FlutterFragmentActivity: void onUserLeaveHint()
io.flutter.embedding.engine.systemchannels.PlatformChannel$2
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$0: FirebaseMessaging$AutoInit$$Lambda$0(com.google.firebase.messaging.FirebaseMessaging$AutoInit)
io.flutter.plugins.firebase.messaging.R$id: int actions
androidx.fragment.app.Fragment: boolean isHidden()
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.flutter.view.AccessibilityBridge$SemanticsNode: float right
com.google.firebase.installations.R$attr: R$attr()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_SELECTION
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CONTENT_ENCODING_HEADER_KEY
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation
io.flutter.view.AccessibilityBridge$1: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
com.google.firebase.R$drawable: int notification_bg
io.flutter.plugins.firebase.messaging.R$drawable: int notify_panel_notification_icon_bg
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
com.google.firebase.encoders.json.JsonDataEncoderBuilder: java.util.Map access$200(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.embedding.engine.FlutterEngineCache: FlutterEngineCache()
com.google.firebase.analytics.connector.AnalyticsConnector: void setUserProperty(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.plugins.pathprovider.R$layout: int notification_template_part_chronometer
io.flutter.plugins.pathprovider.R$attr: int shortcutMatchRequired
io.flutter.util.Predicate
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer()
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzcn
com.google.android.gms.internal.measurement.zzbu
io.flutter.plugin.editing.TextInputPlugin: void setPlatformViewTextInputClient(int,boolean)
io.flutter.plugin.editing.TextInputPlugin$MinMax
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
io.flutter.plugins.urllauncher.R: R()
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
io.flutter.embedding.engine.FlutterEngineGroup: FlutterEngineGroup(android.content.Context,java.lang.String[])
io.flutter.plugins.pathprovider.R$drawable: int notification_bg
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
com.google.firebase.components.Component: int type
com.google.firebase.R$drawable: int notification_icon_background
com.google.firebase.FirebaseOptions$Builder: java.lang.String databaseUrl
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors(io.flutter.view.AccessibilityViewEmbedder$1)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
com.google.firebase.datatransport.R$styleable: int[] FontFamily
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.RenderMode)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: io.flutter.plugin.common.MethodChannel backgroundChannel
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_9
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzdq zzh
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_light_disabled
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: android.net.ConnectivityManager$NetworkCallback networkCallback
com.google.firebase.components.LazySet: java.util.Set actualSet
com.google.firebase.iid.SyncTask: boolean isDeviceConnected()
io.flutter.plugin.common.StandardMessageCodec: byte DOUBLE_ARRAY
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigPictureStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String KEY_MESSAGE_TYPE
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenNeededNow()
com.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$1: com.google.android.datatransport.Transformer $instance
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat COMBINED
androidx.activity.OnBackPressedCallback: boolean mEnabled
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_30
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action INCREASE
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: java.lang.Character complexCharacter
androidx.fragment.app.Fragment: void setStateAfterAnimating(int)
io.flutter.embedding.android.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
com.google.firebase.installations.internal.FidListener
com.google.android.gms.common.internal.zzi: android.os.Parcelable$Creator CREATOR
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4 instance
com.google.firebase.messaging.RemoteMessage: java.lang.String getMessageId()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: int zzb(android.content.Context,android.content.Intent)
io.flutter.embedding.android.FlutterEngineProvider: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.flutter.plugins.firebase.messaging.R$styleable: int LoadingImageView_circleCrop
com.google.firebase.installations.CrossProcessLock: java.lang.String TAG
androidx.fragment.app.Fragment: java.lang.String mTargetWho
com.google.firebase.components.ComponentContainer: com.google.firebase.inject.Provider setOfProvider(java.lang.Class)
io.flutter.plugin.platform.AccessibilityEventsDelegate
com.google.firebase.datatransport.R$drawable: int notification_template_icon_bg
io.flutter.plugin.common.MethodChannel$MethodCallHandler: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$1: JsonDataEncoderBuilder$1(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_20
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String increasedValue
com.google.firebase.measurement.R
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_PACKAGE_NAME
com.google.firebase.datatransport.R$attr: int fontProviderPackage
io.flutter.plugin.editing.TextEditingDelta: int getDeltaEnd()
com.google.firebase.messaging.NotificationParams: android.os.Bundle data
io.flutter.plugins.firebase.core.R$styleable: int FontFamily_fontProviderCerts
io.flutter.embedding.engine.loader.ResourceExtractor: void access$100(java.lang.String,java.util.HashSet)
io.flutter.view.AccessibilityBridge: boolean doesLayoutInDisplayCutoutModeRequireLeftInset()
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_android_fontStyle
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_fontWeight
io.flutter.plugin.common.MethodCodec
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long parseLong(java.lang.Object)
io.flutter.plugins.sharedpreferences.R$id: int action_container
io.flutter.plugin.common.ErrorLogResult
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
io.flutter.plugins.sharedpreferences.R$dimen: int compat_button_inset_vertical_material
com.google.android.gms.measurement.internal.zzaq: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.pathprovider.R$id: int accessibility_action_clickable_span
androidx.fragment.app.Fragment: void initLifecycle()
com.google.firebase.R$id: int info
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String KEY_COLLAPSE_KEY
com.google.firebase.messaging.NotificationParams: java.lang.Integer getVisibility()
com.google.firebase.datatransport.R: R()
io.flutter.embedding.android.FlutterFragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle valueOf(java.lang.String)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.google.firebase.ktx.R$styleable: R$styleable()
com.google.firebase.ktx.R
com.google.firebase.messaging.NotificationParams: java.lang.String getNotificationChannelId()
io.flutter.plugin.common.PluginRegistry: java.lang.Object valuePublishedByPlugin(java.lang.String)
com.google.firebase.installations.R$layout
com.google.firebase.messaging.ImageDownload: ImageDownload(java.net.URL)
androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: android.os.Handler handler
io.flutter.plugin.platform.PlatformViewsController: android.content.Context context
com.google.firebase.messaging.SharedPreferencesQueue: java.util.concurrent.Executor syncExecutor
io.flutter.plugin.editing.TextInputPlugin$InputTarget: int id
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: int unrepliedCount
com.google.firebase.ktx.R$style: int TextAppearance_Compat_Notification_Line2
com.google.firebase.components.ComponentDiscovery: java.lang.String COMPONENT_SENTINEL_VALUE
com.google.firebase.analytics.ktx.ParametersBuilder
io.flutter.plugins.connectivity.R$id: int async
com.google.firebase.messaging.ImageDownload$$Lambda$0: java.lang.Object call()
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay virtualDisplay
androidx.fragment.app.Fragment: int mFragmentId
io.flutter.plugin.platform.PlatformViewsController$1: void synchronizeToNativeViewHierarchy(boolean)
com.google.firebase.components.MissingDependencyException: MissingDependencyException(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.lang.Object getLifecycle()
com.google.firebase.iid.RequestDeduplicator$$Lambda$0: android.util.Pair arg$2
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $VALUES
io.flutter.plugins.urllauncher.R$dimen: int notification_action_icon_size
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer encodeMessage(java.nio.ByteBuffer)
android.support.v4.media.AudioAttributesImplApi26Parcelizer
com.google.firebase.messaging.Constants$MessagePayloadKeys
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANT
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onTooltip(java.lang.String)
com.google.firebase.iid.WakeLockHolder: com.google.android.gms.stats.WakeLock wakeLock
io.flutter.plugins.sharedpreferences.R$styleable: int Capability_shortcutMatchRequired
io.flutter.embedding.engine.FlutterEngineGroup: java.util.List activeEngines
com.google.firebase.R$id: R$id()
io.flutter.embedding.android.FlutterFragmentActivity: void onNewIntent(android.content.Intent)
com.google.firebase.analytics.connector.internal.zzb: zzb()
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_BACKGROUND_MODE
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: boolean hasPlugin(java.lang.String)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar
androidx.fragment.app.FragmentActivity: void onDestroy()
io.flutter.plugins.sharedpreferences.BuildConfig: java.lang.String BUILD_TYPE
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode BAD_CONFIG
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void storeHeartBeatInformation(java.lang.String,long)
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_APP_BUNDLE_PATH
io.flutter.plugins.firebase.messaging.R$style: int TextAppearance_Compat_Notification_Time
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_CATEGORY3
com.google.firebase.components.ComponentDiscovery: java.util.List discover()
com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorHandle: void unregister()
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_DETAILS
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String MAPPING_KEY
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterTextureView)
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
org.threeten.bp.Instant: java.lang.Object writeReplace()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionBase
com.google.firebase.ktx.R$dimen: int notification_small_icon_size_as_large
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
com.google.firebase.components.EventBus: java.util.Map handlerMap
com.google.firebase.encoders.ObjectEncoder
io.flutter.plugins.firebase.messaging.R$id: int dialog_button
io.flutter.embedding.engine.systemchannels.KeyEventChannel: KeyEventChannel(io.flutter.plugin.common.BinaryMessenger)
io.flutter.plugins.urllauncher.R$drawable: int notification_action_background
io.flutter.embedding.android.FlutterActivity: java.lang.String getInitialRoute()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE
com.google.firebase.messaging.Constants$MessagePayloadKeys: Constants$MessagePayloadKeys()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String description
com.google.firebase.messaging.RemoteMessageCreator: com.google.firebase.messaging.RemoteMessage createFromParcel(android.os.Parcel)
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_fontWeight
com.google.firebase.analytics.FirebaseAnalytics: void logEvent(java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void detachFromActivity()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String icon
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: PlatformChannel$SystemUiMode(java.lang.String,int,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void access$500(io.flutter.plugin.platform.PlatformPlugin)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String imageUrl
io.flutter.view.AccessibilityBridge: int access$7100()
io.flutter.plugins.pathprovider.R$attr: int ttcIndex
com.google.firebase.messaging.TopicsSubscriber
io.flutter.view.FlutterView$2
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity getActivity()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldDelayFirstAndroidViewDraw(boolean)
io.flutter.plugins.urllauncher.R$layout: int notification_action
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onLongPress(int)
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallation persistedInstallation
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
io.flutter.embedding.android.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_TEXT
io.flutter.app.FlutterPluginRegistry: android.app.Activity access$000(io.flutter.app.FlutterPluginRegistry)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setSelection(int,int)
com.google.firebase.iid.GmsRpc: java.lang.String ERROR_SERVICE_NOT_AVAILABLE
com.google.firebase.installations.interop.R$styleable: int ColorStateListItem_alpha
io.flutter.embedding.engine.plugins.PluginRegistry: boolean has(java.lang.Class)
io.flutter.embedding.android.FlutterSplashView$1: FlutterSplashView$1(io.flutter.embedding.android.FlutterSplashView)
com.google.firebase.internal.DataCollectionConfigStorage: android.content.SharedPreferences sharedPreferences
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String TAG
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener
io.flutter.app.FlutterActivityDelegate: android.view.WindowManager$LayoutParams matchParent
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PAYLOAD
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String authToken
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: int onMessageReceive(android.content.Context,com.google.android.gms.cloudmessaging.CloudMessage)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.google.firebase.iid.FirebaseInstanceId: java.lang.String getIdWithoutTriggeringSync()
io.flutter.plugins.firebase.messaging.R$attr
io.flutter.plugin.editing.FlutterTextUtils: int ZERO_WIDTH_JOINER
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableDeltaModel
com.google.firebase.components.ComponentRuntime$$Lambda$5: ComponentRuntime$$Lambda$5()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugin.editing.FlutterTextUtils: int COMBINING_ENCLOSING_KEYCAP
com.google.android.gms.internal.measurement.zzcp: java.lang.String zzk
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.Boolean groupConversation
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: TextInputChannel$1(io.flutter.embedding.engine.systemchannels.TextInputChannel)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl this$0
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: boolean onNewIntent(android.content.Intent)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
io.flutter.plugins.urllauncher.R$id: int tag_screen_reader_focusable
com.google.firebase.installations.local.PersistedInstallationEntry: PersistedInstallationEntry()
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void attachToService(android.app.Service,androidx.lifecycle.Lifecycle,boolean)
com.google.firebase.analytics.ktx.AnalyticsKt: void setANALYTICS(com.google.firebase.analytics.FirebaseAnalytics)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors
io.flutter.plugins.firebase.core.R$id: int normal
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_27
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
com.google.firebase.messaging.EnhancedIntentService$1: EnhancedIntentService$1(com.google.firebase.messaging.EnhancedIntentService)
org.threeten.bp.Period
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode
com.google.firebase.ktx.R$dimen: int notification_big_circle_margin
io.flutter.plugins.urllauncher.R$string
io.flutter.plugins.pathprovider.R$attr: int fontProviderSystemFontFamily
com.google.firebase.components.ComponentRuntime: java.util.Map lazyInstanceMap
com.google.firebase.iid.FirebaseInstanceId$$Lambda$1: void execute(java.lang.Runnable)
io.flutter.plugins.firebase.messaging.R$color: int notification_action_color_filter
io.flutter.plugins.pathprovider.PathProviderPlugin$1: io.flutter.plugin.common.MethodChannel$Result val$result
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: android.content.BroadcastReceiver broadcastReceiver
io.flutter.plugins.connectivity.R$styleable: int FontFamily_fontProviderFetchTimeout
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderCerts
com.google.android.gms.internal.measurement.zzby: int zza
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setPreferredOrientations(int)
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.app.FlutterActivity: void onCreate(android.os.Bundle)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel
io.flutter.app.FlutterActivity: io.flutter.view.FlutterView$Provider viewProvider
com.google.firebase.components.Component$Builder: Component$Builder(java.lang.Class,java.lang.Class[],com.google.firebase.components.Component$1)
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode
com.google.firebase.iid.WithinAppServiceConnection$BindRequest$$Lambda$0
io.flutter.plugins.connectivity.R$dimen: int notification_subtext_size
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp getInstance()
com.google.firebase.platforminfo.UserAgentPublisher: java.lang.String getUserAgent()
com.google.firebase.components.EventBus$$Lambda$1: com.google.firebase.events.Event arg$2
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader$Settings settings
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.List decodeList(java.lang.String)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.flutter.plugins.urllauncher.R$attr: int ttcIndex
com.google.firebase.analytics.ktx.R: R()
io.flutter.embedding.android.FlutterView: boolean checkInputConnectionProxy(android.view.View)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void loadDartLibrary(int,java.lang.String)
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_8
io.flutter.plugins.urllauncher.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_gradientRadius
io.flutter.plugins.connectivity.ConnectivityMethodChannelHandler: io.flutter.plugins.connectivity.Connectivity connectivity
com.google.firebase.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.firebase.messaging.MessagingAnalytics: void logNotificationOpen(android.content.Intent)
com.google.firebase.iid.WithinAppServiceConnection: void finishAllInQueue()
io.flutter.plugins.firebase.core.R$attr: int queryPatterns
com.google.firebase.analytics.zzc: void zzb(java.lang.String,java.lang.String,android.os.Bundle,long)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzs)
com.google.firebase.installations.FirebaseInstallationsException: FirebaseInstallationsException(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status,java.lang.Throwable)
io.flutter.app.FlutterPluginRegistry: java.util.List mActivityResultListeners
com.google.firebase.installations.interop.R$drawable: int notify_panel_notification_icon_bg
io.flutter.plugin.platform.PlatformPlugin: boolean access$1100(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_3
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView)
com.google.firebase.iid.RequestDeduplicator: java.util.Map getTokenRequests
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.google.firebase.installations.FirebaseInstallations: java.lang.String getProjectIdentifier()
androidx.core.graphics.drawable.IconCompat
androidx.core.app.JobIntentService: void ensureProcessorRunningLocked(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int height
io.flutter.view.FlutterView: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
com.google.firebase.installations.R$id: R$id()
io.flutter.plugins.connectivity.R$id: int tag_accessibility_heading
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.google.firebase.encoders.json.JsonDataEncoderBuilder: void lambda$static$0(java.lang.Object,com.google.firebase.encoders.ObjectEncoderContext)
com.google.firebase.installations.remote.TokenResult: java.lang.String getToken()
io.flutter.plugins.firebase.messaging.R$color: int androidx_core_ripple_material_light
io.flutter.view.FlutterMain: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$1: void requestAutofill()
com.google.firebase.installations.local.PersistedInstallationEntry: long getTokenCreationEpochInSecs()
androidx.activity.ImmLeaksCleaner
io.flutter.plugin.common.StandardMessageCodec: void writeFloat(java.io.ByteArrayOutputStream,float)
io.flutter.embedding.engine.FlutterEngine: java.util.Set engineLifecycleListeners
com.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.Executor DIRECT_EXECUTOR
com.google.firebase.messaging.FirebaseMessaging$AutoInit: void lambda$setEnabled$2$FirebaseMessaging$AutoInit()
com.google.firebase.messaging.FirebaseMessagingService: java.util.Queue recentlyReceivedMessageIds
com.google.firebase.analytics.zzc: java.lang.String zzi()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$2: java.util.concurrent.Callable lambdaFactory$(com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int)
com.google.android.gms.internal.measurement.zzcd: com.google.android.gms.internal.measurement.zzcd zzj
io.flutter.plugins.sharedpreferences.R: R()
com.google.firebase.events.EventHandler
com.google.firebase.R$id: int icon_group
com.google.firebase.datatransport.R$id: int title
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: PlatformViewsChannel$PlatformViewResizeRequest(int,double,double)
com.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: DefaultHeartBeatInfo(com.google.firebase.inject.Provider,java.util.Set,java.util.concurrent.Executor)
io.flutter.plugin.editing.TextInputPlugin$2: void inspect(double,double)
io.flutter.view.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_11
com.google.firebase.iid.Store: android.content.Context context
com.google.firebase.analytics.connector.AnalyticsConnector: com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorHandle registerAnalyticsConnectorListener(java.lang.String,com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener)
com.google.firebase.messaging.TopicsSyncTask: boolean isLoggable()
com.google.firebase.installations.remote.AutoValue_TokenResult: com.google.firebase.installations.remote.TokenResult$Builder toBuilder()
io.flutter.plugin.platform.PlatformViewsController: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.flutter.plugin.platform.PlatformViewsController: void detachTextInputPlugin()
com.google.firebase.messaging.NotificationParams: boolean isNotification()
io.flutter.util.ViewUtils
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerPropertiesList(java.lang.Object)
io.flutter.plugins.urllauncher.R$dimen: int notification_right_icon_size
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String VIEW_CART
io.flutter.plugin.editing.ListenableEditingState: void endBatchEdit()
io.flutter.plugin.editing.ListenableEditingState: int mComposingStartWhenBeginBatchEdit
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation
com.google.firebase.installations.AutoValue_InstallationTokenResult: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache getInstance()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.ContentProvider contentProvider
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_ttcIndex
androidx.fragment.app.Fragment: java.lang.Object getHost()
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
com.google.firebase.encoders.ValueEncoder
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_API_KEY
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromService()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.firebase.core.R$attr: int fontWeight
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet,boolean)
io.flutter.plugins.connectivity.R$id: int chronometer
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewDetachedFromWindow(android.view.View)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_SOURCE
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
io.flutter.view.FlutterView: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
com.google.firebase.installations.AutoValue_InstallationTokenResult: java.lang.String token
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.google.firebase.installations.InstallationTokenResult: com.google.firebase.installations.InstallationTokenResult$Builder toBuilder()
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode
io.flutter.plugin.platform.PlatformViewsController$1: void clearFocus(int)
io.flutter.plugin.common.FlutterException
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void applyGrouping(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.firebase.components.CycleDetector$Dep: CycleDetector$Dep(java.lang.Class,boolean,com.google.firebase.components.CycleDetector$1)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: com.google.android.gms.measurement.api.AppMeasurementSdk zza
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: android.view.View mView
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task lambda$subscribeToTopic$4$FirebaseMessaging(java.lang.String,com.google.firebase.messaging.TopicsSubscriber)
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewInsetTop
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int id
com.google.firebase.FirebaseApp: void notifyBackgroundStateChangeListeners(boolean)
com.google.firebase.provider.FirebaseInitProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
com.google.firebase.ktx.R$color: int notification_action_color_filter
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
io.flutter.embedding.android.FlutterFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
io.flutter.view.AccessibilityBridge: android.content.ContentResolver contentResolver
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_19
com.google.firebase.iid.FirebaseInstanceId$$Lambda$3: com.google.firebase.iid.FirebaseInstanceId arg$1
io.flutter.plugins.firebase.messaging.R$dimen: int notification_big_circle_margin
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray access$000(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String checkTimestamp(java.io.File,android.content.pm.PackageManager,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
com.google.firebase.installations.R$attr
io.flutter.embedding.engine.FlutterEngineCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.messaging.RemoteMessage: int PRIORITY_HIGH
io.flutter.embedding.android.SplashScreenProvider
io.flutter.plugin.common.StringCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
com.google.firebase.messaging.NotificationParams: java.lang.Integer getNotificationPriority()
com.google.firebase.analytics.ktx.ParametersBuilder: void param(java.lang.String,long)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableIMEPersonalizedLearning
com.google.firebase.installations.FirebaseInstallations: java.lang.String AUTH_ERROR_MSG
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_fontStyle
com.google.firebase.encoders.EncodingException
io.flutter.plugin.platform.PlatformViewsController: void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setUri(java.lang.String)
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.google.firebase.provider.FirebaseInitProvider: void checkContentProviderAuthority(android.content.pm.ProviderInfo)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: void success(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onActivityResult(int,int,android.content.Intent)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadPreviousConfig
io.flutter.plugin.platform.VirtualDisplayController$1$1: void run()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.plugins.firebase.messaging.R$id: int action_divider
com.google.firebase.DataCollectionDefaultChange
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel)
com.google.firebase.datatransport.R$id: int time
io.flutter.plugin.editing.FlutterTextUtils: boolean isVariationSelector(int)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String NOTIFICATION_COUNT
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest
io.flutter.plugin.common.BinaryMessenger
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] globalTransform
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String toString()
io.flutter.plugin.common.StandardMessageCodec: byte INT_ARRAY
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_14
com.google.firebase.messaging.RemoteMessage$Notification: long[] getVibrateTimings()
com.google.firebase.installations.interop.R$id: int line1
io.flutter.embedding.engine.dart.DartMessenger$Reply
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode
io.flutter.plugins.connectivity.Connectivity: java.lang.String getNetworkTypeLegacy()
io.flutter.plugins.pathprovider.R$attr
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler
io.flutter.embedding.android.DrawableSplashScreen$1
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULED_NOTIFICATIONS
io.flutter.plugins.firebase.messaging.R$style
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_centerY
com.google.firebase.messaging.EnhancedIntentService$$Lambda$2: EnhancedIntentService$$Lambda$2(com.google.firebase.messaging.EnhancedIntentService,android.content.Intent)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON
io.flutter.embedding.android.FlutterSurfaceView: void access$200(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState
com.google.firebase.installations.R$styleable: int[] GradientColor
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: FlutterLocalNotificationsPlugin()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$1: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin this$0
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation: StyleInformation()
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,float)
com.google.firebase.ktx.R$id: int action_container
io.flutter.plugins.connectivity.R$drawable: int notification_bg_normal_pressed
io.flutter.plugins.firebase.core.R$id: int icon_group
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addLazyComponentRegistrars(java.util.Collection)
com.google.firebase.ktx.R$dimen: int compat_control_corner_material
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager delegate
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
com.google.firebase.messaging.EnhancedIntentService: android.os.Binder binder
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_9
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: java.lang.String TAG
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: ComponentDiscovery$MetadataRegistrarNameRetriever(java.lang.Class)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache instance
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding(android.content.ContentProvider)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode BAD_CONFIG
io.flutter.plugins.sharedpreferences.R$dimen: int notification_small_icon_background_padding
io.flutter.plugins.sharedpreferences.R$styleable: int[] Capability
io.flutter.plugin.platform.PlatformViewsController: void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.plugins.pathprovider.R$integer
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_SOFTWARE_RENDERING
com.google.firebase.components.Preconditions: void checkArgument(boolean,java.lang.String)
io.flutter.app.FlutterFragmentActivity: void onBackPressed()
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_2
io.flutter.plugin.editing.TextInputPlugin: void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.flutter.plugins.sharedpreferences.R$id: int italic
io.flutter.plugins.connectivity.ConnectivityPlugin: io.flutter.plugin.common.MethodChannel methodChannel
io.flutter.app.FlutterActivity: io.flutter.plugin.common.PluginRegistry pluginRegistry
io.flutter.embedding.engine.FlutterEngineGroup$1: void onPreEngineRestart()
com.google.firebase.installations.interop.R
io.flutter.plugins.pathprovider.R$id: int text2
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$1: android.content.Context arg$1
org.threeten.bp.zone.Ser
com.google.firebase.components.Dependency: int type
com.google.firebase.ktx.Firebase
io.flutter.util.PathUtils: PathUtils()
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedOverlayLayerIds
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage build()
com.google.firebase.messaging.TopicsSyncTask: android.content.Context context
io.flutter.embedding.engine.FlutterJNI$Factory: io.flutter.embedding.engine.FlutterJNI provideFlutterJNI()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigPicture
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mTextWhenBeginBatchEdit
com.google.firebase.messaging.MessagingAnalytics: boolean shouldUploadFirelogAnalytics(android.content.Intent)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onListen(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.android.gms.measurement.AppMeasurementReceiver
io.flutter.plugins.firebase.core.R$integer: int google_play_services_version
androidx.fragment.app.Fragment: android.content.Context requireContext()
com.google.firebase.messaging.TopicsSyncTask: boolean isDeviceConnected()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode OK
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String ADD_PAYMENT_INFO
androidx.fragment.app.Fragment: void onDetach()
com.google.firebase.messaging.NotificationParams: NotificationParams(android.os.Bundle)
io.flutter.plugin.editing.ListenableEditingState: void setSpan(java.lang.Object,int,int,int)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.flutter.embedding.android.AndroidTouchProcessor: boolean trackMotionEvents
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME
io.flutter.plugins.sharedpreferences.R$layout: int notification_template_custom_big
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: void removeFirebaseMessage(java.lang.String)
com.google.android.gms.internal.measurement.zzcf
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.google.firebase.ktx.R$drawable: int notification_bg_low
com.google.firebase.messaging.FirebaseMessaging$$Lambda$4: FirebaseMessaging$$Lambda$4(java.lang.String)
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener: void onEngineWillDestroy()
io.flutter.embedding.android.FlutterSurfaceView: android.view.SurfaceHolder$Callback surfaceCallback
io.flutter.plugins.pathprovider.R$id: int tag_window_insets_animation_callback
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String TO
com.google.firebase.iid.FirebaseInstanceId$$Lambda$1
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener listener
com.google.firebase.FirebaseOptions: FirebaseOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: com.google.firebase.analytics.connector.AnalyticsConnector getInstance()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.firebase.messaging.RemoteMessage initialMessage
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String lookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler
io.flutter.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.firebase.analytics.zzc: void zzn(android.os.Bundle)
io.flutter.view.FlutterView: boolean hasRenderedFirstFrame()
com.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor arg$2
io.flutter.embedding.android.FlutterFragment: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: boolean isApplicationForeground(android.content.Context)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: LocalizationChannel$1(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.google.firebase.iid.Registrar$$Lambda$0
com.google.firebase.datatransport.R$dimen: int notification_top_pad
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_gradientRadius
com.google.firebase.R$string: int status_bar_notification_info_overflow
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_30
com.google.firebase.analytics.FirebaseAnalytics: void setAnalyticsCollectionEnabled(boolean)
com.google.android.gms.internal.measurement.zzdu: float zzi
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setTokenCreationEpochInSecs(long)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus
com.google.firebase.analytics.connector.AnalyticsConnectorImpl$1: AnalyticsConnectorImpl$1(com.google.firebase.analytics.connector.AnalyticsConnectorImpl,java.lang.String)
io.flutter.app.FlutterActivity: io.flutter.view.FlutterNativeView createFlutterNativeView()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,double)
io.flutter.plugin.common.BinaryCodec: boolean returnsDirectByteBufferFromDecoding
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle valueOf(java.lang.String)
com.google.firebase.iid.ServiceStarter: android.content.Intent wrapServiceIntent(android.content.Context,java.lang.String,android.content.Intent)
org.threeten.bp.chrono.JapaneseChronology: java.lang.Object readResolve()
com.google.android.gms.internal.measurement.zzcc: com.google.android.gms.internal.measurement.zzcc[] values()
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String ORIGIN_FCM
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDate(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec codec
com.google.firebase.installations.FirebaseInstallations$$Lambda$1: FirebaseInstallations$$Lambda$1(com.google.firebase.installations.FirebaseInstallations)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ticker
com.dexterous.flutterlocalnotifications.models.DateTimeComponents
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_ENABLED
com.google.android.gms.internal.measurement.zzdq
com.google.firebase.datatransport.R$dimen: int notification_right_side_padding_top
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String TERM
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String findAppBundlePath()
io.flutter.embedding.android.FlutterSurfaceView$2: FlutterSurfaceView$2(io.flutter.embedding.android.FlutterSurfaceView)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
com.google.firebase.messaging.Constants$ScionAnalytics: Constants$ScionAnalytics()
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_MESSAGE_NAME
com.google.firebase.installations.R$id: int italic
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
com.google.firebase.components.Component: com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class)
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener: void onAccessibilityChanged(boolean,boolean)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: java.util.Set getRegisteredVersions()
com.google.android.gms.internal.measurement.zzcf: boolean zzj
io.flutter.view.FlutterNativeView: boolean isAttached()
io.flutter.embedding.android.FlutterTextureView: boolean access$100(io.flutter.embedding.android.FlutterTextureView)
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_update_title
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: java.util.Set access$200(io.flutter.embedding.android.FlutterView)
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: java.util.concurrent.atomic.AtomicReference INSTANCE
io.flutter.plugin.platform.VirtualDisplayController: void resize(int,int,java.lang.Runnable)
io.flutter.plugins.sharedpreferences.R$style: int Widget_Compat_NotificationActionContainer
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: FlutterFirebaseCorePlugin(android.content.Context)
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_endY
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: io.flutter.plugin.common.EventChannel$EventSink events
com.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()
io.flutter.embedding.engine.systemchannels.TextInputChannel: TextInputChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
com.google.firebase.FirebaseError: int ERROR_NO_SIGNED_IN_USER
io.flutter.plugins.connectivity.R$attr: int fontProviderFetchStrategy
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: void onCancel(java.lang.Object)
com.google.firebase.datatransport.R$layout: int notification_template_part_chronometer
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler,io.flutter.plugin.common.EventChannel$1)
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue
io.flutter.plugins.firebase.messaging.R$drawable: int notification_bg
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject)
com.google.firebase.datatransport.R$id: int notification_main_column
io.flutter.plugins.urllauncher.WebViewActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.google.firebase.FirebaseApp: FirebaseApp(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)
com.google.firebase.datatransport.R$styleable: int GradientColor_android_gradientRadius
io.flutter.app.FlutterActivityDelegate$1: io.flutter.app.FlutterActivityDelegate this$0
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String ACTION_REMOTE_MESSAGE
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1
com.google.firebase.messaging.NotificationParams: boolean getBoolean(java.lang.String)
com.google.firebase.R$layout: int notification_action
io.flutter.plugins.sharedpreferences.R$drawable: R$drawable()
com.google.firebase.messaging.SharedPreferencesQueue: java.lang.String serialize()
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
com.google.firebase.analytics.connector.internal.zzc: boolean zza(java.lang.String)
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityEnabled()
com.google.firebase.installations.remote.AutoValue_TokenResult: java.lang.String getToken()
com.google.firebase.platforminfo.AutoValue_LibraryVersion: int hashCode()
com.google.firebase.iid.GmsRpc: com.google.firebase.installations.FirebaseInstallationsApi firebaseInstallations
com.google.firebase.FirebaseOptions: java.lang.String toString()
io.flutter.plugin.platform.VirtualDisplayController: android.view.View getView()
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DEFAULT_ICON
io.flutter.embedding.android.FlutterTextureView: void pause()
io.flutter.embedding.engine.FlutterEngineGroup
io.flutter.app.FlutterActivity: void onStart()
com.google.firebase.components.ComponentRuntime$$Lambda$5: com.google.firebase.inject.Provider lambdaFactory$()
com.google.firebase.installations.local.IidStore: java.lang.String readToken()
com.google.firebase.ktx.R$color
com.google.firebase.analytics.ktx.AnalyticsKt: java.lang.String LIBRARY_NAME
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class access$100(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
io.flutter.app.FlutterActivityDelegate: void onNewIntent(android.content.Intent)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: void notImplemented()
io.flutter.plugin.platform.PlatformView: android.view.View getView()
com.google.firebase.analytics.connector.internal.zzb: com.google.firebase.components.ComponentFactory zza
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
io.flutter.plugins.urllauncher.WebViewActivity: void onCreate(android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: boolean onCreate()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.firebase.messaging.TopicsSubscriber: void blockingSubscribeToTopic(java.lang.String)
org.threeten.bp.Instant: java.lang.Object readResolve()
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
com.google.firebase.installations.interop.R$styleable: int[] GradientColor
com.google.firebase.ktx.R$style: int TextAppearance_Compat_Notification_Title
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String FCM_FALLBACK_NOTIFICATION_CHANNEL
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_29
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ORIGIN
com.google.firebase.datatransport.R$id: int icon
com.google.firebase.iid.WithinAppServiceConnection: boolean connectionInProgress
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: FlutterActivity$CachedEngineIntentBuilder(java.lang.Class,java.lang.String)
com.google.firebase.analytics.zzc: void zzf(com.google.android.gms.measurement.internal.zzgm)
android.support.v4.media.RatingCompat
io.flutter.embedding.android.FlutterSurfaceView: void disconnectSurfaceFromRenderer()
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder intoSet()
io.flutter.embedding.android.FlutterActivity: void onFlutterUiNoLongerDisplayed()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: PlatformChannel$SystemChromeStyle(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean)
com.google.firebase.installations.FirebaseInstallations$$Lambda$1
com.google.firebase.messaging.RemoteMessage$Notification: boolean getDefaultLightSettings()
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String LEVEL_END
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5200(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.inject.Provider: java.lang.Object get()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder
com.google.android.gms.internal.measurement.zzcz: int zze
com.google.firebase.installations.remote.AutoValue_InstallationResponse: com.google.firebase.installations.remote.TokenResult getAuthToken()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
io.flutter.plugin.platform.PlatformViewsController: java.lang.String TAG
io.flutter.view.AccessibilityBridge: void sendWindowContentChangeEvent(int)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugin.mouse.MouseCursorPlugin$2: MouseCursorPlugin$2(io.flutter.plugin.mouse.MouseCursorPlugin)
io.flutter.view.FlutterNativeView: void runFromBundle(io.flutter.view.FlutterRunArguments)
io.flutter.util.ViewUtils: int generateViewId(int)
com.google.firebase.components.ComponentRuntime$Builder$$Lambda$1
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderQuery
com.google.firebase.encoders.json.JsonDataEncoderBuilder$1
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String VISIBILITY
io.flutter.plugins.sharedpreferences.R$dimen: int notification_action_icon_size
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.tasks.Task getAppInstanceId()
com.google.firebase.encoders.EncodingException: EncodingException(java.lang.String,java.lang.Exception)
io.flutter.plugin.editing.FlutterTextUtils: int CANCEL_TAG
com.google.firebase.installations.local.PersistedInstallationEntry: boolean isUnregistered()
com.google.firebase.FirebaseCommonRegistrar$$Lambda$5: FirebaseCommonRegistrar$$Lambda$5()
io.flutter.app.FlutterPluginRegistry: void onUserLeaveHint()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.plugin.common.MethodChannel$Result val$result
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode OK
com.google.firebase.encoders.annotations.Encodable$Field: boolean inline()
com.google.android.gms.internal.measurement.zzbu: int zze
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzs)
io.flutter.embedding.engine.dart.DartExecutor: int getPendingChannelResponseCount()
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View$OnFocusChangeListener val$userFocusListener
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: void encode(java.lang.Object,java.lang.Object)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setFlutterLoader(io.flutter.embedding.engine.loader.FlutterLoader)
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewPaddingLeft
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.installations.R$layout: int notification_template_part_time
io.flutter.view.FlutterView: void onMemoryPressure()
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_COMPOSER_LABEL
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String SELECT_PROMOTION
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView
com.google.firebase.ktx.R$dimen: R$dimen()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: void storeFirebaseMessage(com.google.firebase.messaging.RemoteMessage)
io.flutter.plugins.connectivity.R$style: int Widget_Compat_NotificationActionContainer
io.flutter.app.FlutterActivityEvents
io.flutter.plugins.sharedpreferences.R$id: int action_image
io.flutter.embedding.android.FlutterActivity: void release()
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$1: FirebaseMessaging$AutoInit$$Lambda$1(com.google.firebase.messaging.FirebaseMessaging$AutoInit)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_DAILY_AT_TIME_METHOD
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderSystemFontFamily
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$Responder[] responders
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void access$100(android.content.Context)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean handleDeeplinking
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String TAG
com.google.firebase.datatransport.R$integer: int google_play_services_version
com.google.firebase.installations.remote.AutoValue_InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$Builder toBuilder()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4702(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
com.google.firebase.messaging.Constants$MessagePayloadKeys: androidx.collection.ArrayMap extractDeveloperDefinedPayload(android.os.Bundle)
com.google.firebase.FirebaseOptions$Builder: FirebaseOptions$Builder()
com.google.firebase.messaging.CommonNotificationBuilder: boolean isValidIcon(android.content.res.Resources,int)
io.flutter.plugins.connectivity.R$id: int notification_background
com.google.firebase.messaging.SharedPreferencesQueue: android.content.SharedPreferences sharedPreferences
com.google.firebase.components.Component: java.util.Set getPublishedEvents()
com.google.firebase.installations.remote.AutoValue_TokenResult: com.google.firebase.installations.remote.TokenResult$ResponseCode responseCode
com.google.firebase.components.CycleDetector$Dep: CycleDetector$Dep(java.lang.Class,boolean)
com.google.firebase.installations.local.PersistedInstallation: java.lang.String EXPIRES_IN_SECONDS_KEY
com.google.firebase.ktx.R$id: int text
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_29
com.google.firebase.encoders.annotations.Encodable$Ignore
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SELECTED
io.flutter.plugins.connectivity.R$styleable: int[] ColorStateListItem
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.app.FlutterPluginRegistry this$0
io.flutter.embedding.android.FlutterFragment: void onResume()
io.flutter.plugin.common.MethodCall: boolean hasArgument(java.lang.String)
com.google.firebase.R$dimen: int notification_main_column_padding_top
io.flutter.view.AccessibilityBridge: int FOCUSABLE_FLAGS
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.lang.String TAG
com.google.firebase.installations.FirebaseInstallationsException: FirebaseInstallationsException(com.google.firebase.installations.FirebaseInstallationsException$Status)
io.flutter.embedding.engine.systemchannels.PlatformChannel$1
com.google.android.gms.internal.measurement.zzdd: long zzf
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode image
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean sendKeyEvent(android.view.KeyEvent)
com.google.firebase.installations.interop.R$styleable: int[] FontFamily
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.R$style: int TextAppearance_Compat_Notification
com.google.firebase.installations.interop.R$layout
com.google.firebase.installations.RandomFidGenerator: java.lang.String encodeFidBase64UrlSafe(byte[])
com.google.firebase.annotations.PublicApi
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: JsonDataEncoderBuilder$TimestampEncoder()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderApplicationDocumentsDirectory()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getAppBundlePath()
com.google.firebase.analytics.connector.internal.zzc: com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty zzh(android.os.Bundle)
androidx.fragment.app.Fragment: android.view.View requireView()
org.threeten.bp.MonthDay
io.flutter.view.AccessibilityBridge: int accessibilityFeatureFlags
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.Person buildPerson(android.content.Context,com.dexterous.flutterlocalnotifications.models.PersonDetails)
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.google.firebase.messaging.CommonNotificationBuilder: android.app.PendingIntent wrapContentIntent(android.content.Context,com.google.firebase.messaging.NotificationParams,android.app.PendingIntent)
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.installations.FirebaseInstallationsApi firebaseInstallations
io.flutter.embedding.android.FlutterImageView: void onSizeChanged(int,int,int,int)
com.google.firebase.components.LazySet
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String shortcutId
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String INDETERMINATE
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_22
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
androidx.media.AudioAttributesCompat
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
org.threeten.bp.YearMonth: java.lang.Object writeReplace()
com.google.firebase.installations.AutoValue_InstallationTokenResult: long getTokenExpirationTimestamp()
com.google.firebase.installations.interop.R$id: int notification_background
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext childContext
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int HOVER
androidx.fragment.app.Fragment: int getNextTransition()
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void detachFromFlutterEngine()
io.flutter.view.AccessibilityBridge: boolean performAction(int,int,android.os.Bundle)
com.google.android.gms.internal.measurement.zzhs: int zzd
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.firebase.components.AbstractComponentContainer: java.util.Set setOf(java.lang.Class)
io.flutter.plugins.sharedpreferences.R$dimen: int compat_notification_large_icon_max_height
com.google.firebase.datatransport.R$dimen: int compat_button_padding_vertical_material
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiNoLongerDisplayed()
io.flutter.plugins.firebase.messaging.R$dimen: int notification_media_narrow_margin
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_text_dark_focused
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.components.Component$Builder
io.flutter.plugins.sharedpreferences.R$id: int line3
com.google.firebase.installations.interop.R$id: int action_divider
io.flutter.plugins.connectivity.R$dimen: int notification_right_icon_size
io.flutter.plugins.firebase.messaging.R$string: int status_bar_notification_info_overflow
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
io.flutter.plugins.firebase.messaging.R$dimen: int notification_subtext_size
io.flutter.plugins.firebase.messaging.R$attr: int circleCrop
com.google.firebase.R$attr: int fontProviderPackage
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
com.google.firebase.heartbeatinfo.HeartBeatInfo: com.google.android.gms.tasks.Task getAndClearStoredHeartBeatInfo()
io.flutter.embedding.android.FlutterActivity: boolean isDebuggable()
com.google.android.gms.internal.measurement.zzby: boolean zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MILLISECONDS_SINCE_EPOCH
io.flutter.plugins.pathprovider.R$color: int androidx_core_secondary_text_default_material_light
com.google.firebase.analytics.zza: zza(com.google.firebase.analytics.FirebaseAnalytics,int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)
com.google.firebase.installations.GetIdListener
io.flutter.embedding.android.FlutterView: boolean acquireLatestImageViewFrame()
com.google.firebase.installations.remote.RequestLimiter
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.plugin.platform.PlatformView: void onInputConnectionLocked()
io.flutter.embedding.android.DrawableSplashScreen: long crossfadeDurationInMillis
com.google.firebase.installations.time.SystemClock
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SHOW_BADGE
com.google.firebase.R$attr: R$attr()
com.google.firebase.messaging.FirebaseMessagingRegistrar$DevNullTransportFactory: FirebaseMessagingRegistrar$DevNullTransportFactory()
com.google.firebase.R$id: int async
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.plugins.connectivity.R$styleable: int GradientColor_android_type
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler
com.google.firebase.messaging.SharedPreferencesQueue$$Lambda$0
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$4: JsonDataEncoderBuilder$$Lambda$4()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
com.google.android.gms.internal.measurement.zzck: com.google.android.gms.internal.measurement.zzck zzi
com.google.firebase.BuildConfig: java.lang.String BUILD_TYPE
com.google.firebase.FirebaseError: FirebaseError(int)
com.google.firebase.analytics.connector.internal.zzc
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_TOPIC
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: FlutterFirebaseMessagingUtils()
com.google.firebase.installations.R$dimen: int notification_action_icon_size
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void schedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.FirebaseCommonRegistrar$$Lambda$1: com.google.firebase.FirebaseCommonRegistrar$$Lambda$1 instance
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
com.google.firebase.messaging.SharedPreferencesQueue: void syncStateAsync()
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String SET_CHECKOUT_OPTION
io.flutter.view.AccessibilityBridge: boolean isTouchExplorationEnabled()
io.flutter.view.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.view.FlutterNativeView)
com.google.firebase.installations.R$layout: int notification_action_tombstone
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: long id
io.flutter.embedding.android.FlutterActivity: android.content.Context getContext()
io.flutter.plugins.firebase.messaging.ContextHolder: void setApplicationContext(android.content.Context)
com.google.firebase.iid.Registrar$$Lambda$1
io.flutter.plugins.connectivity.ConnectivityPlugin: ConnectivityPlugin()
com.google.firebase.FirebaseOptions: java.lang.String getGaTrackingId()
com.google.android.gms.internal.measurement.zzeg: double zzj
io.flutter.plugin.platform.VirtualDisplayController: void dispose()
io.flutter.embedding.engine.systemchannels.SystemChannel
io.flutter.plugins.sharedpreferences.R$id: int tag_screen_reader_focusable
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterUiDisplayed()
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_android_ttcIndex
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedDeferredInterfaces
androidx.fragment.app.Fragment: void performStop()
com.google.firebase.iid.FirebaseInstanceId: java.lang.Object getResultOrThrowException(com.google.android.gms.tasks.Task)
com.google.firebase.messaging.CommonNotificationBuilder: java.util.concurrent.atomic.AtomicInteger requestCodeProvider
com.google.firebase.messaging.FirebaseMessaging$$Lambda$0: com.google.firebase.messaging.FirebaseMessaging arg$1
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void completeInstallError(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: android.app.Service service
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
io.flutter.plugins.connectivity.R$dimen: int notification_media_narrow_margin
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String)
com.google.firebase.installations.time.SystemClock: com.google.firebase.installations.time.SystemClock singleton
com.google.firebase.R$styleable: int GradientColor_android_endX
io.flutter.plugin.platform.PlatformViewsController: void detachAccessibiltyBridge()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setRefreshToken(java.lang.String)
com.google.firebase.messaging.MessagingAnalytics: void logToFirelog(java.lang.String,android.content.Intent,com.google.android.datatransport.Transport)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setPlatformViewClient(int,boolean)
com.google.firebase.FirebaseApp: void initializeAllComponents()
com.google.firebase.iid.Registrar: Registrar()
io.flutter.embedding.android.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_big_circle_margin
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String FLUTTER_ASSETS_DIR_KEY
com.google.firebase.messaging.EnhancedIntentService$$Lambda$1: EnhancedIntentService$$Lambda$1()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener: void onSaveInstanceState(android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder withCachedEngine(java.lang.String)
io.flutter.view.FlutterRunArguments: java.lang.String entrypoint
io.flutter.plugins.firebase.messaging.R$dimen: int compat_button_padding_vertical_material
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding flutterPluginBinding
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String ORIGINAL_PRIORITY
com.google.firebase.installations.interop.R: R()
com.google.firebase.analytics.ktx.ConsentBuilder: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus zza
com.google.firebase.messaging.TopicOperation: java.lang.String serializedString
io.flutter.plugins.pathprovider.R$id: int normal
com.google.firebase.messaging.FirebaseMessaging: java.util.concurrent.Executor access$100(com.google.firebase.messaging.FirebaseMessaging)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.inject.Provider userAgentPublisher
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_2
com.google.android.gms.internal.measurement.zzgb: int zzb
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent access$300(io.flutter.view.AccessibilityBridge,int,int)
io.flutter.view.FlutterView: float getDevicePixelRatio()
com.google.firebase.installations.FirebaseInstallationsException$Status
com.google.firebase.installations.interop.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.plugins.firebase.messaging.R$attr: int imageAspectRatio
com.google.firebase.installations.remote.RequestLimiter: boolean isRequestAllowed()
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery forContext(android.content.Context,java.lang.Class)
io.flutter.plugins.urllauncher.R$styleable: int[] ColorStateListItem
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo()
com.google.firebase.messaging.NotificationParams
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.plugin.common.BasicMessageChannel channel
org.threeten.bp.chrono.ThaiBuddhistEra
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_low_normal
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.firebase.iid.FirebaseInstanceId: void setSyncScheduledOrRunning(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ID
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineId()
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean automaticallyRegisterPlugins
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
com.google.firebase.FirebaseCommonRegistrar$$Lambda$5: java.lang.String extract(java.lang.Object)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView access$300(io.flutter.embedding.android.FlutterView)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar publish(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
io.flutter.app.FlutterActivityDelegate$1$1
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.fragment.app.Fragment: android.view.View mInnerView
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
io.flutter.embedding.engine.dart.DartMessenger: void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge)
com.google.firebase.messaging.TopicsSubscriber: boolean isDebugLogEnabled()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer statusBarColor
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLedInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.view.FlutterNativeView: android.content.Context mContext
io.flutter.plugins.firebase.messaging.R$drawable: int notification_template_icon_bg
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.google.firebase.components.ComponentDiscovery: java.lang.String COMPONENT_KEY_PREFIX
io.flutter.embedding.android.FlutterEngineConfigurator
com.google.firebase.messaging.MessagingAnalytics: void logNotificationForeground(android.content.Intent)
com.google.firebase.encoders.config.EncoderConfig: com.google.firebase.encoders.config.EncoderConfig registerEncoder(java.lang.Class,com.google.firebase.encoders.ValueEncoder)
com.google.android.gms.internal.measurement.zzcn: com.google.android.gms.internal.measurement.zzcn zzi
io.flutter.view.AccessibilityBridge$2: io.flutter.view.AccessibilityBridge this$0
com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorHandle: void unregisterEventNames()
io.flutter.plugins.firebase.core.R$id: int time
com.google.firebase.FirebaseApp: void notifyOnAppDeleted()
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String triggerEventName
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: int getHeartBeatCount()
com.google.firebase.iid.WithinAppServiceConnection$BindRequest$$Lambda$0: WithinAppServiceConnection$BindRequest$$Lambda$0(com.google.firebase.iid.WithinAppServiceConnection$BindRequest)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String dataDirPath
io.flutter.embedding.android.FlutterFragment$1: io.flutter.embedding.android.FlutterFragment this$0
com.google.firebase.installations.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
com.google.firebase.installations.local.IidStore: java.lang.String STORE_KEY_ID
io.flutter.plugin.mouse.MouseCursorPlugin
com.google.firebase.messaging.TopicOperation
com.google.firebase.iid.GmsRpc: com.google.firebase.FirebaseApp app
com.google.firebase.messaging.FirebaseMessagingRegistrar$DevNullTransportFactory: com.google.android.datatransport.Transport getTransport(java.lang.String,java.lang.Class,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer)
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView access$100(io.flutter.view.FlutterView)
org.threeten.bp.chrono.JapaneseDate: void readObject(java.io.ObjectInputStream)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HIDE_EXPANDED_LARGE_ICON
io.flutter.Log: Log()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] getBodyLocalizationArgs()
io.flutter.embedding.android.FlutterView: android.view.View findViewByAccessibilityIdRootedAtCurrentView(int,android.view.View)
io.flutter.plugins.pathprovider.R$style
io.flutter.plugin.editing.TextEditingDelta: int deltaEnd
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_endY
io.flutter.embedding.android.FlutterFragment: boolean popSystemNavigator()
io.flutter.plugins.urllauncher.R$dimen: int notification_media_narrow_margin
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean)
io.flutter.view.FlutterMain$Settings: FlutterMain$Settings()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewDetached()
com.google.firebase.R$drawable: int notification_bg_low
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener
io.flutter.plugins.firebase.messaging.R$string: int common_signin_button_text
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean playSound
io.flutter.embedding.engine.renderer.RenderSurface: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.firebase.installations.FirebaseInstallations: java.util.concurrent.ThreadFactory THREAD_FACTORY
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.Class activityClass
io.flutter.plugins.urllauncher.R$dimen: int compat_notification_large_icon_max_width
io.flutter.plugin.platform.PlatformViewsController: void access$600(io.flutter.plugin.platform.PlatformViewsController,int,int)
io.flutter.Log: void i(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.plugin.platform.VirtualDisplayController$1$1
io.flutter.app.FlutterActivityDelegate: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onDetachedFromActivityForConfigChanges()
com.google.firebase.internal.DataCollectionConfigStorage: boolean readManifestDataCollectionEnabled()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readColor(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.plugins.sharedpreferences.R$id: R$id()
io.flutter.plugins.urllauncher.R$id: int line1
com.google.firebase.installations.interop.R$attr
com.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: android.app.Service getService()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$2: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor this$0
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: FlutterRenderer$SurfaceTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture)
io.flutter.view.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
io.flutter.plugins.firebase.messaging.R$dimen: int notification_small_icon_size_as_large
io.flutter.plugin.editing.TextInputPlugin$1: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.flutter.plugins.pathprovider.R$styleable: int ColorStateListItem_android_color
io.flutter.embedding.android.FlutterTextureView: android.view.TextureView$SurfaceTextureListener surfaceTextureListener
io.flutter.plugins.pathprovider.R$dimen: int notification_content_margin_start
com.google.firebase.components.Component$Builder: Component$Builder(java.lang.Class,java.lang.Class[])
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.google.firebase.installations.FirebaseInstallations: java.lang.String APP_ID_VALIDATION_MSG
com.google.firebase.FirebaseCommonRegistrar$$Lambda$1: FirebaseCommonRegistrar$$Lambda$1()
com.google.firebase.messaging.EnhancedIntentService: int runningTasks
com.google.firebase.provider.FirebaseInitProvider: java.lang.String EMPTY_APPLICATION_ID_PROVIDER_AUTHORITY
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding: android.content.BroadcastReceiver getBroadcastReceiver()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(long)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
io.flutter.embedding.android.FlutterFragment: java.lang.String TAG
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void initLoadingUnitMappingToComponentNames()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext internalAdd(java.lang.String,java.lang.Object)
com.google.android.gms.internal.measurement.zzbw: int zze
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: PlatformChannel$SystemUiOverlay(java.lang.String,int,java.lang.String)
com.google.firebase.installations.local.PersistedInstallationEntry: boolean isNotGenerated()
com.google.firebase.components.Component$$Lambda$2: java.lang.Object create(com.google.firebase.components.ComponentContainer)
com.google.firebase.components.CycleDetector$Dep
com.google.firebase.iid.WithinAppServiceBinder$IntentHandler
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableLights
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: boolean zzc(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: void destroy()
com.google.firebase.encoders.ValueEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(int)
com.google.firebase.installations.Utils: boolean isValidApiKeyFormat(java.lang.String)
io.flutter.plugins.firebase.messaging.R$id: int dark
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addViewDestroyListener(io.flutter.plugin.common.PluginRegistry$ViewDestroyListener)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENDLESS_TRACE_BUFFER
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder registerEncoder(java.lang.Class,com.google.firebase.encoders.ObjectEncoder)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_large_icon_width
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_centerColor
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFirebaseInstallationId(java.lang.String)
org.threeten.bp.Duration: java.lang.Object writeReplace()
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzH
com.google.firebase.ktx.R$dimen: int notification_small_icon_background_padding
io.flutter.plugins.urllauncher.BuildConfig: boolean DEBUG
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: android.view.View getPlatformViewById(java.lang.Integer)
io.flutter.plugin.platform.PlatformPlugin: void access$600(io.flutter.plugin.platform.PlatformPlugin)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails from(java.util.Map)
com.google.firebase.ktx.R$dimen: int compat_button_inset_horizontal_material
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1
com.google.firebase.ktx.R$styleable: int ColorStateListItem_alpha
io.flutter.plugins.urllauncher.R$id: int tag_accessibility_pane_title
androidx.fragment.app.Fragment: boolean isAdded()
com.google.firebase.heartbeatinfo.SdkHeartBeatResult: long getMillis()
com.google.firebase.ktx.R$color: int notification_icon_bg_color
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.FirebaseApp access$000(com.google.firebase.messaging.FirebaseMessaging)
io.flutter.plugins.connectivity.R$drawable: int notification_tile_bg
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: int FLUTTER_SPLASH_VIEW_FALLBACK_ID
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer notificationCount
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingTextInCodePoints(int,int)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$5: com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$5 instance
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
io.flutter.plugins.sharedpreferences.R$drawable: int notification_tile_bg
io.flutter.plugin.platform.PlatformViewsController: void validateVirtualDisplayDimensions(int,int)
com.google.firebase.FirebaseOptions: java.lang.String GA_TRACKING_ID_RESOURCE_NAME
com.google.firebase.components.OptionalProvider$$Lambda$5: com.google.firebase.inject.Provider lambdaFactory$()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: java.util.Map objectEncoders
io.flutter.plugins.sharedpreferences.R$drawable: int notification_icon_background
io.flutter.plugin.mouse.MouseCursorPlugin: void destroy()
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(int,int)
com.google.firebase.messaging.MessagingAnalytics: boolean isDirectBootMessage(android.content.Intent)
io.flutter.plugins.firebase.core.R$dimen: int notification_top_pad_large_text
com.google.firebase.messaging.EnhancedIntentService$$Lambda$1: java.util.concurrent.Executor $instance
com.google.firebase.datatransport.R$styleable: int GradientColor_android_endY
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.util.ArrayList messages
com.google.firebase.messaging.FirebaseMessaging$AutoInit: FirebaseMessaging$AutoInit(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.events.Subscriber)
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_android_ttcIndex
com.google.android.gms.internal.measurement.zzdb: java.lang.String zzf
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String TAG
io.flutter.app.FlutterPluginRegistry: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String SDK_VERSION_PREFIX
com.dexterous.flutterlocalnotifications.models.IconSource: IconSource(java.lang.String,int)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_LIST_NAME
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_DESTROY_ENGINE_WITH_ACTIVITY
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.firebase.core.R$style: int TextAppearance_Compat_Notification_Info
io.flutter.plugins.connectivity.R$dimen: int compat_button_inset_vertical_material
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.Object doInBackground(java.lang.Object[])
io.flutter.plugins.pathprovider.R$dimen: int notification_action_text_size
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: org.json.JSONObject buildCreateFirebaseInstallationRequestBody(java.lang.String,java.lang.String)
com.google.firebase.messaging.MessagingAnalytics
com.google.android.gms.internal.measurement.zzdj: long zzN
com.google.firebase.analytics.connector.AnalyticsConnectorImpl$1: java.lang.String zza
com.google.firebase.datatransport.R$styleable: int[] FontFamilyFont
com.google.firebase.ktx.BuildConfig
io.flutter.plugin.editing.TextEditingDelta: org.json.JSONObject toJSON()
androidx.fragment.app.FragmentActivity: boolean mStartedIntentSenderFromFragment
io.flutter.app.FlutterActivityDelegate: io.flutter.view.FlutterView getFlutterView()
io.flutter.plugins.connectivity.Connectivity: android.net.ConnectivityManager connectivityManager
com.google.firebase.iid.RequestDeduplicator$$Lambda$0: java.lang.Object then(com.google.android.gms.tasks.Task)
io.flutter.plugins.urllauncher.R$dimen: int notification_right_side_padding_top
io.flutter.view.FlutterView: io.flutter.embedding.android.KeyboardManager mKeyboardManager
io.flutter.plugins.connectivity.R$drawable: int notification_bg
com.google.firebase.components.RestrictedComponentContainer
com.google.firebase.analytics.zzc: void zza(java.lang.String,java.lang.String,android.os.Bundle)
com.google.firebase.components.LazySet: com.google.firebase.components.LazySet fromCollection(java.util.Collection)
com.google.firebase.messaging.Constants: java.lang.String TAG
com.google.firebase.FirebaseApp
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.google.android.gms.internal.measurement.zzdj: long zzm
com.google.firebase.installations.R$dimen: int compat_button_padding_horizontal_material
androidx.fragment.app.FragmentActivity: boolean mResumed
com.google.firebase.installations.R$attr: int fontProviderFetchStrategy
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldRestoreAndSaveState()
com.google.firebase.events.Publisher: void publish(com.google.firebase.events.Event)
com.google.firebase.installations.R: R()
io.flutter.plugin.platform.PlatformViewsController: void finishFrame(boolean)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.FirebaseApp firebaseApp
com.google.firebase.installations.R$styleable: int GradientColor_android_endY
com.google.firebase.installations.FirebaseInstallations: void lambda$getId$0(com.google.firebase.installations.FirebaseInstallations)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VISIBILITY
com.google.firebase.FirebaseCommonRegistrar$$Lambda$6: FirebaseCommonRegistrar$$Lambda$6()
com.dexterous.flutterlocalnotifications.models.MessageDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails person
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
com.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0: java.lang.Object create(com.google.firebase.components.ComponentContainer)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.Class activityClass
io.flutter.embedding.android.FlutterEngineProvider
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.datatransport.R$id: int action_image
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onTap(int)
com.google.firebase.installations.R$attr: int fontWeight
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.google.firebase.internal.DataCollectionConfigStorage: android.content.Context deviceProtectedContext
com.google.firebase.datatransport.R$dimen: int compat_control_corner_material
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource RawResource
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long tokenCreationEpochInSecs
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel()
com.google.firebase.messaging.Constants: java.lang.String IPC_BUNDLE_KEY_SEND_ERROR
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: android.view.KeyEvent keyEvent
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivity()
io.flutter.plugins.firebase.messaging.R$dimen: int compat_notification_large_icon_max_width
com.google.firebase.installations.interop.R$string
com.google.firebase.messaging.Constants: java.lang.String FCM_WAKE_LOCK
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.lang.String GLOBAL
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect rect
io.flutter.plugin.platform.PlatformViewsController: void onAttachedToJNI()
androidx.savedstate.SavedStateRegistry$1
io.flutter.embedding.engine.FlutterEngine: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.dexterous.flutterlocalnotifications.utils.StringUtils: StringUtils()
com.google.firebase.messaging.FirebaseMessagingRegistrar$DevNullTransport: void schedule(com.google.android.datatransport.Event,com.google.android.datatransport.TransportScheduleCallback)
com.google.firebase.installations.R$styleable: int[] GradientColorItem
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.ExecutorService newNetworkIOExecutor()
com.google.firebase.R$styleable: int GradientColor_android_tileMode
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String isolateSnapshotData
io.flutter.plugins.pathprovider.R$id: int async
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency setOfProvider(java.lang.Class)
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataUri
io.flutter.app.FlutterPluginRegistry: java.util.Map mPluginMap
io.flutter.plugins.urllauncher.WebViewActivity$2: io.flutter.plugins.urllauncher.WebViewActivity this$0
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_update_text
androidx.fragment.app.Fragment: Fragment()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.app.FlutterActivity: java.lang.Object valuePublishedByPlugin(java.lang.String)
com.google.firebase.iid.WakeLockHolder: boolean isWakefulIntent(android.content.Intent)
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.common.JSONUtil: java.lang.Object wrap(java.lang.Object)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_type
com.google.firebase.installations.remote.RequestLimiter: long MAXIMUM_BACKOFF_DURATION_FOR_CONFIGURATION_ERRORS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_SHOW_BADGE
androidx.fragment.app.FragmentActivity: void onResumeFragments()
com.google.firebase.analytics.connector.internal.zzg: zzg(com.google.android.gms.measurement.api.AppMeasurementSdk,com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener)
com.google.firebase.installations.R$attr: int fontStyle
io.flutter.plugins.firebase.core.R$attr: int ttcIndex
com.google.firebase.iid.WakeLockHolder: void acquireWakeLock(android.content.Intent,long)
com.google.firebase.iid.FcmBroadcastProcessor: java.lang.Integer lambda$startMessagingService$1$FcmBroadcastProcessor(com.google.android.gms.tasks.Task)
com.google.firebase.FirebaseOptions: java.lang.String getProjectId()
com.google.android.gms.internal.measurement.zzdj: int zzg
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String VIBRATION_PATTERN
io.flutter.FlutterInjector: boolean accessed
com.google.firebase.messaging.TopicsSubscriber$$Lambda$0: java.lang.Object call()
com.google.firebase.installations.FirebaseInstallations: FirebaseInstallations(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.embedding.android.DrawableSplashScreen$1: java.lang.Runnable val$onTransitionComplete
io.flutter.plugin.common.StringCodec
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_3
io.flutter.plugins.urllauncher.R$string: R$string()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set activityResultListeners
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler: void activateSystemCursor(java.lang.String)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_20
io.flutter.view.FlutterView: void onStart()
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver$1: void onAvailable(android.net.Network)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void detachFromService()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
com.google.firebase.ktx.R$styleable: int GradientColorItem_android_offset
com.google.android.gms.internal.measurement.zzeb: com.google.android.gms.internal.measurement.zzeb zzg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.text.Spanned fromHtml(java.lang.String)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.embedding.engine.dart.DartExecutor$1: DartExecutor$1(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugins.firebase.core.R$id: int tag_accessibility_pane_title
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus UNREGISTERED
io.flutter.app.FlutterPluginRegistry: android.content.Context mAppContext
io.flutter.plugin.platform.PlatformViewsController: boolean access$000(int)
io.flutter.plugin.common.StandardMessageCodec: StandardMessageCodec()
com.google.android.gms.internal.measurement.zzcf: boolean zzi
io.flutter.plugins.firebase.core.R$id: int text
io.flutter.embedding.engine.FlutterEngine$1: void onPreEngineRestart()
com.google.firebase.installations.remote.AutoValue_TokenResult: java.lang.String toString()
io.flutter.plugin.editing.TextEditingDelta
com.google.firebase.ktx.BuildConfig: java.lang.String BUILD_TYPE
com.google.android.gms.internal.measurement.zzck
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.Long expiresInSecs
io.flutter.embedding.engine.dart.PlatformMessageHandler
com.google.firebase.analytics.ktx.ConsentBuilder: java.util.Map asMap()
com.google.firebase.installations.remote.AutoValue_TokenResult: java.lang.String token
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: DefaultHeartBeatInfo$$Lambda$5()
com.google.firebase.messaging.TopicOperation: com.google.firebase.messaging.TopicOperation unsubscribe(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity
com.google.firebase.iid.FirebaseInstanceId: boolean isValidAppIdFormat(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: android.content.Intent build(android.content.Context)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
io.flutter.embedding.engine.loader.ResourceExtractor: long getVersionCode(android.content.pm.PackageInfo)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType
com.google.firebase.FirebaseApp$UserUnlockReceiver: void access$200(android.content.Context)
io.flutter.embedding.engine.dart.DartMessenger$Reply: void reply(java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterTextureView: java.lang.String TAG
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToBroadcastReceiver()
io.flutter.plugin.editing.ListenableEditingState$1: ListenableEditingState$1(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable)
androidx.media.AudioAttributesImplApi26
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_20
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse readCreateResponse(java.net.HttpURLConnection)
io.flutter.plugins.sharedpreferences.R$id: int icon_group
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,boolean)
io.flutter.view.FlutterNativeView: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: java.lang.String TAG
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: java.lang.Long tokenExpirationTimestamp
com.google.firebase.installations.interop.R$layout: int notification_template_custom_big
com.google.firebase.heartbeatinfo.HeartBeatResult: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeat()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: boolean getBoolean(android.os.Bundle,java.lang.String,boolean)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Field childNodeIdsField
com.google.firebase.analytics.connector.internal.zzc: void zzm(java.lang.String,java.lang.String,android.os.Bundle)
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setExpiresInSecs(long)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: boolean isCalledFromAlertDialog()
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventWrapper: com.google.firebase.messaging.FirelogAnalyticsEvent getFirelogAnalyticsEvent()
io.flutter.embedding.engine.dart.PlatformMessageHandler: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar
com.google.android.gms.internal.measurement.zzdx: com.google.android.gms.internal.measurement.zzdx zze
io.flutter.Log: void wtf(java.lang.String,java.lang.String)
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.flutter.plugins.firebase.messaging.R$id: int tag_accessibility_actions
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: java.util.concurrent.Executor getBroadcastExecutor()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject)
com.google.firebase.iid.InstanceIdResult: java.lang.String getId()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int resourceId
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark
com.google.firebase.messaging.EnhancedIntentService$$Lambda$0: void run()
io.flutter.plugins.urllauncher.R$dimen: int notification_large_icon_height
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_9
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] $VALUES
com.google.firebase.components.CycleDetector$ComponentNode: java.util.Set getDependencies()
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
io.flutter.plugins.urllauncher.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
io.flutter.plugins.connectivity.R$id: int action_container
io.flutter.plugins.connectivity.R$styleable: int[] FontFamilyFont
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean isSameDateUtc(long,long)
com.google.firebase.installations.AutoValue_InstallationTokenResult: long tokenExpirationTimestamp
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onSaveInstanceState(android.os.Bundle)
io.flutter.embedding.engine.dart.PlatformTaskQueue: PlatformTaskQueue()
com.google.firebase.iid.internal.R: R()
io.flutter.plugin.platform.PlatformPlugin$1: boolean clipboardHasStrings()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String NUMBER_OF_ROOMS
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: io.flutter.view.FlutterView this$0
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray loadingUnitIdToSharedLibraryNames
com.google.firebase.installations.CrossProcessLock
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ENABLE_DOM_EXTRA
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean)
com.google.firebase.FirebaseApp: java.lang.String getPersistenceKey(java.lang.String,com.google.firebase.FirebaseOptions)
com.google.firebase.components.EventBus: EventBus(java.util.concurrent.Executor)
androidx.fragment.app.Fragment: int INITIALIZING
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean)
com.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: LibraryVersionComponent$$Lambda$1(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)
androidx.fragment.app.Fragment: java.lang.String getString(int)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$3
io.flutter.view.FlutterMain$Settings
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ObjectEncoder access$300(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
io.flutter.plugins.firebase.core.R$styleable: int GradientColorItem_android_color
com.google.firebase.installations.R$drawable: int notification_bg_normal_pressed
com.google.firebase.encoders.FieldDescriptor$Builder: com.google.firebase.encoders.FieldDescriptor build()
com.google.firebase.ktx.FirebaseKt: com.google.firebase.FirebaseOptions getOptions(com.google.firebase.ktx.Firebase)
androidx.media.AudioAttributesImplBaseParcelizer
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_centerY
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long creationTimestamp
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
com.google.firebase.FirebaseException: FirebaseException(java.lang.String)
io.flutter.app.FlutterActivity
io.flutter.view.FlutterView: void onDetachedFromWindow()
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()
com.google.firebase.internal.DataCollectionConfigStorage: DataCollectionConfigStorage(android.content.Context,java.lang.String,com.google.firebase.events.Publisher)
io.flutter.util.Preconditions: Preconditions()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: MethodCallHandlerImpl$1$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1,boolean)
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable)
io.flutter.view.FlutterMain: void ensureInitializationCompleteAsync(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
com.google.firebase.messaging.Constants$FirelogAnalytics$EventType
com.google.firebase.iid.FirebaseInstanceId: void lambda$awaitTaskAllowOnMainThread$3$FirebaseInstanceId(java.util.concurrent.CountDownLatch,com.google.android.gms.tasks.Task)
io.flutter.view.AccessibilityBridge$1: void onTap(int)
com.google.firebase.installations.interop.R$drawable: int notification_bg_low_pressed
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService)
io.flutter.embedding.android.FlutterFragment: void detachFromFlutterEngine()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String NETWORK_POLICY_METADATA_KEY
io.flutter.embedding.android.FlutterSplashView: void displayFlutterViewWithSplash(io.flutter.embedding.android.FlutterView,io.flutter.embedding.android.SplashScreen)
androidx.versionedparcelable.CustomVersionedParcelable
io.flutter.plugins.firebase.core.R$color: R$color()
io.flutter.app.FlutterPluginRegistry: java.util.List access$1000(io.flutter.app.FlutterPluginRegistry)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.MotionEventTracker motionEventTracker
io.flutter.embedding.android.FlutterImageView: android.graphics.Bitmap currentBitmap
io.flutter.plugins.sharedpreferences.R$id: int blocking
io.flutter.embedding.engine.dart.DartMessenger: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.util.ViewUtils: ViewUtils()
com.google.firebase.iid.WithinAppServiceConnection$BindRequest$$Lambda$1: WithinAppServiceConnection$BindRequest$$Lambda$1(java.util.concurrent.ScheduledFuture)
com.google.firebase.iid.FirebaseInstanceId: void deleteToken(java.lang.String,java.lang.String)
com.google.firebase.installations.R$dimen: int compat_button_inset_vertical_material
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
com.google.firebase.analytics.connector.R
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister
androidx.activity.OnBackPressedCallback: void remove()
androidx.fragment.app.Fragment: android.view.View mView
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: TextInputPlugin$InputTarget$Type(java.lang.String,int)
com.google.firebase.installations.remote.AutoValue_TokenResult
com.google.firebase.installations.R$style: R$style()
com.google.firebase.installations.InstallationTokenResult
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)
com.google.firebase.ktx.R$styleable: int GradientColor_android_type
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationComplete(android.content.Context,java.lang.String[])
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getVersion()
io.flutter.plugin.platform.PlatformViewsController: void access$1100(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.plugins.firebase.core.R$style: int TextAppearance_Compat_Notification_Line2
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
io.flutter.plugins.urllauncher.WebViewActivity: android.content.IntentFilter closeIntentFilter
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_NAME
io.flutter.embedding.android.FlutterActivity: void onFlutterUiDisplayed()
com.google.firebase.components.Component$Builder: java.util.Set dependencies
com.google.firebase.messaging.SendException: int ERROR_SIZE
com.google.firebase.installations.R$attr: int fontProviderFetchTimeout
com.google.firebase.installations.remote.TokenResult$Builder
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
io.flutter.embedding.android.KeyboardManager: boolean handleEvent(android.view.KeyEvent)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: java.lang.String refreshToken
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String AFFILIATION
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
com.google.firebase.datatransport.R$attr: int fontProviderFetchTimeout
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.flutter.plugins.firebase.messaging.BuildConfig
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String name
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_startX
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder access$100(com.google.firebase.components.Component$Builder)
io.flutter.plugin.platform.PlatformViewsController: void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode texture
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setExecutorService(java.util.concurrent.ExecutorService)
io.flutter.embedding.android.FlutterView: void revertImageView(java.lang.Runnable)
com.google.firebase.datatransport.R$layout: int notification_template_part_time
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void restoreSystemUiOverlays()
io.flutter.plugins.urllauncher.R$dimen: int notification_content_margin_start
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_CAMPAIGN_ID
com.google.android.gms.internal.measurement.zzdj: long zzU
io.flutter.plugin.platform.PlatformViewRegistryImpl: io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String)
org.threeten.bp.chrono.Chronology: java.lang.Object readResolve()
io.flutter.view.FlutterNativeView: java.lang.String TAG
com.google.firebase.messaging.DisplayNotification: java.util.concurrent.Executor networkIoExecutor
io.flutter.embedding.engine.renderer.FlutterRenderer: void unregisterTexture(long)
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderPackage
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$2: com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo arg$1
com.google.firebase.emulators.EmulatedServiceSettings: EmulatedServiceSettings(java.lang.String,int)
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventEncoder: FirelogAnalyticsEvent$FirelogAnalyticsEventEncoder()
com.google.firebase.ktx.R$styleable: int GradientColor_android_endColor
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_fontStyle
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_CAMPAIGN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer progress
io.flutter.view.AccessibilityBridge: float SCROLL_POSITION_CAP_FOR_INFINITY
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence deltaText
io.flutter.plugins.firebase.messaging.R$styleable: int Capability_shortcutMatchRequired
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String appBundlePath
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$TextDirection textDirection
com.google.firebase.FirebaseError: int ERROR_CUSTOM_TOKEN_MISMATCH
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void show(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.Class fragmentClass
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: ShimPluginRegistry(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getApplicationSupportDirectory()
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
io.flutter.plugins.pathprovider.PathProviderPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$1: java.lang.String val$token
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
androidx.fragment.app.FragmentActivity: void onPostResume()
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$1: void encode(java.lang.Object,java.lang.Object)
com.google.firebase.messaging.RemoteMessageCreator
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.embedding.engine.dart.DartExecutor: android.content.res.AssetManager assetManager
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.firebase.installations.interop.R$dimen: int notification_media_narrow_margin
io.flutter.embedding.engine.systemchannels.NavigationChannel: NavigationChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.android.FlutterFragment: void setDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.lang.String getPreferencesStringValue(java.lang.String,java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_endY
com.google.firebase.heartbeatinfo.HeartBeatConsumerComponent: HeartBeatConsumerComponent()
io.flutter.embedding.android.FlutterSurfaceView: boolean access$100(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DART_FLAGS
io.flutter.embedding.engine.systemchannels.SystemChannel: void sendMemoryPressureWarning()
com.dexterous.flutterlocalnotifications.SoundSource: SoundSource(java.lang.String,int)
io.flutter.FlutterInjector$Builder: java.util.concurrent.ExecutorService executorService
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderFetchTimeout
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String id
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingStart
io.flutter.plugins.pathprovider.R$styleable: int GradientColorItem_android_offset
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String VALUE
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute(io.flutter.view.AccessibilityBridge$1)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String LEVEL
io.flutter.embedding.android.FlutterView$2: io.flutter.embedding.android.FlutterView this$0
io.flutter.plugins.sharedpreferences.R$id: int tag_on_receive_content_mime_types
com.google.android.gms.internal.measurement.zzcp: com.google.android.gms.internal.measurement.zzhz zzm
com.google.firebase.messaging.FirelogAnalyticsEvent: android.content.Intent intent
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.common.internal.ReflectedParcelable
io.flutter.plugins.pathprovider.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler: java.lang.String getStringResource(java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void removeNotificationFromCache(android.content.Context,java.lang.Integer)
com.google.firebase.analytics.connector.AnalyticsConnectorImpl$1: com.google.firebase.analytics.connector.AnalyticsConnectorImpl zzb
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onDetachedFromActivity()
io.flutter.plugins.firebase.messaging.R$dimen: int notification_top_pad
com.google.firebase.installations.FirebaseInstallations$3
com.google.firebase.events.Event: java.lang.Object payload
com.google.firebase.messaging.RemoteMessage: android.os.Bundle bundle
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
com.google.firebase.messaging.TopicsSyncTask: boolean access$100()
io.flutter.embedding.android.FlutterActivityLaunchConfigs
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.String mDataDirPath
io.flutter.app.FlutterActivityDelegate$ViewFactory: io.flutter.view.FlutterView createFlutterView(android.content.Context)
com.google.firebase.iid.FcmBroadcastProcessor: android.content.Context context
com.google.firebase.ktx.R$dimen: int notification_large_icon_width
io.flutter.view.AccessibilityBridge$StringAttribute: int end
com.google.android.gms.internal.measurement.zzcp
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: android.os.Bundle timedOutEventParams
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void setCallbackDispatcher(long)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[])
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task deleteApp(java.util.Map)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFirebaseInstallationId(java.lang.String)
io.flutter.plugins.pathprovider.R$id: int tag_screen_reader_focusable
io.flutter.plugins.urllauncher.R$styleable: int GradientColorItem_android_color
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.android.datatransport.TransportFactory determineFactory(com.google.android.datatransport.TransportFactory)
com.google.firebase.FirebaseApp$UiExecutor: android.os.Handler HANDLER
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_8
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INITIALIZE_METHOD
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3500(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getTag()
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_icon_dark_focused
io.flutter.plugin.platform.SingleViewPresentation
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag)
io.flutter.app.FlutterActivityEvents: void onCreate(android.os.Bundle)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.android.FlutterView: boolean isAttachedToFlutterEngine()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleKeyEvent(android.view.KeyEvent)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.flutter.embedding.android.FlutterActivity: void onBackPressed()
io.flutter.embedding.android.FlutterView: void sendUserSettingsToFlutter()
io.flutter.view.VsyncWaiter: long refreshPeriodNanos
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique()
com.google.firebase.installations.interop.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void announce(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void detachFromActivityForConfigChanges()
io.flutter.plugins.connectivity.R$attr: int shortcutMatchRequired
com.google.firebase.datatransport.R$dimen: int notification_small_icon_size_as_large
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.TokenResult generateAuthToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.flutter.view.FlutterNativeView$1
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.text.SimpleDateFormat FORMATTER
com.google.firebase.datatransport.BuildConfig: java.lang.String VERSION_NAME
io.flutter.plugins.sharedpreferences.R$dimen: int compat_button_inset_horizontal_material
com.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.google.android.gms.internal.measurement.zzcn: java.lang.String zze
io.flutter.plugins.connectivity.R$id: int dialog_button
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DISABLE_SERVICE_AUTH_CODES
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromContentProvider()
androidx.fragment.app.Fragment: void setNextAnim(int)
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_light_focused
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String description
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
io.flutter.embedding.android.FlutterActivity: boolean popSystemNavigator()
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollPosition
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides NONE
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void success(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONVERSATION_TITLE
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: io.flutter.view.FlutterNativeView this$0
com.google.firebase.installations.R$integer: int google_play_services_version
io.flutter.plugins.urllauncher.R$attr: int fontStyle
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.lang.String PREFERENCES_FILE
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: AutoValue_PersistedInstallationEntry$Builder(com.google.firebase.installations.local.PersistedInstallationEntry,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean endBatchEdit()
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String MESSAGE_TIMESTAMP
com.google.firebase.datatransport.R$style: int TextAppearance_Compat_Notification
com.google.firebase.installations.FirebaseInstallations: int MAXIMUM_POOL_SIZE
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: byte[] getJsonBytes(org.json.JSONObject)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: long parseTokenExpirationTimestamp(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$1: io.flutter.plugin.editing.TextInputPlugin this$0
io.flutter.plugin.common.StringCodec: io.flutter.plugin.common.StringCodec INSTANCE
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String KEY_SENT_TIME
com.google.firebase.messaging.TopicsSubscriber: boolean syncScheduledOrRunning
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: FlutterFragment$NewEngineFragmentBuilder()
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String EVENT_FIREBASE_CAMPAIGN
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzs)
androidx.fragment.app.Fragment: android.view.View getView()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean isFocusable()
io.flutter.plugins.firebase.messaging.R$styleable: int SignInButton_scopeUris
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String payload
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE_BITMAP_SOURCE
com.google.firebase.installations.local.PersistedInstallationEntry: boolean shouldAttemptMigration()
io.flutter.plugins.firebase.messaging.BuildConfig: boolean DEBUG
org.threeten.bp.chrono.HijrahDate
com.google.firebase.iid.WithinAppServiceConnection: void onServiceDisconnected(android.content.ComponentName)
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_endX
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: android.util.JsonWriter jsonWriter
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_25
io.flutter.embedding.android.FlutterView$3: void onFlutterUiNoLongerDisplayed()
com.google.firebase.datatransport.R$styleable: int GradientColor_android_startY
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$2: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin this$0
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode
com.google.firebase.analytics.zzc: void zzm(java.lang.String)
io.flutter.plugin.common.EventChannel$EventSink
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_BACKGROUND_MODE
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_icon_light_normal_background
io.flutter.app.FlutterFragmentActivity: void onDestroy()
com.google.firebase.ktx.R$drawable: int notification_bg_normal_pressed
com.google.firebase.R$styleable: int[] FontFamilyFont
io.flutter.plugins.urllauncher.R$styleable
io.flutter.plugins.firebase.core.R$id: int title
com.google.firebase.installations.BuildConfig: boolean DEBUG
io.flutter.embedding.android.FlutterSplashView: android.view.View splashScreenView
io.flutter.plugins.sharedpreferences.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.google.firebase.installations.local.IidStore: java.lang.String IID_SHARED_PREFS_NAME
io.flutter.plugin.platform.PlatformViewsController: void detach()
io.flutter.embedding.android.FlutterSplashView: java.lang.String transitioningIsolateId
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$3: java.lang.Object call()
com.google.firebase.components.OptionalProvider$$Lambda$5: java.lang.Object get()
androidx.fragment.app.FragmentActivity: boolean mRequestedPermissionsFromFragment
io.flutter.plugins.sharedpreferences.R$id: int time
com.google.firebase.encoders.FieldDescriptor: java.lang.String name
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
io.flutter.plugin.common.BasicMessageChannel: void resizeChannelBuffer(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsInactive()
com.google.firebase.ktx.R$layout: R$layout()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_20
com.google.firebase.installations.time.SystemClock: com.google.firebase.installations.time.SystemClock getInstance()
io.flutter.view.AccessibilityBridge$SemanticsNode: void transformPoint(float[],float[],float[])
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithDeltas(int,java.util.ArrayList)
com.google.firebase.analytics.connector.internal.zzg
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(double)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onSaveInstanceState(android.os.Bundle)
io.flutter.app.FlutterActivity: void onStop()
io.flutter.view.FlutterView: io.flutter.view.FlutterView$ZeroSides calculateShouldZeroSides()
io.flutter.plugins.firebase.messaging.R$string: int common_signin_button_text_long
com.google.firebase.FirebaseOptions$Builder: java.lang.String applicationId
io.flutter.embedding.android.FlutterFragmentActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifier(int)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale localeFromString(java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: FlutterFragmentActivity$NewEngineIntentBuilder(java.lang.Class)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver$1: io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver this$0
io.flutter.view.FlutterMain: void startInitialization(android.content.Context,io.flutter.view.FlutterMain$Settings)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: boolean equals(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ListenableEditingState mEditable
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
com.google.firebase.R$drawable: int notification_action_background
io.flutter.app.FlutterApplication: void onCreate()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void dispatchDraw(android.graphics.Canvas)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String titleLocKey
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride
io.flutter.embedding.android.FlutterSplashView$2: io.flutter.embedding.android.FlutterSplashView this$0
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra valueOf(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowViewGroup
com.google.firebase.installations.interop.R$integer: int status_bar_notification_info_maxnum
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: int JOB_ID
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setAuthToken(com.google.firebase.installations.remote.TokenResult)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_28
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColorItem_android_offset
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldAutomaticallyHandleOnBackPressed(boolean)
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: JsonValueObjectEncoderContext(com.google.firebase.encoders.json.JsonValueObjectEncoderContext)
com.google.firebase.FirebaseCommonRegistrar
com.google.firebase.messaging.TopicOperation: java.lang.String serialize()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String IS_AUTO_INIT_ENABLED
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $VALUES
io.flutter.plugin.editing.TextInputPlugin$1
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] getSupportedAbis()
io.flutter.plugins.connectivity.R$styleable: int FontFamily_fontProviderFetchStrategy
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.android.FlutterFragmentActivity: void onCreate(android.os.Bundle)
com.google.firebase.analytics.ktx.AnalyticsKt: com.google.firebase.analytics.FirebaseAnalytics getAnalytics(com.google.firebase.ktx.Firebase)
androidx.fragment.app.Fragment: void onStart()
com.google.firebase.heartbeatinfo.AutoValue_SdkHeartBeatResult: boolean equals(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void updateViewLayout(java.lang.Object[])
io.flutter.plugins.firebase.core.R$style: int TextAppearance_Compat_Notification_Time
com.google.firebase.installations.R$id: int tag_unhandled_key_listeners
io.flutter.plugins.urllauncher.MethodCallHandlerImpl
com.google.firebase.installations.AutoValue_InstallationTokenResult: java.lang.String getToken()
com.google.firebase.messaging.FirebaseMessaging$$Lambda$5: java.lang.String arg$1
io.flutter.view.FlutterNativeView: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate)
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String REFUND
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback pluginRegistrantCallback
io.flutter.plugin.platform.PlatformViewsController$1: void ensureValidAndroidVersion(int)
io.flutter.plugins.firebase.core.R$dimen: int compat_button_padding_vertical_material
com.google.firebase.installations.interop.R$id: int text
com.google.firebase.analytics.connector.internal.zzc: boolean zze(com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty)
com.google.firebase.messaging.NotificationParams: java.lang.String getLocalizationResourceForKey(java.lang.String)
io.flutter.plugins.pathprovider.R$integer: R$integer()
io.flutter.plugins.pathprovider.R$id: int tag_state_description
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugin.common.MethodChannel$Result val$result
com.google.firebase.components.ComponentRegistrar: java.util.List getComponents()
com.google.firebase.analytics.ktx.AnalyticsKt: java.lang.Object getLOCK()
io.flutter.plugins.urllauncher.R$dimen: int notification_top_pad
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS
com.google.firebase.analytics.zzc: java.lang.String zzh()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String firebaseInstallationId
com.google.firebase.iid.ServiceStarter: int doStartService(android.content.Context,android.content.Intent)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding
io.flutter.embedding.android.FlutterSplashView$3: FlutterSplashView$3(io.flutter.embedding.android.FlutterSplashView)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
io.flutter.app.FlutterActivityDelegate: void onConfigurationChanged(android.content.res.Configuration)
androidx.fragment.app.FragmentActivity: void onStop()
com.google.firebase.messaging.RemoteMessage
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_AOT_SHARED_LIBRARY_NAME
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_android_fontWeight
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder
io.flutter.embedding.android.FlutterFragment: boolean shouldRestoreAndSaveState()
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String EVENT_NOTIFICATION_RECEIVE
io.flutter.BuildConfig
com.google.firebase.installations.local.IidStore: java.lang.String STORE_KEY_SEPARATOR
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: java.lang.String encodedName
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
com.google.firebase.messaging.SendException: SendException(java.lang.String)
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String key
io.flutter.embedding.engine.loader.ApplicationInfoLoader
io.flutter.plugin.platform.PlatformViewRegistryImpl: java.util.Map viewFactories
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(java.util.Set)
com.google.firebase.messaging.TopicsSubscriber: void startTopicsSyncIfNecessary()
com.google.firebase.installations.interop.R$string: int common_google_play_services_unknown_issue
com.google.firebase.BuildConfig
com.google.firebase.R$id: int time
io.flutter.app.FlutterActivityEvents: boolean onBackPressed()
io.flutter.embedding.engine.loader.FlutterLoader: boolean automaticallyRegisterPlugins()
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointFunctionName()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String EXTEND_SESSION
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_0
io.flutter.embedding.android.FlutterFragment: int FLUTTER_VIEW_ID
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
com.google.android.gms.internal.measurement.zzdj: long zzw
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl
com.google.firebase.messaging.MessagingAnalytics: void logNotificationDismiss(android.content.Intent)
io.flutter.plugin.platform.VirtualDisplayController: int densityDpi
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.firebase.R$style
io.flutter.embedding.android.AndroidTouchProcessor: int _POINTER_BUTTON_PRIMARY
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
com.google.firebase.messaging.FirebaseMessaging$$Lambda$1: com.google.firebase.messaging.FirebaseMessaging arg$1
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: TextInputChannel$TextCapitalization(java.lang.String,int,java.lang.String)
com.google.firebase.components.EventBus$$Lambda$1: EventBus$$Lambda$1(java.util.Map$Entry,com.google.firebase.events.Event)
io.flutter.view.AccessibilityViewEmbedder$1
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderQuery
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
com.google.firebase.installations.GetIdListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification_Title
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)
io.flutter.app.FlutterFragmentActivity: void onTrimMemory(int)
io.flutter.view.AccessibilityBridge: int getHoveredObjectId()
com.google.firebase.inject.Deferred
io.flutter.app.FlutterActivityDelegate: io.flutter.app.FlutterActivityDelegate$ViewFactory viewFactory
io.flutter.view.AccessibilityBridge$TextDirection
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderPackage
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: android.content.Context getContext()
com.google.firebase.installations.R$dimen: int notification_top_pad
com.google.firebase.installations.local.IidStore: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus NO_ACTIVITY
com.google.firebase.components.CycleDetector$ComponentNode: java.util.Set dependencies
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.view.inputmethod.InputMethodManager inputMethodManager
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.view.FlutterView view()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_25
com.google.firebase.components.OptionalProvider$$Lambda$4: com.google.firebase.inject.Deferred$DeferredHandler lambdaFactory$()
io.flutter.plugins.firebase.messaging.R$attr: int alpha
io.flutter.view.AccessibilityBridge$TextDirection: AccessibilityBridge$TextDirection(java.lang.String,int)
io.flutter.plugins.firebase.core.R$id: int line1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ID
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getInitialRoute()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView)
com.google.android.gms.internal.measurement.zzcd: boolean zzf
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.plugins.urllauncher.R$attr: int nestedScrollViewStyle
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext internalAddIgnoreNullValues(java.lang.String,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener
com.google.firebase.messaging.Constants$FirelogAnalytics: Constants$FirelogAnalytics()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: boolean equals(java.lang.Object)
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_centerY
androidx.fragment.app.Fragment: boolean mHidden
com.google.firebase.ktx.R$attr: int fontProviderFetchStrategy
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
com.google.firebase.installations.CrossProcessLock: java.nio.channels.FileChannel channel
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String isolateServiceId
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
com.google.firebase.iid.Registrar$$Lambda$0: com.google.firebase.components.ComponentFactory $instance
io.flutter.plugin.editing.TextInputPlugin: void notifyValueChanged(java.lang.String)
com.google.firebase.FirebaseApiNotAvailableException: FirebaseApiNotAvailableException(java.lang.String)
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_SDK_PLATFORM
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)
io.flutter.plugins.urllauncher.R$id: int tag_unhandled_key_listeners
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
io.flutter.plugins.urllauncher.R$string: int status_bar_notification_info_overflow
io.flutter.embedding.android.KeyChannelResponder: java.lang.String TAG
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterFragmentActivity: android.widget.FrameLayout provideRootLayout(android.content.Context)
com.google.firebase.components.ComponentDiscoveryService: android.os.IBinder onBind(android.content.Intent)
com.google.firebase.messaging.RemoteMessageCreator: java.lang.Object[] newArray(int)
com.google.firebase.iid.FcmBroadcastProcessor: com.google.android.gms.tasks.Task bindToMessagingService(android.content.Context,android.content.Intent)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.firebase.installations.FirebaseInstallations$$Lambda$4
io.flutter.embedding.android.FlutterSurfaceView$2: io.flutter.embedding.android.FlutterSurfaceView this$0
com.google.firebase.iid.GmsRpc: java.lang.String lambda$extractResponseWhenComplete$0$GmsRpc(com.google.android.gms.tasks.Task)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.R$drawable
io.flutter.plugins.sharedpreferences.R$style: int Widget_Compat_NotificationActionText
com.google.firebase.iid.WithinAppServiceConnection$BindRequest: void finish()
io.flutter.plugins.firebase.core.R$dimen: int notification_big_circle_margin
io.flutter.plugins.connectivity.R$dimen: int compat_button_inset_horizontal_material
io.flutter.plugins.firebase.messaging.R$dimen
com.google.firebase.datatransport.BuildConfig: int VERSION_CODE
io.flutter.embedding.engine.loader.FlutterLoader: long initStartTimestampMillis
com.google.firebase.installations.R$styleable: int FontFamilyFont_font
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context)
com.google.firebase.messaging.TopicsSyncTask: boolean hasWakeLockPermission(android.content.Context)
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzO
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String getFingerprintHashForPackage()
com.google.firebase.ktx.R$attr: int fontProviderFetchTimeout
io.flutter.plugin.platform.SingleViewPresentation$ImmContext
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_MIME_TYPE
io.flutter.app.FlutterActivityDelegate: boolean loadIntent(android.content.Intent)
io.flutter.plugin.platform.PlatformViewsController: void initializeRootImageViewIfNeeded()
com.google.firebase.datatransport.R$string: int status_bar_notification_info_overflow
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: java.util.Set shimRegistrars
io.flutter.embedding.engine.FlutterEngine$1: void onEngineWillDestroy()
io.flutter.embedding.android.FlutterTextureView$1
io.flutter.view.FlutterNativeView: boolean isApplicationRunning()
com.google.firebase.ktx.R$id: int icon_group
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.view.TextureRegistry$SurfaceTextureEntry,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: java.util.Map zzb
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: SingleViewPresentation$PresentationContext(android.content.Context,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler,android.content.Context)
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_ttcIndex
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_CATEGORY4
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: HeartBeatInfo$HeartBeat(java.lang.String,int,int)
com.google.firebase.installations.R$dimen: int notification_right_side_padding_top
io.flutter.plugins.urllauncher.R$id: int title
io.flutter.plugins.firebase.messaging.R$layout: int notification_template_custom_big
com.google.firebase.installations.InstallationTokenResult$Builder: InstallationTokenResult$Builder()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performEditorAction(int)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_6
com.google.firebase.FirebaseApp: java.lang.String LOG_TAG
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String POST_SCORE
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context,android.util.AttributeSet)
com.google.firebase.installations.local.PersistedInstallation: PersistedInstallation(com.google.firebase.FirebaseApp)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int viewId
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setInitialRoute(java.lang.String)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: FlutterActivity$NewEngineIntentBuilder(java.lang.Class)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void release()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CREATIVE_NAME
com.google.firebase.installations.FirebaseInstallations: long KEEP_ALIVE_TIME_IN_SECONDS
com.google.firebase.components.ComponentRuntime: void maybeInitializeEagerComponents()
io.flutter.plugins.connectivity.R$attr: int font
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String fid
com.google.firebase.messaging.SendException: int ERROR_TOO_MANY_MESSAGES
io.flutter.plugins.firebase.core.R$attr: int font
com.google.firebase.datatransport.R$layout: int notification_template_icon_group
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
io.flutter.view.FlutterView: void resetAccessibilityTree()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingBottom
androidx.fragment.app.Fragment: int getTargetRequestCode()
com.google.firebase.installations.remote.RequestLimiter: void setNextRequestTime(int)
com.google.firebase.installations.R$dimen: R$dimen()
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_TRACKING_ID
com.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.firebase.installations.FirebaseInstallations$3: int[] $SwitchMap$com$google$firebase$installations$remote$InstallationResponse$ResponseCode
io.flutter.plugin.editing.ListenableEditingState: void notifyListenersIfNeeded(boolean,boolean,boolean)
com.google.firebase.R$style: int TextAppearance_Compat_Notification_Title
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_22
com.google.firebase.installations.StateListener
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.installations.interop.BuildConfig: java.lang.String VERSION_NAME
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mToStringCache
com.google.firebase.installations.R$id: int time
com.google.firebase.ktx.R$id: int normal
io.flutter.app.FlutterActivityDelegate: java.lang.String TAG
com.google.firebase.installations.interop.R$dimen: int compat_notification_large_icon_max_height
io.flutter.plugins.pathprovider.R$styleable: int Capability_shortcutMatchRequired
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener: void onPreEngineRestart()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CHECKOUT_OPTION
com.google.firebase.messaging.Constants$MessageTypes: java.lang.String SEND_ERROR
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen access$100(io.flutter.embedding.android.FlutterSplashView)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder handleDeeplinking(java.lang.Boolean)
com.google.firebase.installations.local.IidStore: java.lang.String JSON_ENCODED_PREFIX
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_31
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderFetchStrategy
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer hour
com.google.firebase.R$id: int action_image
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_7
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
org.threeten.bp.chrono.JapaneseDate
io.flutter.plugin.editing.FlutterTextUtils: FlutterTextUtils(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_OBSERVATORY_PORT
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task getInitialMessage(java.util.Map)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setRawData(byte[])
androidx.lifecycle.ReflectiveGenericLifecycleObserver
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect globalRect
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ObjectEncoder DEFAULT_FALLBACK_ENCODER
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment flutterFragment
com.google.firebase.messaging.TopicsSyncTask: com.google.firebase.messaging.TopicsSubscriber topicsSubscriber
io.flutter.Log: int VERBOSE
com.google.firebase.installations.interop.R$styleable: int ColorStateListItem_android_color
io.flutter.view.FlutterNativeView: boolean applicationIsRunning
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.FirebaseApp getApp()
com.google.firebase.installations.interop.R$dimen: int notification_action_text_size
com.google.firebase.components.Preconditions
io.flutter.view.AccessibilityBridge$AccessibilityFeature: int value
com.google.firebase.installations.remote.AutoValue_TokenResult: AutoValue_TokenResult(java.lang.String,long,com.google.firebase.installations.remote.TokenResult$ResponseCode)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.core.app.JobIntentService: void onCreate()
io.flutter.embedding.engine.plugins.PluginRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context)
com.google.firebase.FirebaseApp: int hashCode()
com.google.android.gms.internal.measurement.zzo: com.google.android.gms.internal.measurement.zzp asInterface(android.os.IBinder)
org.threeten.bp.chrono.HijrahEra
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment retrieveExistingFlutterFragmentIfPossible()
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToContentProvider()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterView val$flutterView
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext nested(com.google.firebase.encoders.FieldDescriptor)
io.flutter.plugin.platform.PlatformViewsController: android.content.Context access$200(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugins.firebase.core.R$drawable: int notification_bg_normal
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
com.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: com.google.firebase.components.ComponentRegistrar arg$1
io.flutter.plugins.connectivity.R$drawable: int notification_template_icon_low_bg
com.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: com.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1 instance
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void destroy()
com.google.firebase.analytics.connector.internal.zzf
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void draw(android.graphics.Canvas)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.plugins.pathprovider.R$style: int Widget_Compat_NotificationActionText
com.google.firebase.messaging.SharedPreferencesQueue$$Lambda$0: com.google.firebase.messaging.SharedPreferencesQueue arg$1
com.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: ComponentRuntime$Builder$$Lambda$1(com.google.firebase.components.ComponentRegistrar)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_9
io.flutter.plugins.pathprovider.R$dimen: int compat_button_padding_horizontal_material
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_centerColor
io.flutter.view.AccessibilityBridge: java.util.Map flutterSemanticsTree
com.google.firebase.analytics.zzb: zzb(com.google.firebase.analytics.FirebaseAnalytics)
com.google.firebase.heartbeatinfo.HeartBeatConsumerComponent$1: HeartBeatConsumerComponent$1()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMEOUT_AFTER
io.flutter.embedding.android.FlutterSplashView$SavedState
io.flutter.plugins.sharedpreferences.R$id: int tag_unhandled_key_event_manager
com.google.firebase.components.OptionalProvider$$Lambda$4: OptionalProvider$$Lambda$4()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.google.firebase.datatransport.R$drawable: int notification_bg_normal
io.flutter.plugins.firebase.messaging.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String PURCHASE_REFUND
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: void registerReceiver()
androidx.fragment.app.Fragment: void onDestroy()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
com.google.firebase.datatransport.R$id: int action_divider
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: boolean destroyEngineWithActivity
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_fontWeight
io.flutter.plugins.sharedpreferences.R$attr: R$attr()
com.google.firebase.components.ComponentDiscovery: java.util.List discoverLazy()
io.flutter.view.FlutterMain
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setStorageBucket(java.lang.String)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context)
com.google.firebase.datatransport.R$dimen: int notification_large_icon_width
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_DART_ENTRYPOINT
io.flutter.plugins.connectivity.R$drawable: int notification_icon_background
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void setJNI(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String)
com.google.firebase.installations.remote.AutoValue_TokenResult: long tokenExpirationTimestamp
com.google.firebase.ktx.R$styleable: int FontFamily_fontProviderPackage
com.google.firebase.components.Component: boolean isValue()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.analytics.connector.internal.zzc: boolean zzj(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String URI
com.google.firebase.ktx.R$styleable: int FontFamilyFont_android_fontStyle
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra valueOf(java.lang.String)
androidx.fragment.app.Fragment: boolean mCalled
com.google.firebase.installations.FirebaseInstallations$1: java.util.concurrent.atomic.AtomicInteger mCount
com.google.firebase.components.CycleDetector$ComponentNode: CycleDetector$ComponentNode(com.google.firebase.components.Component)
com.google.firebase.installations.Utils: long getRandomDelayForSyncPrevention()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String TEXT_SCALE_FACTOR
com.google.android.gms.internal.measurement.zzeb: int zza
androidx.fragment.app.Fragment: boolean mInLayout
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleHorizontalMovement(boolean,boolean)
io.flutter.embedding.android.FlutterSurfaceView: void connectSurfaceToRenderer()
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_5
com.google.firebase.components.ComponentContainer: java.util.Set setOf(java.lang.Class)
com.google.firebase.messaging.RemoteMessage: byte[] getRawData()
com.google.firebase.internal.DataCollectionConfigStorage: void setEnabled(java.lang.Boolean)
com.google.firebase.R$styleable: int FontFamilyFont_android_ttcIndex
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver$1
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
io.flutter.plugin.common.MethodCall: java.lang.String method
io.flutter.plugin.editing.InputConnectionAdaptor: boolean beginBatchEdit()
io.flutter.plugins.sharedpreferences.R$attr: int nestedScrollViewStyle
com.google.firebase.installations.remote.AutoValue_InstallationResponse: int hashCode()
io.flutter.util.PathUtils: java.lang.String getDataDirectory(android.content.Context)
io.flutter.plugin.common.JSONMessageCodec
com.google.firebase.iid.Metadata: android.content.Context context
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String getOrCreateChannel(android.content.Context,java.lang.String,android.os.Bundle)
com.google.android.gms.internal.measurement.zzdz
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(float)
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics
com.google.firebase.provider.FirebaseInitProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.firebase.FirebaseOptions: java.lang.String getGcmSenderId()
com.google.firebase.ktx.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.plugins.firebase.messaging.R$attr: int queryPatterns
io.flutter.plugin.common.PluginRegistry$ViewDestroyListener
io.flutter.plugins.connectivity.R$attr: int fontProviderSystemFontFamily
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: void onStateUpdate(java.lang.Object)
com.google.firebase.components.Dependency: java.lang.Class anInterface
io.flutter.BuildConfig: BuildConfig()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus NOT_GENERATED
org.threeten.bp.LocalDateTime: java.lang.Object writeReplace()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitText(java.lang.CharSequence,int)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.content.Context createDisplayContext(android.view.Display)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String AD_PLATFORM
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder
com.google.firebase.FirebaseApp: android.content.Context applicationContext
io.flutter.plugins.connectivity.R$attr: int fontStyle
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_startColor
io.flutter.app.FlutterActivity: FlutterActivity()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterUiDisplayed
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.AlarmManager getAlarmManager(android.content.Context)
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String toString()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String INDEX
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getRecordSourceNodeId
io.flutter.plugins.connectivity.R$drawable: int notification_action_background
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails
io.flutter.plugins.firebase.messaging.R$attr: int nestedScrollViewStyle
io.flutter.plugins.firebase.messaging.R$id: int tag_on_apply_window_listener
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$0
com.google.firebase.encoders.config.Configurator: void configure(com.google.firebase.encoders.config.EncoderConfig)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String JSON_CONTENT_TYPE
com.google.firebase.installations.interop.R$color
io.flutter.plugin.editing.TextInputPlugin: void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[])
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.NotificationStyle style
io.flutter.plugins.connectivity.R$id: int tag_window_insets_animation_callback
io.flutter.view.AccessibilityBridge$SemanticsNode: float min(float,float,float,float)
com.google.android.gms.internal.measurement.zzcp: long zze
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler
com.google.firebase.components.ComponentRuntime$$Lambda$5: java.lang.Object get()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String PARAM_LABEL
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: ShimPluginRegistry$ShimRegistrarAggregate(io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$1)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderStorageDirectory()
com.google.firebase.messaging.RemoteMessage: RemoteMessage(android.os.Bundle)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer)
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String bigText
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.google.firebase.FirebaseApp: void access$600(com.google.firebase.FirebaseApp,boolean)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
io.flutter.view.AccessibilityBridge$2
com.google.android.gms.internal.measurement.zzdf: int zza
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap vdControllers
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification_Info
com.google.android.gms.measurement.internal.zzas: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener: void onFlutterEngineDetachedFromFlutterView()
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides RIGHT
io.flutter.plugins.firebase.messaging.R$id: int wide
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
io.flutter.embedding.android.FlutterFragmentActivity: boolean isDebuggable()
com.google.firebase.iid.Store: java.util.Map subtypeCreationTimes
com.google.firebase.installations.local.IidStore: IidStore(android.content.SharedPreferences,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: com.google.firebase.analytics.connector.AnalyticsConnector getInstance(com.google.firebase.FirebaseApp)
com.google.firebase.messaging.CommonNotificationBuilder: com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo createNotificationInfo(android.content.Context,com.google.firebase.messaging.NotificationParams)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: void setLogTag(java.lang.String)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.google.firebase.platforminfo.DefaultUserAgentPublisher
io.flutter.plugins.firebase.messaging.R$styleable: int SignInButton_buttonSize
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.google.firebase.messaging.TopicsSubscriber: void addToPendingOperations(com.google.firebase.messaging.TopicOperation,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.view.FlutterView$ViewportMetrics: FlutterView$ViewportMetrics()
com.google.firebase.components.ComponentRuntime: java.util.Map lazySetMap
com.google.firebase.messaging.BuildConfig: java.lang.String VERSION_NAME
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
com.google.firebase.analytics.zzc: long zzk()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void requestAutofill()
io.flutter.embedding.android.FlutterTextureView$1: FlutterTextureView$1(io.flutter.embedding.android.FlutterTextureView)
io.flutter.plugins.pathprovider.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void commitAsync(android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.plugins.sharedpreferences.R$id: int tag_on_apply_window_listener
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP
com.google.firebase.ktx.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColorItem_android_color
com.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: float devicePixelRatio
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationCancel(android.animation.Animator)
io.flutter.embedding.android.FlutterSplashView$2
com.google.firebase.measurement_impl.R
com.google.firebase.components.Lazy: java.lang.Object UNINITIALIZED
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.google.firebase.ktx.R$dimen: int notification_action_icon_size
com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)
com.google.firebase.installations.RandomFidGenerator: java.lang.String createRandomFid()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils
com.google.firebase.iid.Store$Token: java.lang.String getTokenOrNull(com.google.firebase.iid.Store$Token)
org.threeten.bp.OffsetDateTime
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadAction(io.flutter.view.AccessibilityBridge$Action)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DART_FLAGS
io.flutter.plugin.common.JSONMessageCodec: JSONMessageCodec()
com.google.firebase.R$drawable: int notification_bg_normal_pressed
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$2
com.google.firebase.messaging.MessagingAnalytics: void setUserPropertyIfRequired(android.content.Intent)
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String ALWAYS_USE_24_HOUR_FORMAT
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPause()
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String SHARE
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: FlutterNativeView$EngineLifecycleListenerImpl(io.flutter.view.FlutterNativeView)
io.flutter.plugins.firebase.messaging.R$styleable: int[] GradientColor
com.google.firebase.components.LazySet: java.util.Set get()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String groupKey
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String SENT_TIME
com.google.firebase.installations.internal.FidListener: void onFidChanged(java.lang.String)
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
io.flutter.plugins.urllauncher.R$dimen: R$dimen()
io.flutter.embedding.android.KeyboardManager: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN
io.flutter.plugins.firebase.core.R$drawable: int notification_icon_background
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugins.firebase.messaging.R$dimen: int compat_control_corner_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean ongoing
androidx.fragment.app.FragmentActivity: void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: long access$300(io.flutter.view.FlutterView$SurfaceTextureRegistryEntry)
com.google.firebase.FirebaseCommonRegistrar$$Lambda$1
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String HANDLE_DEEPLINKING_META_DATA_KEY
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_4
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_VM_SNAPSHOT_DATA
com.google.firebase.messaging.SharedPreferencesQueue: void syncState()
com.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task extractResponseWhenComplete(com.google.android.gms.tasks.Task)
io.flutter.plugins.urllauncher.R$style: R$style()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.plugins.connectivity.R$style: int TextAppearance_Compat_Notification_Line2
androidx.fragment.app.Fragment: boolean mIsCreated
io.flutter.plugins.urllauncher.WebViewActivity$1
io.flutter.plugins.firebase.core.R$dimen: int compat_notification_large_icon_max_width
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: void execute(java.lang.Runnable)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
com.dexterous.flutterlocalnotifications.models.MessageDetails: MessageDetails(java.lang.String,java.lang.Long,com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.String)
io.flutter.plugins.urllauncher.R$styleable: int Capability_shortcutMatchRequired
com.google.firebase.iid.RequestDeduplicator: java.util.concurrent.Executor executor
androidx.core.app.JobIntentService: void onHandleWork(android.content.Intent)
com.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task deleteInstanceId(java.lang.String)
io.flutter.plugin.common.PluginRegistry
com.google.firebase.installations.R$id: int icon_group
com.google.firebase.FirebaseOptions: java.lang.String access$300(com.google.firebase.FirebaseOptions)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context,android.util.AttributeSet,int)
io.flutter.embedding.android.FlutterFragment: void onNewIntent(android.content.Intent)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context)
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.FirebaseApp firebaseApp
io.flutter.BuildConfig: boolean JIT_RELEASE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONGOING
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler this$1
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent)
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String access$000(java.io.File,android.content.pm.PackageManager,java.lang.String)
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String METADATA_DEFAULT_ICON
io.flutter.plugins.pathprovider.PathProviderPlugin: android.content.Context context
com.google.firebase.FirebaseCommonRegistrar$$Lambda$5: com.google.firebase.FirebaseCommonRegistrar$$Lambda$5 instance
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.firebase.heartbeatinfo.AutoValue_SdkHeartBeatResult
com.google.firebase.datatransport.R$drawable: int notification_bg_low_normal
com.google.firebase.installations.interop.R$dimen: int notification_small_icon_size_as_large
io.flutter.embedding.android.FlutterView: void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.firebase.iid.WithinAppServiceConnection$BindRequest$$Lambda$0: void run()
com.google.firebase.components.OptionalProvider$$Lambda$4
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.installations.R$styleable: int FontFamilyFont_fontWeight
com.google.firebase.provider.FirebaseInitProvider: java.lang.String TAG
com.google.firebase.messaging.FirebaseMessagingService: void passMessageIntentToSdk(android.content.Intent)
com.google.firebase.analytics.FirebaseAnalytics
io.flutter.plugins.sharedpreferences.R$id: int tag_accessibility_actions
io.flutter.embedding.android.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin
io.flutter.plugins.pathprovider.PathProviderPlugin$1: PathProviderPlugin$1(io.flutter.plugins.pathprovider.PathProviderPlugin,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.app.FlutterPluginRegistry: java.util.List access$600(io.flutter.app.FlutterPluginRegistry)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_12
com.google.firebase.events.Event: java.lang.String toString()
com.google.android.gms.internal.measurement.zzdu: long zzh
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: MouseCursorChannel$1(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
com.google.firebase.FirebaseApp: java.lang.String FIREBASE_COMMON
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer notificationPriority
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.Long tokenCreationEpochInSecs
com.google.android.gms.internal.measurement.zzbu: com.google.android.gms.internal.measurement.zzhz zzf
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_19
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: AnalyticsConnectorImpl(com.google.android.gms.measurement.api.AppMeasurementSdk)
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String[] hints
com.google.firebase.R$styleable: int GradientColorItem_android_color
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.google.firebase.installations.interop.R$id
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder publishes(java.lang.Class)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry$1: void onFrameAvailable(android.graphics.SurfaceTexture)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map broadcastReceiverAwarePlugins
org.threeten.bp.chrono.IsoChronology: java.lang.Object readResolve()
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: java.util.Map getUserProperties(boolean)
io.flutter.plugins.firebase.messaging.ContextHolder: android.content.Context getApplicationContext()
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext inline(java.lang.Object)
com.google.firebase.iid.FirebaseInstanceId$$Lambda$3: FirebaseInstanceId$$Lambda$3(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.encoders.config.EncoderConfig
androidx.fragment.app.Fragment: int mContainerId
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: PlatformViewsChannel$1$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_font
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore instance
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer ledColor
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String MESSAGE_LABEL
io.flutter.embedding.android.DrawableSplashScreen$1: io.flutter.embedding.android.DrawableSplashScreen this$0
com.google.firebase.components.Component$Builder: com.google.firebase.components.ComponentFactory factory
io.flutter.view.AccessibilityBridge$SemanticsNode: int maxValueLength
com.google.firebase.messaging.SharedPreferencesQueue: java.lang.String queueName
com.google.firebase.FirebaseCommonRegistrar$$Lambda$5: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderFetchStrategy
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer second
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord)
io.flutter.plugins.sharedpreferences.R
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugins.sharedpreferences.R$dimen: int notification_large_icon_height
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel channel
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: void zza(android.content.Intent,android.content.Context,boolean,android.content.BroadcastReceiver$PendingResult)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_OPTIONS
io.flutter.embedding.android.ExclusiveAppComponent: java.lang.Object getAppComponent()
com.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.TopicsStore getInstance(android.content.Context,java.util.concurrent.Executor)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.ktx.R$dimen: int notification_subtext_size
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzy,long)
io.flutter.app.FlutterFragmentActivity: io.flutter.plugin.common.PluginRegistry pluginRegistry
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder ignoreNullValues(boolean)
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult build()
io.flutter.plugins.firebase.core.BuildConfig: java.lang.String LIBRARY_NAME
com.google.firebase.installations.internal.FidListenerHandle
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: DartMessenger$DefaultTaskQueueFactory(io.flutter.embedding.engine.dart.DartMessenger$1)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer priority
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PROGRESS
androidx.activity.ComponentActivity: ComponentActivity()
com.google.firebase.messaging.NotificationParams: int getLightColor(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate
io.flutter.plugins.connectivity.R$id: int tag_on_receive_content_listener
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,boolean)
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ALL_METHOD
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate: void asyncWaitForVsync(long)
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: java.lang.String toString()
io.flutter.app.FlutterApplication: android.app.Activity getCurrentActivity()
io.flutter.plugins.urllauncher.R$style: int Widget_Compat_NotificationActionContainer
io.flutter.plugins.pathprovider.R$styleable: int ColorStateListItem_alpha
io.flutter.view.VsyncWaiter$1
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.android.FlutterFragment: java.lang.String getCachedEngineId()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.String backgroundMode
io.flutter.plugin.platform.VirtualDisplayController$1: java.lang.Runnable val$onNewSizeFrameAvailable
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context)
io.flutter.plugins.urllauncher.R$attr: int shortcutMatchRequired
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_15
io.flutter.plugins.firebase.messaging.R$color: int androidx_core_secondary_text_default_material_light
io.flutter.app.FlutterPluginRegistry: void attach(io.flutter.view.FlutterView,android.app.Activity)
io.flutter.plugin.editing.TextEditingDelta: int getDeltaStart()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: WebViewActivity$FlutterWebChromeClient(io.flutter.plugins.urllauncher.WebViewActivity,io.flutter.plugins.urllauncher.WebViewActivity$1)
io.flutter.plugins.sharedpreferences.R$styleable: int Capability_queryPatterns
io.flutter.plugins.pathprovider.R$id: int text
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String BEGIN_CHECKOUT
com.google.firebase.messaging.TopicOperation: int hashCode()
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatTitle
io.flutter.plugins.pathprovider.R$integer: int status_bar_notification_info_maxnum
com.google.firebase.installations.remote.RequestLimiter: int attemptCount
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int viewId
com.google.firebase.messaging.FirebaseMessaging: void send(com.google.firebase.messaging.RemoteMessage)
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService)
com.google.firebase.installations.interop.R$dimen: int compat_button_inset_horizontal_material
com.google.firebase.FirebaseError: int ERROR_ACCOUNT_EXISTS_WITH_DIFFERENT_CREDENTIAL
io.flutter.embedding.android.DrawableSplashScreen$1: DrawableSplashScreen$1(io.flutter.embedding.android.DrawableSplashScreen,java.lang.Runnable)
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponentRegistrar(com.google.firebase.components.ComponentRegistrar)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: java.lang.String name
androidx.fragment.app.Fragment: void initState()
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzy
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider setOfProvider(java.lang.Class)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void onCreate()
com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzhy zze
io.flutter.plugins.connectivity.R$string: int status_bar_notification_info_overflow
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void startBackgroundIsolate(long,io.flutter.embedding.engine.FlutterShellArgs)
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String MESSAGE_CHANNEL
com.google.android.gms.internal.measurement.zzcz: com.google.android.gms.internal.measurement.zzcz zzg
com.google.firebase.FirebaseApp$UserUnlockReceiver: void ensureReceiverRegistered(android.content.Context)
com.google.firebase.provider.FirebaseInitProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String DISCOUNT
com.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.TopicOperation getNextTopicOperation()
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String SOUND_2
com.google.firebase.messaging.FirebaseMessagingService
com.google.firebase.iid.Store$Token: long timestamp
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.messaging.FirebaseMessagingService: void handleMessageIntent(android.content.Intent)
io.flutter.plugin.editing.TextInputPlugin$2: TextInputPlugin$2(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[])
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String icon
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_gradientRadius
io.flutter.view.FlutterView: void removeFirstFrameListener(io.flutter.view.FlutterView$FirstFrameListener)
com.google.firebase.messaging.FirebaseMessaging$$Lambda$0: com.google.firebase.iid.FirebaseInstanceId arg$2
com.google.firebase.FirebaseError: int errorCode
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
com.google.firebase.emulators.EmulatedServiceSettings: int port
com.google.firebase.encoders.FieldDescriptor: java.lang.annotation.Annotation getProperty(java.lang.Class)
io.flutter.embedding.android.MotionEventTracker: android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzs)
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken(io.flutter.embedding.engine.dart.DartMessenger$1)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel getKeyEventChannel()
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_tileMode
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.plugin.platform.PlatformViewsController: void flushAllViews()
io.flutter.plugins.sharedpreferences.R$id: int text2
com.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String toUserAgent(java.util.Set)
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_normal_pressed
com.google.firebase.installations.remote.InstallationResponse$Builder
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: java.util.concurrent.atomic.AtomicBoolean isCallbackDispatcherReady
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String LOCATION_ID
com.google.firebase.datatransport.R$drawable: R$drawable()
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String getTag(com.google.firebase.messaging.NotificationParams)
io.flutter.plugins.connectivity.R$id: int notification_main_column
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView platformView
io.flutter.embedding.engine.systemchannels.SystemChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_6
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: com.google.firebase.events.Publisher delegate
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.messaging.FirebaseMessagingRegistrar$DevNullTransport: void send(com.google.android.datatransport.Event)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader)
com.google.firebase.FirebaseApp: java.lang.String name
com.google.firebase.installations.AutoValue_InstallationTokenResult: java.lang.String toString()
com.google.firebase.messaging.CommonNotificationBuilder: android.net.Uri getSound(java.lang.String,com.google.firebase.messaging.NotificationParams,android.content.res.Resources)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Path getPath()
io.flutter.view.FlutterView: void runFromBundle(io.flutter.view.FlutterRunArguments)
com.google.android.gms.internal.measurement.zzds
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver$2: ConnectivityBroadcastReceiver$2(io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver)
io.flutter.view.AccessibilityBridge: java.lang.Integer lastLeftFrameInset
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List customAccessibilityActions
com.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
androidx.fragment.app.Fragment: void callStartTransitionListener()
io.flutter.embedding.android.KeyChannelResponder: KeyChannelResponder(io.flutter.embedding.engine.systemchannels.KeyEventChannel)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String AD_SOURCE
io.flutter.plugin.common.ErrorLogResult: int level
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.google.firebase.R$drawable: int notification_bg_normal
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task subscribeToTopic(java.util.Map)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.android.FlutterImageView$SurfaceKind kind
com.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: com.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1 instance
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
io.flutter.view.FlutterView: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void rescheduleNotifications(android.content.Context)
com.google.firebase.platforminfo.AutoValue_LibraryVersion: AutoValue_LibraryVersion(java.lang.String,java.lang.String)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context getApplicationContext()
com.google.firebase.analytics.ktx.ParametersBuilder: android.os.Bundle getBundle()
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: void logEvent(java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_0
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_LIGHTS
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.KeyboardManager,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo)
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_25
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
androidx.core.content.ContextCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String NORMAL_THEME_META_DATA_KEY
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String fisError
com.google.firebase.installations.R$color
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.google.firebase.components.Component$$Lambda$1
com.google.firebase.installations.R$id: int action_container
androidx.core.app.JobIntentService: void processorFinished()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] bodyLocArgs
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_8
io.flutter.plugins.firebase.messaging.R$styleable
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageId(android.content.Intent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.urllauncher.R$styleable: R$styleable()
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener
com.google.firebase.analytics.zzc: java.lang.Object zzr(int)
io.flutter.plugins.firebase.core.R$dimen: int notification_media_narrow_margin
com.google.firebase.installations.R$dimen: int compat_control_corner_material
com.google.firebase.iid.Registrar$FIIDInternalAdapter: java.lang.String getToken()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECKED
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: android.view.KeyEvent event
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
io.flutter.app.FlutterFragmentActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void startBackgroundIsolate(long,io.flutter.embedding.engine.FlutterShellArgs)
io.flutter.embedding.android.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
com.google.firebase.analytics.ktx.ConsentBuilder: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus getAnalyticsStorage()
com.google.firebase.messaging.FirebaseMessagingRegistrar$DevNullTransport
io.flutter.view.AccessibilityBridge: void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean,android.net.Uri)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: void reply(java.nio.ByteBuffer)
org.threeten.bp.Duration: java.lang.Object readResolve()
com.google.firebase.ktx.R$dimen: int compat_notification_large_icon_max_width
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String VIEW_SEARCH_RESULTS
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.plugins.connectivity.R$dimen: int notification_small_icon_background_padding
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.firebase.R$dimen: R$dimen()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.Time repeatTime
com.google.firebase.messaging.FirelogAnalyticsEvent: FirelogAnalyticsEvent(java.lang.String,android.content.Intent)
io.flutter.embedding.android.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_0
androidx.fragment.app.Fragment: boolean isStateSaved()
io.flutter.plugins.sharedpreferences.BuildConfig: boolean DEBUG
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzv)
com.google.firebase.messaging.TopicsSubscriber$$Lambda$0: android.content.Context arg$1
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.plugin.common.StandardMessageCodec: void writeChar(java.io.ByteArrayOutputStream,int)
io.flutter.embedding.android.FlutterActivity: void onDestroy()
com.google.firebase.installations.remote.InstallationResponse: java.lang.String getFid()
com.google.firebase.installations.interop.R$attr: int fontProviderQuery
com.google.firebase.analytics.ktx.AnalyticsKt: com.google.firebase.analytics.FirebaseAnalytics getANALYTICS()
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewInsetLeft
io.flutter.plugin.platform.PlatformViewsController$1: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
com.google.firebase.ktx.R$id: int title
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_DATE_TIME
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatSummaryText
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object[] newArray(int)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeRequestBodyToOutputStream(java.net.URLConnection,byte[])
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderQuery
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: NotificationChannelGroupDetails()
io.flutter.plugin.common.PluginRegistry: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
com.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()
com.google.firebase.ktx.R$drawable: int notification_bg_low_normal
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_COLLAPSE_KEY
io.flutter.app.FlutterActivityDelegate$1$1: void onAnimationEnd(android.animation.Animator)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: java.util.Set onModeChangeListeners
io.flutter.plugins.urllauncher.R$attr: int fontWeight
io.flutter.plugins.pathprovider.R$style: int Widget_Compat_NotificationActionContainer
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String tooltip
com.google.firebase.datatransport.R$layout: int notification_template_custom_big
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.firebase.analytics.FirebaseAnalytics: void setUserId(java.lang.String)
io.flutter.app.FlutterActivityDelegate: void onPause()
io.flutter.plugins.sharedpreferences.R$dimen: int notification_right_side_padding_top
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_27
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.firebase.components.OptionalProvider$$Lambda$5
io.flutter.plugins.urllauncher.R$id: int accessibility_action_clickable_span
com.google.firebase.installations.AutoValue_InstallationTokenResult: long tokenCreationTimestamp
com.google.firebase.ktx.R$styleable
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
io.flutter.plugins.firebase.messaging.R: R()
androidx.fragment.app.Fragment: boolean mRemoving
io.flutter.app.FlutterActivityDelegate: android.view.View createLaunchView()
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry
com.google.firebase.R$integer: R$integer()
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $VALUES
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi
io.flutter.plugins.pathprovider.R$id: int tag_accessibility_pane_title
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.internal.measurement.zzbr zzb
io.flutter.plugins.firebase.messaging.R$drawable: int googleg_disabled_color_18
com.google.firebase.messaging.TopicsStore: boolean removeTopicOperation(com.google.firebase.messaging.TopicOperation)
io.flutter.embedding.engine.systemchannels.NavigationChannel: java.lang.String TAG
io.flutter.plugins.pathprovider.R$id: int tag_accessibility_clickable_spans
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
io.flutter.view.AccessibilityBridge: int SCROLLABLE_ACTIONS
io.flutter.plugins.urllauncher.R$id: int actions
io.flutter.plugins.pathprovider.R$attr: int fontProviderCerts
com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor: java.lang.String extract(java.lang.Object)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status UNAVAILABLE
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String DESTINATION
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.datatransport.R$dimen: int notification_large_icon_height
com.google.firebase.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String VIEW_ITEM_LIST
com.google.firebase.heartbeatinfo.AutoValue_SdkHeartBeatResult: long millis
com.google.firebase.iid.FirebaseInstanceId: java.lang.String blockingGetMasterToken()
androidx.fragment.app.Fragment: boolean mRetainInstance
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_10
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.embedding.android.FlutterImageView)
com.google.firebase.messaging.RemoteMessage: int getMessagePriority(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int flags
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String RAW_DATA
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CONTENT
com.google.firebase.ktx.R$string: int common_google_play_services_unknown_issue
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String tag
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$2: FcmBroadcastProcessor$$Lambda$2(android.content.Context,android.content.Intent)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_main_column_padding_top
io.flutter.plugins.firebase.core.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$0
io.flutter.view.FlutterView$3: FlutterView$3(io.flutter.view.FlutterView,io.flutter.plugin.platform.PlatformPlugin)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void success(java.lang.Object)
io.flutter.plugins.connectivity.R$color: int notification_action_color_filter
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.BinaryMessenger messenger()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel()
io.flutter.app.FlutterActivityEvents: void onUserLeaveHint()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_STARTUP
io.flutter.plugins.firebase.messaging.R$attr: int fontProviderCerts
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void onMoveToBackground()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader createImageReader(int,int)
io.flutter.embedding.android.FlutterActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.provider.FirebaseInitProvider: boolean onCreate()
com.google.firebase.messaging.ImageDownload: java.io.InputStream connectionInputStream
com.google.firebase.components.OptionalProvider$$Lambda$5: com.google.firebase.components.OptionalProvider$$Lambda$5 instance
com.google.firebase.messaging.NotificationParams: java.lang.String getSoundResourceName()
io.flutter.plugin.editing.ListenableEditingState: void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_30
io.flutter.plugin.editing.ListenableEditingState: int getComposingStart()
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer getVisibility()
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_29
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String SENDER_ID
com.google.firebase.installations.interop.R$drawable: int notification_icon_background
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiDisplayed()
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance()
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzv
com.google.firebase.components.Component$$Lambda$2: java.lang.Object arg$1
com.google.firebase.datatransport.R$dimen: int compat_button_padding_horizontal_material
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToService(android.app.Service,androidx.lifecycle.Lifecycle,boolean)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: io.flutter.plugins.urllauncher.UrlLauncher urlLauncher
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long timeoutAfter
io.flutter.view.FlutterView: void autofill(android.util.SparseArray)
com.google.firebase.R$styleable: int FontFamily_fontProviderPackage
io.flutter.plugins.pathprovider.R$id: int notification_background
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$3: java.lang.String arg$2
io.flutter.plugins.firebase.messaging.R$styleable: R$styleable()
com.google.firebase.messaging.TopicsSubscriber: boolean performTopicOperation(com.google.firebase.messaging.TopicOperation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.android.gms.internal.measurement.zzdu: int zza
io.flutter.BuildConfig: boolean DEBUG
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String engineCachesPath
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView)
com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setFid(java.lang.String)
com.google.firebase.messaging.Constants$FirelogAnalytics$MessageType: java.lang.String DATA_MESSAGE
com.google.android.gms.internal.measurement.zzcf: int zze
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: PlatformChannel$1(io.flutter.embedding.engine.systemchannels.PlatformChannel)
com.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.TopicsSubscriber lambda$createInstance$0$TopicsSubscriber(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.ktx.BuildConfig: int VERSION_CODE
com.google.firebase.installations.R$integer: int status_bar_notification_info_maxnum
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.plugin.common.MethodChannel,boolean)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.firebase.installations.interop.R$string: R$string()
io.flutter.embedding.engine.loader.FlutterLoader$1
io.flutter.plugin.platform.PlatformViewRegistryImpl: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
io.flutter.embedding.android.KeyChannelResponder
com.google.firebase.iid.WithinAppServiceBinder$$Lambda$0: void onComplete(com.google.android.gms.tasks.Task)
com.google.firebase.R$dimen: int notification_subtext_size
com.google.firebase.installations.R$dimen: int notification_content_margin_start
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.firebase.installations.interop.BuildConfig: BuildConfig()
com.google.firebase.components.ComponentRuntime$$Lambda$2: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.components.ComponentRegistrar)
com.google.android.gms.internal.measurement.zzcn: int zzh
io.flutter.plugins.firebase.messaging.R$id: int info
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance()
io.flutter.embedding.engine.systemchannels.SettingsChannel: SettingsChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: boolean cannotBeInline(java.lang.Object)
io.flutter.plugins.urllauncher.R$id
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String TAG
androidx.fragment.app.Fragment: int mTargetRequestCode
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: io.flutter.view.FlutterCallbackInformation callbackHandle
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
com.google.firebase.installations.CrossProcessLock: void releaseAndClose()
io.flutter.plugins.firebase.messaging.R$dimen: int notification_action_icon_size
com.google.firebase.installations.R$color: int notification_icon_bg_color
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.google.android.gms.internal.measurement.zzcf: int zza
io.flutter.embedding.android.FlutterSurfaceView$2
io.flutter.embedding.engine.plugins.service.ServiceAware: void onAttachedToService(io.flutter.embedding.engine.plugins.service.ServicePluginBinding)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void requestExistingInputState()
com.google.firebase.analytics.FirebaseAnalytics$UserProperty: FirebaseAnalytics$UserProperty()
androidx.fragment.app.Fragment: void onResume()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionStart
io.flutter.plugin.localization.LocalizationPlugin: LocalizationPlugin(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void startListening(io.flutter.plugin.common.BinaryMessenger)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String METHOD_CHANNEL
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void onInitialized()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: java.lang.String getStackTrace(java.lang.Exception)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean,boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: android.content.ContentProvider contentProvider
androidx.fragment.app.Fragment: int STARTED
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
com.google.firebase.components.Lazy: boolean isInitialized()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set newIntentListeners
io.flutter.embedding.android.FlutterFragment: boolean isFlutterEngineInjected()
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
io.flutter.plugins.urllauncher.UrlLauncher: void closeWebView()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] $VALUES
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.concurrent.ExecutorService executor
com.google.android.gms.internal.measurement.zzeg: com.google.android.gms.internal.measurement.zzhz zzf
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String GENERATE_LEAD
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String EXTRA_REMOTE_MESSAGE
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_USE_TEST_FONTS
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: DefaultHeartBeatInfo$$Lambda$4()
com.google.firebase.installations.R$dimen: int compat_button_padding_vertical_material
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceDestroyed(android.view.SurfaceHolder)
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMethodCodec INSTANCE
com.google.firebase.FirebaseOptions$Builder: FirebaseOptions$Builder(com.google.firebase.FirebaseOptions)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
io.flutter.embedding.android.FlutterFragmentActivity: void onBackPressed()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_START_PAUSED
io.flutter.plugins.connectivity.R$id: int right_icon
io.flutter.embedding.android.FlutterFragment: void onPostResume()
org.threeten.bp.chrono.Chronology: java.lang.Object writeReplace()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldAutomaticallyHandleOnBackPressed(boolean)
com.google.firebase.DataCollectionDefaultChange: boolean enabled
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromBroadcastReceiver()
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String libraryName
io.flutter.plugin.common.PluginRegistry$Registrar: java.lang.String lookupKeyForAsset(java.lang.String)
io.flutter.view.FlutterView$FirstFrameListener
com.google.firebase.components.EventBus
com.google.firebase.components.Component: java.lang.String toString()
com.google.firebase.iid.WithinAppServiceConnection: android.content.Intent connectionIntent
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String HOUR
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.embedding.engine.FlutterJNI
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$3: java.util.concurrent.Callable lambdaFactory$(com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo,java.lang.String)
com.google.firebase.datatransport.R$dimen: int compat_notification_large_icon_max_width
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.URL getFullyQualifiedRequestUri(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToService()
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_25
com.google.firebase.datatransport.R$styleable: int GradientColor_android_tileMode
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource FilePath
io.flutter.plugins.sharedpreferences.R$style: R$style()
com.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)
com.google.firebase.messaging.EnhancedIntentService$$Lambda$0
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityDisabled()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readChannelInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForAction(int)
io.flutter.view.AccessibilityBridge: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.plugins.urllauncher.R$id: int forever
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_22
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
com.google.firebase.installations.BuildConfig: java.lang.String APPLICATION_ID
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.KeyboardManager keyboardManager
org.threeten.bp.ZoneRegion
com.google.firebase.FirebaseOptions: java.lang.String getStorageBucket()
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View val$mutatorView
io.flutter.plugins.sharedpreferences.R$styleable: int[] GradientColor
io.flutter.plugins.firebase.messaging.R$dimen: int compat_button_inset_vertical_material
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: java.util.Map getExceptionDetails(java.lang.Exception)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
androidx.core.app.JobIntentService: void onDestroy()
io.flutter.plugin.common.EventChannel$StreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
io.flutter.app.FlutterActivityDelegate: android.app.Activity activity
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.flutter.plugins.urllauncher.R$layout: int notification_template_part_time
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder destroyEngineWithActivity(boolean)
io.flutter.plugin.editing.TextInputPlugin: android.view.View mView
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String summaryText
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_text_disabled
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0
com.google.firebase.analytics.connector.zza: java.util.concurrent.Executor zza
androidx.media.AudioAttributesImplApi21Parcelizer
com.google.firebase.installations.interop.R$attr: int alpha
io.flutter.app.FlutterFragmentActivity: void onPostResume()
io.flutter.embedding.android.FlutterSurfaceView: void access$400(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener
io.flutter.plugins.pathprovider.R$styleable: int Capability_queryPatterns
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean access$100(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String,int)
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingRight
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue()
io.flutter.plugins.connectivity.R$id: int line1
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder handleDeeplinking(java.lang.Boolean)
androidx.annotation.Keep
io.flutter.plugins.urllauncher.R$drawable
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
com.google.firebase.internal.DataCollectionConfigStorage
com.google.firebase.components.ComponentContainer
com.google.firebase.datatransport.R$styleable: int FontFamily_fontProviderCerts
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamily_fontProviderPackage
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Daily
io.flutter.plugins.firebase.core.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.google.firebase.encoders.FieldDescriptor: com.google.firebase.encoders.FieldDescriptor of(java.lang.String)
com.google.firebase.messaging.SendException: int ERROR_UNKNOWN
com.google.firebase.datatransport.TransportRegistrar$$Lambda$1
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalWidth
org.threeten.bp.Instant
io.flutter.embedding.engine.dart.DartExecutor: void executeDartCallback(io.flutter.embedding.engine.dart.DartExecutor$DartCallback)
com.google.android.gms.internal.measurement.zzdf: double zzi
com.google.firebase.analytics.connector.internal.zzf: zzf(com.google.firebase.analytics.connector.internal.zzg)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
io.flutter.embedding.android.FlutterFragmentActivity: android.view.View createFragmentContainer()
io.flutter.plugins.pathprovider.R$dimen: int compat_notification_large_icon_max_height
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent getLaunchIntent(android.content.Context)
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar
org.threeten.bp.chrono.MinguoChronology
androidx.fragment.app.Fragment: void performDestroy()
com.google.firebase.messaging.EnhancedIntentService$$Lambda$2
com.google.firebase.installations.InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult build()
io.flutter.plugin.common.JSONMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_STARTUP
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String KEY
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldHandleDeeplinking()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
com.google.firebase.FirebaseApp: java.util.List backgroundStateChangeListeners
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus ATTEMPT_MIGRATION
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_BIG_PICTURE_ERROR_CODE
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
com.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar gamesSDKRegistrar
io.flutter.plugins.pathprovider.R$id: int notification_main_column_container
com.google.firebase.R$styleable: int[] GradientColorItem
io.flutter.embedding.android.FlutterFragmentActivity: android.content.Intent createDefaultIntent(android.content.Context)
com.google.firebase.provider.FirebaseInitProvider: java.lang.String getType(android.net.Uri)
com.google.firebase.encoders.FieldDescriptor: java.util.Map properties
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalHeight
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: java.lang.String uri
com.google.firebase.encoders.json.JsonDataEncoderBuilder
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String DELIVERED_PRIORITY
com.google.firebase.R$id: int text2
com.google.firebase.iid.Metadata
com.google.firebase.ktx.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.flutter.embedding.engine.FlutterShellArgs
io.flutter.plugins.sharedpreferences.R$color: int androidx_core_secondary_text_default_material_light
com.google.firebase.messaging.TopicsSyncTask: com.google.firebase.messaging.TopicsSubscriber access$200(com.google.firebase.messaging.TopicsSyncTask)
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String)
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String SOUND
com.google.firebase.datatransport.R$string
io.flutter.plugin.platform.PlatformViewsController: void detachFromView()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4802(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
io.flutter.view.FlutterView: void access$000(io.flutter.view.FlutterView,boolean,boolean)
com.google.firebase.iid.ServiceStarter: java.lang.Boolean hasWakeLockPermission
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
com.google.firebase.messaging.SharedPreferencesQueue: void initQueue()
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.plugins.firebase.messaging.R$styleable: int[] ColorStateListItem
io.flutter.view.AccessibilityBridge: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BOT
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: android.app.Activity getActivity()
io.flutter.plugin.editing.TextInputPlugin$1: void setPlatformViewClient(int,boolean)
com.google.android.gms.internal.measurement.zzkp: com.google.android.gms.internal.measurement.zzkp[] values()
com.google.firebase.installations.local.PersistedInstallation
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setTimeoutAfter(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.android.FlutterTextureView: void connectSurfaceToRenderer()
com.google.firebase.messaging.Constants$ScionAnalytics$MessageType: java.lang.String DISPLAY_NOTIFICATION
com.google.firebase.iid.Store$Token: java.lang.String encode(java.lang.String,java.lang.String,long)
com.google.firebase.installations.local.IidStore: java.lang.String[] ALLOWABLE_SCOPES
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_endX
io.flutter.embedding.android.FlutterSurfaceView: void detachFromRenderer()
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean hideExpandedLargeIcon
io.flutter.embedding.engine.dart.DartMessenger
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CREATIVE_SLOT
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder alwaysEager()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: android.content.SharedPreferences$Editor val$editor
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence oldText
io.flutter.plugin.editing.TextEditingDelta: java.lang.String TAG
com.google.firebase.ktx.R$drawable: int notification_bg
com.google.firebase.installations.remote.InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$Builder toBuilder()
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_low_pressed
com.google.firebase.ktx.R$layout: int notification_template_icon_group
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.firebase.messaging.TopicsSubscriber: boolean hasPendingOperation()
io.flutter.plugins.sharedpreferences.R$id: int tag_accessibility_pane_title
com.google.firebase.installations.interop.R$dimen: int compat_button_padding_vertical_material
com.google.firebase.messaging.FirebaseMessaging$$Lambda$5: com.google.android.gms.tasks.Task then(java.lang.Object)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: FlutterFirebaseCorePlugin()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$1
com.google.firebase.installations.interop.R$id: int notification_main_column
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource valueOf(java.lang.String)
com.google.firebase.iid.Metadata: int getIidImplementation()
io.flutter.plugin.common.BinaryCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_LAUNCHED_APP
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource DrawableResource
io.flutter.app.FlutterActivityEvents: void onPostResume()
io.flutter.plugins.firebase.messaging.R$integer: int google_play_services_version
io.flutter.embedding.android.FlutterView: void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: PlatformChannel$SoundType(java.lang.String,int,java.lang.String)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl
com.google.firebase.messaging.SendException: int ERROR_TTL_EXCEEDED
com.google.firebase.datatransport.R$id: int chronometer
io.flutter.embedding.android.FlutterActivity: void setDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory
io.flutter.plugins.firebase.messaging.PluginRegistrantException
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.firebase.installations.remote.RequestLimiter: void resetBackoffStrategy()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputAction
com.google.firebase.ktx.R$id: R$id()
com.google.firebase.installations.interop.R$attr: int fontProviderAuthority
com.google.firebase.installations.FirebaseInstallations$$Lambda$2: void run()
io.flutter.plugins.firebase.core.R$id: int right_side
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: android.content.Context arg$1
io.flutter.plugins.sharedpreferences.R$id: int action_divider
com.google.firebase.ktx.R$string: int status_bar_notification_info_overflow
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: float screenDensity
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin)
com.google.firebase.datatransport.R$id: int info
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: com.google.firebase.messaging.FirebaseMessaging getFirebaseMessagingForArguments(java.util.Map)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: boolean ignoreNullValues
io.flutter.view.FlutterView$ZeroSides
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_fontStyle
com.google.firebase.iid.Store: void saveToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.messaging.SharedPreferencesQueue: void bridge$lambda$0$SharedPreferencesQueue()
com.google.android.gms.internal.measurement.zzcp: boolean zzl
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean)
io.flutter.embedding.android.FlutterSplashView
com.google.firebase.messaging.NotificationParams: java.lang.String userFriendlyKey(java.lang.String)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void setUserCallbackHandle(long)
androidx.fragment.app.FragmentActivity: boolean mStopped
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String mDataDirPath
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_12
com.google.firebase.installations.interop.R$styleable: int FontFamily_fontProviderFetchTimeout
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long when
io.flutter.plugins.sharedpreferences.R$styleable: int[] FontFamily
io.flutter.plugins.connectivity.BuildConfig: BuildConfig()
io.flutter.embedding.android.FlutterFragment: void onStop()
com.google.firebase.R$layout: int notification_template_icon_group
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setApiKey(java.lang.String)
com.google.firebase.FirebaseOptions: java.lang.String getApplicationId()
io.flutter.plugin.platform.VirtualDisplayController: void dispatchTouchEvent(android.view.MotionEvent)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL
org.threeten.bp.Ser
com.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$2(android.content.Context)
io.flutter.plugin.platform.PlatformViewsController: int access$500(io.flutter.plugin.platform.PlatformViewsController,double)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING
io.flutter.view.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenTransitionNeededNow()
com.google.firebase.ktx.R$style: R$style()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
androidx.fragment.app.Fragment: boolean mHasMenu
io.flutter.util.Predicate: boolean test(java.lang.Object)
com.google.firebase.FirebaseCommonRegistrar: java.lang.String MIN_SDK
com.google.firebase.datatransport.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode access$6600(io.flutter.view.AccessibilityBridge,int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
com.google.firebase.encoders.Encoder
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel this$0
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] values()
com.google.android.gms.internal.measurement.zzcp: java.lang.String zzf
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setTokenCreationEpochInSecs(long)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LINES
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor start()
io.flutter.plugins.firebase.core.R$color: int notification_icon_bg_color
com.google.firebase.installations.Utils: com.google.firebase.installations.time.Clock clock
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency valueOf(java.lang.String)
com.google.firebase.messaging.SendException: int parseErrorCode(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT_TITLE
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.installations.FirebaseInstallationsException: com.google.firebase.installations.FirebaseInstallationsException$Status status
com.google.firebase.messaging.SharedPreferencesQueue$$Lambda$0: void run()
com.google.firebase.components.ComponentRuntime: java.lang.Iterable toProviders(java.lang.Iterable)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set viewDestroyListeners
com.google.firebase.installations.CrossProcessLock: com.google.firebase.installations.CrossProcessLock acquire(android.content.Context,java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: byte[] readBytes(java.nio.ByteBuffer)
io.flutter.plugins.connectivity.R$styleable: int FontFamily_fontProviderQuery
com.google.firebase.iid.WakeLockHolder: java.lang.Object syncObject
io.flutter.plugins.firebase.core.R$styleable: int ColorStateListItem_alpha
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: int HEART_BEAT_COUNT_LIMIT
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.flutter.plugins.sharedpreferences.R$dimen: int compat_notification_large_icon_max_width
io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback: void onKeyEventHandled(java.lang.Boolean)
com.google.firebase.R$integer: int status_bar_notification_info_maxnum
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void onBackgroundStateChanged(boolean)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean frameworkHasRequestedData
io.flutter.view.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.flutter.plugins.urllauncher.WebViewActivity$1: WebViewActivity$1(io.flutter.plugins.urllauncher.WebViewActivity)
io.flutter.embedding.android.FlutterView$2: void onFlutterUiNoLongerDisplayed()
androidx.activity.ComponentActivity: int mContentLayoutId
com.google.firebase.installations.FirebaseInstallations$$Lambda$3: java.util.concurrent.Callable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations)
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedPublishedEvents
org.threeten.bp.chrono.JapaneseEra
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES
io.flutter.embedding.android.FlutterImageView$1
io.flutter.plugins.firebase.messaging.R$dimen: int notification_large_icon_width
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewInsetBottom
com.google.firebase.iid.WakeLockHolder: void setAsWakefulIntent(android.content.Intent,boolean)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque
io.flutter.embedding.engine.FlutterEngine$1
io.flutter.view.AccessibilityBridge$3: AccessibilityBridge$3(io.flutter.view.AccessibilityBridge,android.os.Handler)
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification_Info
io.flutter.embedding.engine.plugins.PluginRegistry
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_font
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getRefreshToken()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateNextNotificationTrigger(long,long)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onDetachedFromActivityForConfigChanges()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatContentTitle
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_13
com.google.firebase.analytics.FirebaseAnalytics: FirebaseAnalytics(com.google.android.gms.internal.measurement.zzbr)
io.flutter.embedding.android.FlutterView$3: java.lang.Runnable val$onDone
io.flutter.embedding.android.SplashScreen: void transitionToFlutter(java.lang.Runnable)
io.flutter.embedding.android.MotionEventTracker$MotionEventId
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: boolean ignoreNullValues
com.google.firebase.messaging.EnhancedIntentService$$Lambda$0: com.google.firebase.messaging.EnhancedIntentService arg$1
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection fromInt(int)
com.google.firebase.messaging.CommonNotificationBuilder: boolean shouldUploadMetrics(com.google.firebase.messaging.NotificationParams)
io.flutter.plugins.pathprovider.R$attr: int alpha
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder setInstantiation(int)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.DataEncoder build()
io.flutter.plugins.connectivity.R$styleable: int[] GradientColor
com.google.firebase.messaging.FirelogAnalyticsEvent: android.content.Intent getIntent()
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.lang.Class discoveryService
com.google.firebase.iid.WithinAppServiceConnection: com.google.firebase.iid.WithinAppServiceBinder binder
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1
io.flutter.plugin.platform.PlatformViewsController: android.view.View access$900(io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.datatransport.R$integer: R$integer()
io.flutter.plugin.platform.VirtualDisplayController$1: android.view.View val$embeddedView
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set userLeaveHintListeners
com.google.firebase.installations.local.PersistedInstallation: void clearForTesting()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VD_PLATFORM_VIEW
io.flutter.plugin.localization.LocalizationPlugin$1: LocalizationPlugin$1(io.flutter.plugin.localization.LocalizationPlugin)
com.google.firebase.installations.local.IidStore: java.lang.String readIid()
io.flutter.plugin.platform.PlatformPlugin: void access$800(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugins.firebase.messaging.R$id: int tag_accessibility_pane_title
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: ScheduledNotificationRepeatFrequency(java.lang.String,int)
com.google.firebase.iid.FcmBroadcastProcessor: FcmBroadcastProcessor(android.content.Context,java.util.concurrent.ExecutorService)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.google.firebase.R$id: int right_side
com.google.firebase.R$attr: int fontWeight
io.flutter.app.FlutterPluginRegistry: io.flutter.plugin.platform.PlatformViewsController mPlatformViewsController
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onDetachedFromActivity()
androidx.fragment.app.FragmentActivity: java.lang.String REQUEST_FRAGMENT_WHO_TAG
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_24
io.flutter.plugin.platform.PlatformView
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout
com.google.firebase.FirebaseApp: void setDataCollectionDefaultEnabled(boolean)
com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever
com.google.firebase.installations.remote.AutoValue_InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$ResponseCode getResponseCode()
io.flutter.app.FlutterPluginRegistry: FlutterPluginRegistry(io.flutter.view.FlutterNativeView,android.content.Context)
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
com.google.firebase.analytics.connector.internal.zzg: com.google.firebase.analytics.connector.internal.zzf zzc
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readSoundInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.embedding.engine.dart.DartExecutor,boolean)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: SharedPreferencesPlugin()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.firebase.components.Component$Builder: int type
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.String backgroundMode
io.flutter.plugin.mouse.MouseCursorPlugin: java.util.HashMap systemCursorConstants
io.flutter.embedding.engine.dart.DartExecutor: void onDetachedFromJNI()
io.flutter.plugins.connectivity.ConnectivityPlugin: io.flutter.plugin.common.EventChannel eventChannel
com.google.firebase.installations.R$id: int tag_unhandled_key_event_manager
io.flutter.plugin.editing.InputConnectionAdaptor
com.google.firebase.internal.DataCollectionConfigStorage: void updateDataCollectionDefaultEnabled(boolean)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_26
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.view.AccessibilityBridge$1: void onTooltip(java.lang.String)
com.google.firebase.R$attr: int fontProviderCerts
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeat(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface
io.flutter.embedding.engine.renderer.FlutterRenderer: void setAccessibilityFeatures(int)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationEnd(android.animation.Animator)
io.flutter.embedding.android.FlutterSplashView: void access$200(io.flutter.embedding.android.FlutterSplashView)
com.google.android.gms.internal.measurement.zzcf: java.lang.String zzf
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsDetached()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding
io.flutter.plugin.platform.PlatformViewsController$1$1: io.flutter.plugin.platform.VirtualDisplayController val$vdController
com.google.firebase.FirebaseOptions: java.lang.String databaseUrl
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_normal_pressed
com.google.firebase.iid.Store: long getCreationTimeFromSharedPreferences(java.lang.String)
com.google.firebase.installations.local.PersistedInstallationEntry$Builder
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate
io.flutter.embedding.android.FlutterFragmentActivity: android.graphics.drawable.Drawable getSplashScreenFromManifest()
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader$InitResult call()
io.flutter.embedding.android.FlutterSplashView: java.lang.Runnable onTransitionComplete
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
io.flutter.embedding.android.FlutterFragmentActivity: int FRAGMENT_CONTAINER_ID
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long timeToLive
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: boolean access$1302(io.flutter.plugin.platform.PlatformViewsController,boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: java.lang.String label
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode AUTH_ERROR
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.Class activityClass
com.google.firebase.installations.local.PersistedInstallation: java.io.File dataFile
com.google.firebase.components.CycleDetector$ComponentNode: boolean isRoot()
io.flutter.plugins.connectivity.R$layout: int notification_template_part_time
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String title
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.TokenResult readGenerateAuthTokenResponse(java.net.HttpURLConnection)
com.google.android.gms.internal.measurement.zzdf: float zzh
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra[] values()
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
com.google.firebase.components.ComponentRuntime$$Lambda$4: java.lang.Runnable lambdaFactory$(com.google.firebase.components.LazySet,com.google.firebase.inject.Provider)
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener
com.google.firebase.iid.Store: void checkForRestore(java.lang.String)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_BUTTON
com.google.firebase.analytics.FirebaseAnalytics$Param: FirebaseAnalytics$Param()
io.flutter.embedding.engine.FlutterJNI$Factory
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence getDeltaText()
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_text_dark
io.flutter.plugin.editing.TextInputPlugin$2: boolean val$isAffine
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean usesChronometer
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: void reply(java.nio.ByteBuffer)
io.flutter.plugin.common.MethodChannel: java.lang.String TAG
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIOverlays(java.util.List)
com.google.firebase.messaging.FirebaseMessagingService: boolean handleIntentOnMainThread(android.content.Intent)
io.flutter.plugins.firebase.messaging.R$id: int icon_group
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$1: FirebaseMessagingRegistrar$$Lambda$1()
io.flutter.app.FlutterPluginRegistry: boolean hasPlugin(java.lang.String)
io.flutter.embedding.android.FlutterActivityLaunchConfigs: FlutterActivityLaunchConfigs()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfWeekAndTime
com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: void registerReceiver()
io.flutter.plugins.urllauncher.R$id: int notification_main_column
com.google.firebase.installations.R$drawable
com.google.firebase.messaging.FirebaseMessaging: android.content.Context context
com.google.firebase.emulators.EmulatedServiceSettings: java.lang.String getHost()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String subText
com.google.firebase.datatransport.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int)
androidx.activity.ComponentActivity$3
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_MESSAGE_TYPE
com.google.firebase.datatransport.R$style: R$style()
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean onlyAlertOnce
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getUseDeviceTime(android.content.Intent)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: TextInputChannel$InputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean showBadge
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.flutter.FlutterInjector
io.flutter.plugins.urllauncher.R$attr: int fontProviderFetchStrategy
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String value
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousValue
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList extractBatchTextEditingDeltas()
io.flutter.plugins.connectivity.R$dimen: int notification_right_side_padding_top
io.flutter.plugins.connectivity.R$drawable: int notification_bg_low_normal
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void release()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
io.flutter.embedding.android.FlutterFragment: void onFlutterUiDisplayed()
io.flutter.plugin.common.MessageCodec
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: AccessibilityChannel$1(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
io.flutter.plugins.firebase.messaging.R$id: int action_container
com.google.firebase.iid.InstanceIdResult
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_OBSERVATORY_PORT
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener: void onMoveToForeground()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_17
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DRAWABLE
io.flutter.embedding.android.KeyChannelResponder: int combiningCharacter
com.google.firebase.messaging.DisplayNotification: DisplayNotification(android.content.Context,com.google.firebase.messaging.NotificationParams,java.util.concurrent.Executor)
com.google.firebase.analytics.connector.internal.zzg: void zzc()
io.flutter.plugins.firebase.messaging.R$id: int standard
com.google.firebase.messaging.FirelogAnalyticsEvent
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0
com.google.firebase.installations.R$styleable: int GradientColorItem_android_offset
io.flutter.plugin.platform.PlatformViewsController: void onDetachedFromJNI()
com.google.firebase.analytics.FirebaseAnalytics: void setDefaultEventParameters(android.os.Bundle)
com.google.firebase.datatransport.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int unsetValue
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.sharedpreferences.R$id: int notification_main_column_container
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Context applicationContext
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: int zza
com.google.firebase.components.OptionalProvider$$Lambda$1: void handle(com.google.firebase.inject.Provider)
io.flutter.app.FlutterActivityDelegate
com.google.firebase.components.BuildConfig
com.google.firebase.components.Component: int instantiation
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context,android.view.inputmethod.InputMethodManager)
com.google.firebase.components.Component: java.util.Set getDependencies()
com.dexterous.flutterlocalnotifications.BitmapSource
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.firebase.messaging.EnhancedIntentService
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides RIGHT
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void endOfStream()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_13
com.google.firebase.installations.InstallationTokenResult: InstallationTokenResult()
com.google.firebase.messaging.Constants$MessageTypes: java.lang.String MESSAGE
io.flutter.plugin.common.BinaryCodec: io.flutter.plugin.common.BinaryCodec INSTANCE_DIRECT
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.lang.String TAG
com.google.firebase.messaging.RemoteMessage$Builder: java.util.Map data
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String TTL
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: void release()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.flutter.BuildConfig: boolean RELEASE
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldDestroyEngineWithHost()
com.google.firebase.datatransport.TransportRegistrar$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor this$0
io.flutter.plugins.pathprovider.R$styleable: int ColorStateListItem_android_alpha
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String ID
io.flutter.plugin.common.PluginRegistry$ViewDestroyListener: boolean onViewDestroy(io.flutter.view.FlutterNativeView)
com.google.firebase.analytics.connector.zzb: zzb()
io.flutter.plugins.firebase.messaging.R$style: int Widget_Compat_NotificationActionText
com.google.firebase.ktx.R$id: int tag_transition_group
io.flutter.view.FlutterView: boolean didRenderFirstFrame
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String icon
io.flutter.embedding.android.FlutterSurfaceView: boolean renderTransparently
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean autoCancel
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DEFAULT_KERNEL_BLOB
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2120(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: void initialize()
com.google.firebase.components.ComponentRuntime: com.google.firebase.components.ComponentRegistrar lambda$toProviders$1(com.google.firebase.components.ComponentRegistrar)
com.google.firebase.messaging.FirebaseMessagingService: void onSendError(java.lang.String,java.lang.Exception)
com.google.firebase.analytics.connector.AnalyticsConnectorImpl: void setUserProperty(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.messaging.CommonNotificationBuilder: int getSmallIcon(android.content.pm.PackageManager,android.content.res.Resources,java.lang.String,java.lang.String,android.os.Bundle)
com.google.firebase.analytics.FirebaseAnalytics$UserProperty: java.lang.String SIGN_UP_METHOD
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: java.lang.String encodedName
io.flutter.plugin.common.MethodChannel: java.lang.String access$100(io.flutter.plugin.common.MethodChannel)
io.flutter.plugin.editing.ListenableEditingState: int mComposingEndWhenBeginBatchEdit
io.flutter.plugin.common.EventChannel$1
io.flutter.view.FlutterView: io.flutter.view.FlutterView$ViewportMetrics mMetrics
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoder fallbackEncoder
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin()
com.google.firebase.messaging.RemoteMessage$Builder: android.os.Bundle bundle
com.google.firebase.components.ComponentRuntime$1
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMin
io.flutter.app.FlutterActivity: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String TRAVEL_CLASS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TICKER
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection getLastInputConnection()
io.flutter.Log: void d(java.lang.String,java.lang.String)
io.flutter.plugins.urllauncher.WebViewActivity: java.util.Map extractHeaders(android.os.Bundle)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference activeSink
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES
io.flutter.embedding.android.SplashScreen
io.flutter.view.FlutterView: void addActivityLifecycleListener(io.flutter.plugin.common.ActivityLifecycleListener)
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1
io.flutter.view.FlutterView: void assertAttached()
com.google.firebase.installations.RandomFidGenerator: byte REMOVE_PREFIX_MASK
com.google.firebase.FirebaseOptions: java.lang.String PROJECT_ID_RESOURCE_NAME
com.google.firebase.components.BuildConfig: java.lang.String FLAVOR
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect viewBounds
io.flutter.plugins.sharedpreferences.R$id: int tag_accessibility_heading
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface renderSurface
com.google.firebase.FirebaseOptions: java.lang.String access$000(com.google.firebase.FirebaseOptions)
io.flutter.app.FlutterActivity: void onNewIntent(android.content.Intent)
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification_Info
io.flutter.plugins.connectivity.R$styleable: int ColorStateListItem_android_alpha
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String getIsolateServiceId()
io.flutter.plugin.editing.ListenableEditingState$1
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getProjectNumber()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
com.google.firebase.components.Dependency: int injection
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: TextInputChannel$Configuration(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[])
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollChildren
io.flutter.plugins.firebase.messaging.R$dimen: int notification_right_icon_size
io.flutter.plugins.firebase.messaging.R$styleable: int Capability_queryPatterns
com.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)
com.google.firebase.datatransport.R$dimen: R$dimen()
io.flutter.plugins.connectivity.R$id: int blocking
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String LEVEL_UP
io.flutter.view.FlutterView: void destroy()
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
com.google.firebase.heartbeatinfo.HeartBeatConsumerComponent: com.google.firebase.components.Component create()
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: long getMillis()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: int viewId
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler handler
io.flutter.plugins.firebase.core.R$dimen: int notification_small_icon_background_padding
com.google.firebase.iid.FirebaseInstanceId: void resetStorage()
com.google.firebase.messaging.EnhancedIntentService$1: com.google.android.gms.tasks.Task handle(android.content.Intent)
com.google.firebase.installations.AutoValue_InstallationTokenResult: AutoValue_InstallationTokenResult(java.lang.String,long,long)
com.google.firebase.R$dimen: int compat_button_inset_horizontal_material
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean setAsGroupSummary
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_17
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_gradientRadius
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
com.google.firebase.messaging.Constants$AnalyticsKeys: Constants$AnalyticsKeys()
com.google.firebase.ktx.R$style: int TextAppearance_Compat_Notification_Info
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_AUTOMATICALLY_HANDLE_ON_BACK_PRESSED
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2902(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.util.AttributeSet)
com.google.firebase.heartbeatinfo.HeartBeatResult: long getMillis()
com.tlt.manager.MainActivity
io.flutter.view.FlutterView: void onAttachedToWindow()
io.flutter.plugins.pathprovider.BuildConfig: BuildConfig()
com.google.firebase.installations.R$id
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$0: void execute(java.lang.Runnable)
com.google.android.gms.internal.measurement.zzdu: com.google.android.gms.internal.measurement.zzdu zzk
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
com.google.firebase.datatransport.R$string: R$string()
com.google.android.gms.internal.measurement.zzdj: boolean zzF
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: int[] additionalFlags
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: void run()
io.flutter.plugin.platform.PlatformViewsController: void access$1200(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.firebase.messaging.RemoteMessage$Notification: boolean sticky
com.google.firebase.encoders.DataEncoder: void encode(java.lang.Object,java.io.Writer)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.firebase.messaging.TopicsSubscriber: TopicsSubscriber(com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.messaging.TopicsStore,com.google.firebase.iid.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_startY
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: com.google.android.play.core.splitinstall.SplitInstallManager splitInstallManager
com.google.firebase.heartbeatinfo.SdkHeartBeatResult: com.google.firebase.heartbeatinfo.SdkHeartBeatResult create(java.lang.String,long)
com.google.firebase.iid.SyncTask: void invokeOnTokenRefresh(java.lang.String)
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry getPlatformViewRegistry()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$2
io.flutter.plugins.urllauncher.R$id: int tag_accessibility_actions
io.flutter.embedding.android.FlutterActivity: android.os.Bundle getMetaData()
io.flutter.plugin.editing.TextInputPlugin: void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context applicationContext
com.google.firebase.installations.R$attr: int fontVariationSettings
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LINK
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityPluginBinding
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataMimeType
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setToken(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.flutter.plugin.platform.PlatformViewFactory
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiDisplayed()
com.google.firebase.FirebaseOptions: java.lang.String gcmSenderId
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_28
io.flutter.app.FlutterActivityDelegate$1$1: FlutterActivityDelegate$1$1(io.flutter.app.FlutterActivityDelegate$1)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int hashCode()
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onDetachedFromActivity()
io.flutter.plugins.firebase.messaging.R$id: int notification_background
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: long getLastGlobalHeartBeat()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_LINES
com.google.android.gms.internal.measurement.zzdf
io.flutter.plugin.common.MethodChannel
io.flutter.plugins.firebase.core.R$style: int Widget_Compat_NotificationActionText
com.google.firebase.iid.InstanceIdResultImpl: java.lang.String getToken()
io.flutter.plugins.connectivity.BuildConfig: boolean DEBUG
com.google.firebase.iid.FirebaseInstanceId$$Lambda$4
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_CATEGORY
androidx.core.app.JobIntentService: JobIntentService()
io.flutter.plugins.urllauncher.WebViewActivity: void onDestroy()
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration
io.flutter.embedding.engine.systemchannels.TextInputChannel: void done(int)
io.flutter.plugins.connectivity.R$style: int TextAppearance_Compat_Notification_Info
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ALLOW_WHILE_IDLE
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
com.google.firebase.ktx.BuildConfig: java.lang.String VERSION_NAME
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency optional(java.lang.Class)
com.google.firebase.installations.FirebaseInstallations: void updateCacheFid(java.lang.String)
io.flutter.embedding.android.FlutterView$1
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_HANDLE_DEEPLINKING
io.flutter.app.FlutterPluginRegistry: java.util.List mRequestPermissionsResultListeners
io.flutter.plugins.urllauncher.R$styleable: int[] GradientColor
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter instance
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder toBuilder()
io.flutter.plugins.connectivity.R$color: int androidx_core_ripple_material_light
androidx.fragment.app.Fragment: boolean isVisible()
io.flutter.plugins.pathprovider.R: R()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String KEY_DATABASE_URL
io.flutter.plugins.pathprovider.R$id: int tag_transition_group
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task setAutomaticResourceManagementEnabled(java.util.Map)
io.flutter.plugin.common.MethodChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANCE
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: HeartBeatInfoStorage(android.content.SharedPreferences,android.content.SharedPreferences)
io.flutter.app.FlutterApplication: void setCurrentActivity(android.app.Activity)
io.flutter.plugin.common.JSONUtil: JSONUtil()
com.google.firebase.iid.Metadata: void populateAppVersionInfo()
androidx.fragment.app.Fragment: int getId()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager accessibilityManager
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.iid.Store$Token: long REFRESH_PERIOD_MILLIS
com.google.firebase.messaging.FirebaseMessagingService: void dispatchMessage(android.content.Intent)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener: void onRestoreInstanceState(android.os.Bundle)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.firebase.messaging.R$layout: int custom_dialog
com.google.firebase.messaging.TopicsSubscriber: com.google.firebase.iid.Metadata metadata
io.flutter.embedding.android.FlutterView$3: FlutterView$3(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIREBASE_INSTALLATION_AUTH_VERSION
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_endY
com.google.android.gms.internal.measurement.zzeg
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void executeDartCallbackInBackgroundIsolate(android.content.Intent,java.util.concurrent.CountDownLatch)
com.google.firebase.analytics.zzc: java.lang.String zzj()
io.flutter.plugins.firebase.messaging.R$id: int normal
androidx.core.app.JobIntentService: java.lang.Object sLock
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: FirebaseAnalytics$ConsentType(java.lang.String,int)
io.flutter.embedding.engine.dart.DartMessenger: java.util.concurrent.ConcurrentHashMap messageHandlers
com.google.firebase.R$id: int chronometer
com.google.firebase.messaging.MessagingAnalytics: boolean deliveryMetricsExportToBigQueryEnabled()
com.google.firebase.iid.ServiceStarter: java.util.Queue messagingEvents
com.google.firebase.FirebaseOptions$Builder: java.lang.String projectId
io.flutter.plugin.editing.FlutterTextUtils: int LINE_FEED
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String bodyLocKey
io.flutter.app.FlutterPluginRegistry: java.util.List mUserLeaveHintListeners
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List hintAttributes
com.google.firebase.R$attr: int fontVariationSettings
com.google.firebase.ktx.BuildConfig: java.lang.String APPLICATION_ID
androidx.fragment.app.Fragment: boolean mDetached
io.flutter.plugins.pathprovider.R$dimen: int notification_main_column_padding_top
com.google.android.gms.internal.measurement.zzdj: long zzx
io.flutter.embedding.android.FlutterSurfaceView: void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int)
com.google.firebase.iid.Store: Store(android.content.Context)
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.ListenableEditingState mEditable
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler
io.flutter.plugins.firebase.core.R$style
com.google.firebase.components.Lazy: com.google.firebase.inject.Provider provider
io.flutter.embedding.android.FlutterSurfaceView$1: io.flutter.embedding.android.FlutterSurfaceView this$0
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.installations.R$styleable: int[] FontFamilyFont
com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzhz zzh
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker getInstance()
com.google.firebase.messaging.Constants$ScionAnalytics: java.lang.String EVENT_NOTIFICATION_DISMISS
io.flutter.embedding.android.FlutterTextureView: android.view.Surface renderSurface
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.iid.FirebaseInstanceId access$200(com.google.firebase.messaging.FirebaseMessaging)
com.google.firebase.components.EventBus: void lambda$publish$0(java.util.Map$Entry,com.google.firebase.events.Event)
io.flutter.plugins.firebase.core.R$id: int tag_accessibility_heading
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides NONE
com.google.firebase.iid.WakeLockHolder: WakeLockHolder()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean playSound
com.google.firebase.installations.R$style: int Widget_Compat_NotificationActionText
org.threeten.bp.ZoneRegion: java.lang.Object writeReplace()
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.RepeatInterval: RepeatInterval(java.lang.String,int)
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withNoGeneratedFid()
io.flutter.embedding.engine.dart.DartMessenger: int nextReplyId
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getBodyLocalizationKey()
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRegistrar lambda$addComponentRegistrar$0(com.google.firebase.components.ComponentRegistrar)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$1
io.flutter.plugins.firebase.messaging.R$drawable: int notification_tile_bg
com.google.firebase.iid.GmsRpc$$Lambda$0
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
com.google.firebase.iid.FirebaseInstanceId$$Lambda$4: com.google.firebase.iid.FirebaseInstanceId arg$1
io.flutter.plugins.firebase.messaging.R$attr: int shortcutMatchRequired
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.PlatformPlugin: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.google.firebase.heartbeatinfo.HeartBeatInfo
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge accessibilityBridge
io.flutter.plugin.editing.TextEditingDelta: int getNewSelectionEnd()
com.google.firebase.installations.BuildConfig: int VERSION_CODE
io.flutter.plugins.connectivity.R$id: int tag_accessibility_clickable_spans
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: boolean released
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String CREATE_REQUEST_RESOURCE_NAME_FORMAT
com.google.firebase.messaging.CommonNotificationBuilder: com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo createNotificationInfo(android.content.Context,java.lang.String,com.google.firebase.messaging.NotificationParams,java.lang.String,android.content.res.Resources,android.content.pm.PackageManager,android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String contentTitle
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()
com.google.firebase.R$dimen: int notification_action_icon_size
io.flutter.plugins.sharedpreferences.R$dimen: int compat_button_padding_vertical_material
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding: android.content.ContentProvider getContentProvider()
com.google.firebase.messaging.TopicsSubscriber$$Lambda$0: com.google.firebase.iid.FirebaseInstanceId arg$3
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
com.google.firebase.installations.interop.R$style: R$style()
io.flutter.plugins.sharedpreferences.R$color: int notification_icon_bg_color
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method longArrayGetIndex
io.flutter.plugin.common.PluginRegistry$ActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)
com.google.firebase.installations.AutoValue_InstallationTokenResult: AutoValue_InstallationTokenResult(java.lang.String,long,long,com.google.firebase.installations.AutoValue_InstallationTokenResult$1)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String body
io.flutter.embedding.engine.dart.DartExecutor: void setIsolateServiceIdListener(io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener)
io.flutter.plugins.sharedpreferences.R$id: int right_side
io.flutter.plugins.firebase.messaging.R$id
io.flutter.view.FlutterView: java.util.List mActivityLifecycleListeners
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BODY
io.flutter.plugin.common.PluginRegistry$ActivityResultListener
com.google.firebase.iid.FirebaseInstanceIdReceiver
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle[] values()
com.google.firebase.messaging.EnhancedIntentService$$Lambda$1: void execute(java.lang.Runnable)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingText(int,int)
io.flutter.plugin.common.BasicMessageChannel: void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: java.lang.Runnable mOnDrawRunnable
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action LONG_PRESS
com.google.firebase.messaging.TopicOperation: java.lang.String operation
io.flutter.embedding.android.FlutterActivity: void onStop()
com.google.firebase.FirebaseOptions$Builder: java.lang.String apiKey
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: PlatformViewsChannel$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
com.google.firebase.FirebaseOptions: java.lang.String STORAGE_BUCKET_RESOURCE_NAME
io.flutter.plugins.firebase.core.R$id
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String TAG
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String CHECKOUT_STEP
io.flutter.view.AccessibilityBridge: void release()
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_4
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: int MAX_RETRIES
com.google.firebase.analytics.FirebaseAnalytics: void setSessionTimeoutDuration(long)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getTicker()
io.flutter.embedding.engine.renderer.FlutterRenderer: void surfaceChanged(int,int)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setFid(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: java.lang.String encodedName
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: boolean active
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface: void attachToBroadcastReceiver(android.content.BroadcastReceiver,androidx.lifecycle.Lifecycle)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MAX_PROGRESS
com.google.firebase.components.LazySet: java.util.Set providers
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void updateSystemUiOverlays()
androidx.fragment.app.FragmentActivity: void onPause()
android.support.v4.media.session.MediaSessionCompat$Token
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
io.flutter.view.AccessibilityBridge: android.view.View access$100(io.flutter.view.AccessibilityBridge)
com.google.firebase.installations.remote.RequestLimiter: long nextRequestTime
com.dexterous.flutterlocalnotifications.NotificationStyle: NotificationStyle(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: RestorationChannel$2(io.flutter.embedding.engine.systemchannels.RestorationChannel)
com.google.firebase.installations.GetAuthTokenListener: com.google.firebase.installations.Utils utils
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUB_TEXT
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String ITEM_VARIANT
com.google.firebase.installations.FirebaseInstallations$$Lambda$2: boolean arg$2
com.google.firebase.messaging.FirebaseMessaging$$Lambda$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.app.FlutterPluginRegistry: FlutterPluginRegistry(io.flutter.embedding.engine.FlutterEngine,android.content.Context)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String uri
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PRIORITY
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: boolean clipboardHasStrings()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String,long)
io.flutter.view.AccessibilityBridge: int access$1176(io.flutter.view.AccessibilityBridge,int)
io.flutter.plugins.connectivity.R$layout: int notification_template_icon_group
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT
io.flutter.embedding.android.FlutterFragment: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String DEFAULT_SOUND
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.flutter.plugins.connectivity.R$style: int TextAppearance_Compat_Notification
io.flutter.embedding.engine.plugins.PluginRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$2: FlutterFirebaseMessagingPlugin$2(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin,com.google.firebase.messaging.FirebaseMessaging)
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setMessageType(java.lang.String)
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SKIA_ALLOWLIST
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView flutterView
io.flutter.plugins.sharedpreferences.R$id: int notification_main_column
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void installDeferredComponent(int,java.lang.String)
io.flutter.plugins.sharedpreferences.R$attr: int queryPatterns
io.flutter.plugin.mouse.MouseCursorPlugin$2: long serialVersionUID
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_icon_light_normal
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: io.flutter.plugin.common.MethodChannel channel
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
com.google.firebase.components.Component$$Lambda$3: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.Object)
io.flutter.view.AccessibilityBridge$4: android.view.accessibility.AccessibilityManager val$accessibilityManager
io.flutter.app.FlutterFragmentActivity: void onStart()
io.flutter.plugins.urllauncher.UrlLauncher: void setActivity(android.app.Activity)
com.google.firebase.messaging.TopicsSyncTask: boolean access$000(com.google.firebase.messaging.TopicsSyncTask)
io.flutter.plugins.connectivity.ConnectivityPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetTop
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: byte FALSE
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageTypeForFirelog(android.content.Intent)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_7
io.flutter.plugin.editing.ListenableEditingState
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ZONED_SCHEDULE_METHOD
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String KEY_TTL
com.google.firebase.ktx.R$drawable: int notification_template_icon_bg
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_DESCRIPTION
io.flutter.plugins.firebase.messaging.R$drawable
io.flutter.plugin.common.StandardMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebView access$000(io.flutter.plugins.urllauncher.WebViewActivity)
io.flutter.plugins.sharedpreferences.R$styleable
com.google.firebase.heartbeatinfo.HeartBeatConsumer
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.content.Context flutterAppWindowContext
io.flutter.plugins.urllauncher.WebViewActivity$1: void onReceive(android.content.Context,android.content.Intent)
com.google.firebase.installations.interop.R$dimen: int notification_large_icon_width
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT
io.flutter.plugin.editing.TextInputPlugin$1: void clearClient()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE
io.flutter.plugins.firebase.core.R$id: int icon
com.google.firebase.FirebaseError: int ERROR_INVALID_CUSTOM_TOKEN
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
com.google.firebase.installations.R$drawable: int notification_bg_low
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$2: com.google.firebase.messaging.FirebaseMessaging$AutoInit arg$1
com.google.android.gms.internal.measurement.zzbw: boolean zzk
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getDartEntrypointFunctionName()
com.google.firebase.messaging.CommonNotificationBuilder: android.content.Intent createTargetIntent(java.lang.String,com.google.firebase.messaging.NotificationParams,android.content.pm.PackageManager)
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean bot
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: java.lang.String name
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task unsubscribeFromTopic(java.util.Map)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_1
com.google.firebase.installations.R$dimen: int compat_button_inset_horizontal_material
com.google.firebase.installations.interop.R$color: int notification_icon_bg_color
com.google.firebase.datatransport.R$style: int TextAppearance_Compat_Notification_Title
com.google.firebase.components.OptionalProvider
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver
com.google.firebase.components.DependencyException: DependencyException(java.lang.String)
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int TOUCH
com.google.firebase.installations.interop.R$integer
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemStatusBarContrastEnforced
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMax
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void disposeVirtualDisplayForPlatformView(int)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection,java.lang.String,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors()
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: FlutterPluginRegistry$FlutterRegistrar(io.flutter.app.FlutterPluginRegistry,java.lang.String)
com.google.firebase.iid.GmsRpc: java.lang.String handleResponse(android.os.Bundle)
com.google.firebase.iid.FirebaseInstanceIdReceiver: void onNotificationDismissed(android.content.Context,android.os.Bundle)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: java.lang.String CHANNEL_NAME
com.google.android.gms.signin.internal.zah: android.os.Parcelable$Creator CREATOR
com.google.firebase.installations.interop.R$id: int icon_group
io.flutter.plugins.pathprovider.R$attr: int fontProviderQuery
com.google.firebase.encoders.DataEncoder: java.lang.String encode(java.lang.Object)
com.google.firebase.FirebaseCommonRegistrar$$Lambda$1: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
com.google.firebase.messaging.Constants$MessageTypes
com.google.android.gms.internal.measurement.zzdd: java.lang.String zze
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_text_dark_normal_background
com.google.firebase.installations.AutoValue_InstallationTokenResult
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventEncoder: void encode(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String)
com.google.firebase.FirebaseApp: java.util.List getAllAppNames()
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String LEVEL_START
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.datatransport.R$drawable: int notification_action_background
com.google.firebase.installations.local.PersistedInstallation: java.lang.String PERSISTED_STATUS_KEY
com.google.firebase.analytics.zzc: void zzo(java.lang.String,java.lang.String,android.os.Bundle)
com.google.firebase.FirebaseCommonRegistrar$$Lambda$6
com.google.firebase.R$color: R$color()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int pointerCount
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onNewIntent(android.content.Intent)
com.google.firebase.iid.GmsRpc$$Lambda$0: GmsRpc$$Lambda$0(com.google.firebase.iid.GmsRpc)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.firebase.installations.R$attr: int fontProviderAuthority
io.flutter.plugins.firebase.core.R$drawable: int notification_template_icon_bg
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$2: FlutterFirebaseMessagingBackgroundExecutor$2(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor,java.util.Map)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler
io.flutter.view.AccessibilityBridge$1: void announce(java.lang.String)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.Void doInBackground(java.lang.Void[])
com.google.firebase.R$style: int Widget_Compat_NotificationActionContainer
io.flutter.embedding.android.FlutterFragment: java.lang.String getInitialRoute()
com.google.firebase.messaging.R
com.google.firebase.messaging.FirebaseMessaging$$Lambda$4: java.lang.String arg$1
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Service service
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollPosition
com.google.android.gms.internal.measurement.zzdx: com.google.android.gms.internal.measurement.zzhz zza
com.google.firebase.iid.FirebaseInstanceId$$Lambda$2
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.JSONMethodCodec INSTANCE
com.google.firebase.ktx.R$styleable: int[] FontFamily
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.util.HashSet mResources
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class baseType
io.flutter.plugin.platform.VirtualDisplayController$1: VirtualDisplayController$1(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable)
androidx.fragment.app.Fragment: boolean isInBackStack()
android.support.v4.media.MediaBrowserCompat$ItemReceiver
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onBackPressed()
io.flutter.plugins.firebase.messaging.R$attr: int ttcIndex
io.flutter.view.FlutterView: void onSizeChanged(int,int,int,int)
com.google.firebase.FirebaseApp: boolean isDefaultApp()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
io.flutter.plugin.editing.ListenableEditingState: int getSelectionStart()
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor addResources(java.util.Collection)
io.flutter.plugin.common.StandardMethodCodec: java.lang.String getStackTrace(java.lang.Throwable)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIREBASE_INSTALLATIONS_API_VERSION
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int MOVE
io.flutter.plugins.firebase.core.R$id: int tag_on_receive_content_mime_types
io.flutter.plugin.common.EventChannel$StreamHandler
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.components.ComponentContainer delegateContainer
io.flutter.plugin.common.BinaryCodec
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String AD_UNIT_NAME
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent)
io.flutter.embedding.engine.dart.DartExecutor$1: io.flutter.embedding.engine.dart.DartExecutor this$0
com.google.firebase.annotations.DeferredApi
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.ArrayList loadScheduledNotifications(android.content.Context)
com.google.firebase.R$style: int TextAppearance_Compat_Notification_Time
com.google.firebase.components.ComponentRuntime$Builder: java.util.concurrent.Executor defaultExecutor
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long triggerTimeout
io.flutter.plugins.firebase.core.R$id: int tag_transition_group
io.flutter.embedding.android.FlutterSplashView: android.os.Parcelable onSaveInstanceState()
io.flutter.embedding.engine.plugins.PluginRegistry: void removeAll()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String)
io.flutter.embedding.engine.FlutterShellArgs: void remove(java.lang.String)
io.flutter.app.FlutterPluginRegistry
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: android.content.pm.PackageManager mPackageManager
io.flutter.plugins.firebase.core.R$id: int tag_accessibility_actions
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation
io.flutter.plugins.connectivity.R$id: int line3
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void loadAssets(int,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map plugins
com.google.firebase.ktx.R$id: int right_side
com.google.firebase.FirebaseApp: void setAutomaticResourceManagementEnabled(boolean)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: FlutterFirebaseMessagingPlugin()
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mListeners
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_ICON_ERROR_CODE
io.flutter.plugin.editing.TextInputPlugin$2
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT
io.flutter.plugins.connectivity.R$string
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: android.content.BroadcastReceiver getBroadcastReceiver()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String TAX
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder initialRoute(java.lang.String)
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_icon_light_focused
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_install_button
com.google.firebase.components.ComponentRuntime: void lambda$processInstanceComponents$2(com.google.firebase.components.OptionalProvider,com.google.firebase.inject.Provider)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunEngine(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.lang.String)
android.support.v4.media.MediaDescriptionCompat
com.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: UrlLauncherPlugin()
com.google.firebase.iid.GmsRpc: boolean isErrorMessageForRetryableError(java.lang.String)
io.flutter.embedding.android.FlutterView: boolean isFlutterUiDisplayed
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String FIREBASE_INSTALLATIONS_ID_HEARTBEAT_TAG
io.flutter.view.FlutterMain$Settings: void setLogTag(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ValueEncoder BOOLEAN_ENCODER
com.google.firebase.analytics.ktx.ParametersBuilder: void param(java.lang.String,android.os.Bundle[])
io.flutter.plugins.firebase.core.R$id: int notification_main_column_container
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency setOf(java.lang.Class)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$1
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String translateAutofillHint(java.lang.String)
com.google.firebase.installations.interop.R$id: int action_image
com.google.firebase.ktx.R$styleable: int FontFamilyFont_android_font
com.google.firebase.iid.Metadata: java.lang.String getAppVersionName()
io.flutter.embedding.engine.renderer.FlutterRenderer: FlutterRenderer(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.android.FlutterSplashView$1: io.flutter.embedding.android.FlutterSplashView this$0
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: java.lang.Thread lambda$static$0(java.lang.Runnable)
com.google.firebase.installations.interop.R$color: int notification_action_color_filter
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String NUMBER_OF_NIGHTS
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.plugins.firebase.messaging.R$drawable: int notification_bg_normal
com.google.firebase.messaging.SharedPreferencesQueue: java.lang.String peek()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder flutterShellArgs(io.flutter.embedding.engine.FlutterShellArgs)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean sendNotificationPayloadMessage(android.content.Intent)
com.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()
com.google.firebase.components.ComponentRuntime: com.google.firebase.components.ComponentRuntime$Builder builder(java.util.concurrent.Executor)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String GZIP_CONTENT_ENCODING
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.String backgroundMode
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: java.util.Set infos
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
com.google.firebase.components.EventBus$$Lambda$1: void run()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView this$0
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_low_normal
com.google.firebase.installations.interop.BuildConfig: java.lang.String APPLICATION_ID
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] inverseTransform
io.flutter.view.VsyncWaiter$1$1: long val$cookie
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String TUTORIAL_COMPLETE
io.flutter.plugin.platform.PlatformViewsController$1: void disposeVirtualDisplayForPlatformView(int)
com.google.firebase.installations.R$integer: R$integer()
com.google.firebase.ktx.R$drawable: int notification_bg_low_pressed
io.flutter.plugin.editing.ListenableEditingState: int mSelectionStartWhenBeginBatchEdit
com.google.android.gms.internal.measurement.zzdd
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_ISOLATE_SNAPSHOT_DATA
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Layout mLayout
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.view.FlutterView$ViewportMetrics: int systemGestureInsetRight
com.google.firebase.iid.GmsRpc: GmsRpc(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.android.gms.cloudmessaging.Rpc,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader instance
com.google.firebase.installations.R$style: int TextAppearance_Compat_Notification_Info
com.google.firebase.installations.R$styleable: int FontFamily_fontProviderCerts
com.google.firebase.components.Dependency: Dependency(java.lang.Class,int,int)
io.flutter.embedding.android.FlutterSurfaceView
com.google.firebase.messaging.EnhancedIntentService: boolean stopSelfResultHook(int)
io.flutter.view.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: void detachAccessibiltyBridge()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(int)
com.google.firebase.installations.remote.InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse build()
io.flutter.app.FlutterActivityEvents: void onResume()
com.google.firebase.messaging.DisplayNotification: boolean handleNotification()
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzp
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_normal
io.flutter.embedding.engine.FlutterEngine: void attachToJni()
org.threeten.bp.LocalDateTime
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setMessageId(java.lang.String)
com.google.firebase.iid.FirebaseInstanceId: boolean isFcmAutoInitEnabled()
com.google.firebase.FirebaseApp: void clearInstancesForTest()
io.flutter.app.FlutterPluginRegistry: java.util.List access$700(io.flutter.app.FlutterPluginRegistry)
io.flutter.embedding.android.FlutterActivity: java.lang.String getAppBundlePath()
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
io.flutter.plugins.pathprovider.R$layout: int notification_action
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void setupFlutterEngine()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_10
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_centerX
io.flutter.plugins.urllauncher.R$layout: int notification_template_custom_big
io.flutter.plugins.firebase.messaging.R$id: int tag_window_insets_animation_callback
com.google.firebase.encoders.FieldDescriptor$1
com.google.firebase.components.ComponentRuntime$Builder: java.util.List lazyRegistrars
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void onMoveToForeground()
io.flutter.plugins.urllauncher.R$dimen: int compat_button_padding_vertical_material
io.flutter.embedding.engine.dart.DartExecutor: boolean isApplicationRunning
io.flutter.plugin.editing.FlutterTextUtils: boolean isRegionalIndicatorSymbol(int)
com.google.firebase.messaging.TopicsSyncTask: java.lang.Object TOPIC_SYNC_TASK_LOCK
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action COPY
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type HC_PLATFORM_VIEW
io.flutter.embedding.android.FlutterView: void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView)
com.google.firebase.messaging.TopicsStore: TopicsStore(android.content.SharedPreferences,java.util.concurrent.Executor)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowRootView
com.google.firebase.FirebaseApp: com.google.firebase.components.ComponentRuntime componentRuntime
com.google.firebase.ktx.R$attr: int alpha
com.google.firebase.installations.interop.R$dimen: int notification_big_circle_margin
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String tag
io.flutter.plugin.platform.PlatformPlugin: java.lang.String TAG
com.google.firebase.iid.FirebaseInstanceId$$Lambda$4: com.google.android.gms.tasks.Task then(java.lang.Object)
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
io.flutter.plugins.connectivity.R$id: int info
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didScroll()
com.google.firebase.messaging.FirebaseMessaging$$Lambda$1: void onSuccess(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineGroup$1: io.flutter.embedding.engine.FlutterEngine val$engineToCleanUpOnDestroy
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_24
com.google.firebase.iid.FirebaseInstanceId: void setFcmAutoInitEnabled(boolean)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void setPluginRegistrant(io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback)
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: FirebaseAnalytics$ConsentStatus(java.lang.String,int)
com.google.android.gms.signin.internal.zaj: android.os.Parcelable$Creator CREATOR
com.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0: FirebaseMessagingRegistrar$$Lambda$0()
io.flutter.plugins.firebase.core.R$id: int text2
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String hint
io.flutter.plugins.connectivity.R$layout: R$layout()
com.google.firebase.ktx.R$id: int notification_background
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getCollapseKey(android.content.Intent)
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType
com.google.firebase.installations.remote.TokenResult: long getTokenExpirationTimestamp()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost
com.google.firebase.installations.FirebaseInstallations$2: com.google.firebase.installations.FirebaseInstallations this$0
com.google.firebase.datatransport.R$id: int italic
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding(android.content.BroadcastReceiver)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields
io.flutter.plugins.connectivity.R$attr
io.flutter.plugins.firebase.messaging.R$styleable: int GradientColor_android_endX
com.google.android.gms.internal.measurement.zzby: com.google.android.gms.internal.measurement.zzcd zzf
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceCreated(android.view.SurfaceHolder)
io.flutter.view.AccessibilityBridge$SemanticsNode: float bottom
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
io.flutter.plugins.firebase.core.R$drawable: int notification_tile_bg
com.google.firebase.installations.R$id: int notification_main_column
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.flutter.plugin.common.MethodCall: java.lang.Object arguments()
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String TICKER
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: java.lang.String CALLBACK_HANDLE_KEY
com.google.firebase.iid.WithinAppServiceConnection$BindRequest: void lambda$arrangeTimeout$0$WithinAppServiceConnection$BindRequest()
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String EVENT_TIME
com.google.firebase.components.CycleDetector$ComponentNode: com.google.firebase.components.Component getComponent()
com.google.firebase.messaging.TopicOperation: java.lang.String normalizeTopicOrThrow(java.lang.String,java.lang.String)
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistry getRegistry()
io.flutter.plugins.firebase.messaging.R$id: int tag_on_receive_content_mime_types
io.flutter.plugins.firebase.core.R$dimen: int notification_main_column_padding_top
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson buildGson()
com.google.android.gms.internal.measurement.zzcd: int zze
com.google.firebase.installations.remote.RequestLimiter: long MAXIMUM_BACKOFF_DURATION_FOR_SERVER_ERRORS
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_endY
com.google.firebase.ktx.R$styleable: int GradientColor_android_centerX
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelNotification(java.lang.Integer,java.lang.String)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.iid.ServiceStarter: int SUCCESS
com.google.firebase.R$attr: int fontProviderQuery
com.google.firebase.messaging.Constants$MessageNotificationKeys
io.flutter.plugins.firebase.messaging.R$drawable: int notification_bg_low_normal
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewAttachedToWindow(android.view.View)
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: TopicsSyncTask$ConnectivityChangeReceiver(com.google.firebase.messaging.TopicsSyncTask,com.google.firebase.messaging.TopicsSyncTask)
io.flutter.plugin.editing.ListenableEditingState: int mChangeNotificationDepth
io.flutter.plugins.firebase.core.R$id: int action_divider
com.google.firebase.iid.Store
com.dexterous.flutterlocalnotifications.models.IconSource
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.google.firebase.FirebaseApp: java.util.concurrent.atomic.AtomicBoolean automaticResourceManagementEnabled
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.SoundSource
com.google.firebase.R$dimen: int notification_small_icon_background_padding
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMin
io.flutter.app.FlutterActivity: boolean retainFlutterNativeView()
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_INITIAL_ROUTE
io.flutter.app.FlutterActivityDelegate: io.flutter.view.FlutterView access$100(io.flutter.app.FlutterActivityDelegate)
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionExtent
com.google.firebase.messaging.RemoteMessage$Builder: RemoteMessage$Builder(java.lang.String)
io.flutter.plugins.pathprovider.R$layout: int custom_dialog
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.google.firebase.installations.local.IidStore: java.lang.String STORE_KEY_PUB
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView createImageView()
com.google.firebase.components.CycleDetector$ComponentNode
com.google.firebase.installations.R$styleable: int FontFamily_fontProviderSystemFontFamily
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: FlutterActivityAndFragmentDelegate$1(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformViewsController this$0
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_font
io.flutter.embedding.android.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES
com.google.firebase.FirebaseApp$UserUnlockReceiver: void unregister()
io.flutter.embedding.engine.loader.FlutterApplicationInfo
io.flutter.plugin.common.BasicMessageChannel: java.lang.String CHANNEL_BUFFERS_CHANNEL
com.google.firebase.ktx.R$dimen: int notification_top_pad
com.google.firebase.datatransport.R$style: int TextAppearance_Compat_Notification_Info
com.google.firebase.messaging.CommonNotificationBuilder: int generatePendingIntentRequestCode()
io.flutter.plugins.pathprovider.PathProviderPlugin$1
androidx.fragment.app.FragmentActivity: int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewInsetRight
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_ANALYTICS_LABEL
com.google.firebase.events.Event: java.lang.Class type
com.google.firebase.ktx.R$style: int Widget_Compat_NotificationActionContainer
io.flutter.plugins.firebase.core.R$layout: int notification_template_icon_group
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String NUMBER_OF_PASSENGERS
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.lang.String KEY_NOTIFICATION_IDS
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String,double)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding
io.flutter.plugins.firebase.messaging.R$attr: int fontProviderFetchStrategy
com.google.firebase.heartbeatinfo.SdkHeartBeatResult
io.flutter.plugins.pathprovider.R$dimen: int notification_small_icon_background_padding
com.google.firebase.messaging.NotificationParams: java.lang.Long getLong(java.lang.String)
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Deferred$DeferredHandler NOOP_HANDLER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
io.flutter.plugins.firebase.messaging.R$color: int notification_icon_bg_color
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseIntArray sessionIdToLoadingUnitId
io.flutter.embedding.android.TransparencyMode: TransparencyMode(java.lang.String,int)
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry INSTANCE
io.flutter.view.FlutterView: android.view.SurfaceHolder$Callback mSurfaceCallback
io.flutter.plugin.platform.PlatformViewsController: void onBeginFrame()
com.google.firebase.analytics.connector.internal.zzd: zzd(com.google.firebase.analytics.connector.internal.zze)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
com.google.firebase.installations.R$dimen: int notification_small_icon_background_padding
io.flutter.embedding.android.FlutterActivity: void onSaveInstanceState(android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_NAME
io.flutter.plugins.sharedpreferences.R$attr: int fontVariationSettings
com.google.android.gms.internal.measurement.zzdz: com.google.android.gms.internal.measurement.zzdz zzg
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzcr: com.google.android.gms.internal.measurement.zzcr zzg
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setAuthToken(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_startColor
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3502(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
com.google.firebase.installations.interop.R$dimen: int notification_content_margin_start
com.google.android.gms.internal.measurement.zzdu: long zze
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addViewDestroyListener(io.flutter.plugin.common.PluginRegistry$ViewDestroyListener)
com.google.firebase.FirebaseCommonRegistrar$$Lambda$1: java.lang.String extract(java.lang.Object)
io.flutter.app.FlutterActivity: void onLowMemory()
com.google.firebase.datatransport.R$layout: int notification_action_tombstone
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.firebase.datatransport.R$attr: int fontProviderCerts
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withClearedAuthToken()
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
com.google.firebase.messaging.TopicsSyncTask: java.lang.Boolean hasWakeLockPermission
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
com.google.firebase.components.ComponentDiscovery: java.lang.Object context
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String contentTitle
com.google.android.gms.internal.measurement.zzdu
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
io.flutter.view.AccessibilityBridge$SemanticsNode: float top
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
io.flutter.plugins.urllauncher.R$styleable: int[] GradientColorItem
com.google.firebase.iid.WithinAppServiceBinder: com.google.firebase.iid.WithinAppServiceBinder$IntentHandler intentHandler
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_ttcIndex
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.plugins.firebase.core.R$drawable
androidx.core.app.JobIntentService: boolean mDestroyed
com.google.firebase.components.CycleDetector: java.util.Set getRoots(java.util.Set)
com.google.firebase.analytics.connector.internal.zzd: com.google.firebase.analytics.connector.internal.zze zza
io.flutter.plugins.firebase.messaging.R$id: int title
io.flutter.plugins.connectivity.R$layout: int notification_template_part_chronometer
io.flutter.plugins.connectivity.R: R()
com.google.firebase.R$dimen: int notification_right_side_padding_top
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
com.google.android.gms.internal.measurement.zzcr: java.lang.String zze
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean)
com.google.android.gms.internal.measurement.zzdn: com.google.android.gms.internal.measurement.zzdn[] values()
com.google.android.gms.internal.measurement.zzbw: com.google.android.gms.internal.measurement.zzcd zzi
io.flutter.plugins.sharedpreferences.R$id: int accessibility_action_clickable_span
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String LOCATION
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE
com.google.firebase.FirebaseCommonRegistrar: java.lang.String FIREBASE_ANDROID
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.util.Map remoteMessageNotificationToMap(com.google.firebase.messaging.RemoteMessage$Notification)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: MethodCallHandlerImpl(io.flutter.plugins.urllauncher.UrlLauncher)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection RTL
com.google.firebase.analytics.zzc: java.lang.String zzg()
com.google.firebase.iid.Metadata: java.lang.String getAppVersionCode()
org.threeten.bp.chrono.Ser
io.flutter.embedding.android.FlutterFragmentActivity: void onTrimMemory(int)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
com.google.firebase.messaging.TopicsSubscriber$$Lambda$0
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
com.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFisError()
com.google.firebase.dynamicloading.ComponentLoader
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect getRect()
io.flutter.embedding.engine.plugins.FlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.firebase.messaging.R$dimen: int notification_right_side_padding_top
io.flutter.app.FlutterPluginRegistry: java.lang.String TAG
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$6700(io.flutter.view.AccessibilityBridge,int)
io.flutter.Log
io.flutter.embedding.android.FlutterFragmentActivity: void ensureFlutterFragmentCreated()
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context context
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.google.firebase.FirebaseApp$BackgroundStateChangeListener: void onBackgroundStateChanged(boolean)
com.google.firebase.installations.R$id: int async
io.flutter.embedding.engine.systemchannels.TextInputChannel: void unspecifiedAction(int)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String LINK
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
io.flutter.embedding.android.FlutterImageView: boolean isAttachedToFlutterRenderer
com.google.firebase.messaging.ImageDownload$$Lambda$0
com.google.firebase.iid.Store$Token: java.lang.String appVersion
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] values()
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueue: java.util.concurrent.ExecutorService executor
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.google.firebase.messaging.TopicsSubscriber: java.util.Map pendingOperations
com.google.firebase.analytics.FirebaseAnalytics$UserProperty
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readMessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.google.firebase.messaging.RemoteMessageCreator: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)
com.google.firebase.messaging.MessagingAnalytics: int getPriority(android.content.Intent)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void clearClient()
io.flutter.plugins.firebase.messaging.R$id: int async
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: java.lang.String getDeferredComponentInstallState(int,java.lang.String)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$3: java.lang.Object then(com.google.android.gms.tasks.Task)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource BitmapFilePath
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TITLE
io.flutter.plugin.platform.PlatformViewsController: boolean checkInputConnectionProxy(android.view.View)
com.google.firebase.iid.FirebaseInstanceId: java.lang.String getToken()
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_dark_disabled
io.flutter.plugins.sharedpreferences.R$styleable: int ColorStateListItem_android_color
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map activityAwarePlugins
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2402(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String)
io.flutter.view.FlutterNativeView: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
com.google.firebase.iid.WithinAppServiceBinder$$Lambda$0: WithinAppServiceBinder$$Lambda$0(com.google.firebase.iid.WithinAppServiceConnection$BindRequest)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunDefaultEngine(android.content.Context)
com.google.firebase.analytics.connector.internal.zzb
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge: boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.firebase.components.CycleDetector$Dep: int hashCode()
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] transform
io.flutter.embedding.engine.systemchannels.AccessibilityChannel
com.google.firebase.encoders.json.JsonValueObjectEncoderContext
com.google.firebase.FirebaseApp: java.util.concurrent.Executor UI_EXECUTOR
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.firebase.messaging.Constants$MessageTypes: Constants$MessageTypes()
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.embedding.engine.renderer.FlutterRenderer$1: FlutterRenderer$1(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.engine.FlutterOverlaySurface
io.flutter.app.FlutterActivityDelegate: java.lang.Boolean showSplashScreenUntilFirstFrame()
com.google.firebase.datatransport.R$id: int async
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String PAYMENT_TYPE
io.flutter.plugins.urllauncher.R$styleable: int[] FontFamilyFont
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: int hashCode()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.google.firebase.iid.ServiceStarter: boolean hasWakeLockPermission(android.content.Context)
com.google.firebase.R$id: int line1
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(float)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CALLED_AT
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
io.flutter.plugins.firebase.messaging.R$attr: int fontProviderPackage
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.RandomFidGenerator fidGenerator
io.flutter.app.FlutterActivity: io.flutter.view.FlutterView getFlutterView()
io.flutter.embedding.android.FlutterView$2: FlutterView$2(io.flutter.embedding.android.FlutterView)
androidx.media.AudioAttributesCompatParcelizer
com.google.firebase.iid.FcmBroadcastProcessor: void reset()
com.google.firebase.iid.FirebaseInstanceId
io.flutter.plugin.platform.PlatformViewsController: boolean flutterViewConvertedToImageView
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
com.google.firebase.installations.Utils: long currentTimeInMillis()
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
io.flutter.view.FlutterView$3
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_30
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetTop
org.threeten.bp.ZoneOffset: java.lang.Object readResolve()
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: MessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean,java.lang.Boolean)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float xPrecision
io.flutter.plugins.pathprovider.R$id
com.google.firebase.iid.FcmBroadcastProcessor$$Lambda$2: java.lang.Object then(com.google.android.gms.tasks.Task)
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
io.flutter.embedding.engine.dart.DartMessenger$Reply: java.util.concurrent.atomic.AtomicBoolean done
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Weekly
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: com.google.firebase.components.ComponentFactory lambdaFactory$()
com.google.firebase.messaging.EnhancedIntentService$$Lambda$0: EnhancedIntentService$$Lambda$0(com.google.firebase.messaging.EnhancedIntentService,android.content.Intent,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartMessenger dartMessenger
io.flutter.plugins.connectivity.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
io.flutter.plugins.pathprovider.PathProviderPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.encoders.json.JsonDataEncoderBuilder$1: java.lang.String encode(java.lang.Object)
com.google.firebase.installations.local.IidStore: java.lang.String defaultSenderId
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: java.util.concurrent.ThreadFactory lambdaFactory$()
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,java.lang.String[],boolean)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: com.google.firebase.messaging.FirebaseMessaging this$0
com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.lang.String TAG
com.google.firebase.iid.WithinAppServiceConnection: com.google.android.gms.tasks.Task sendIntent(android.content.Intent)
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String SDK_PLATFORM_ANDROID
com.google.firebase.FirebaseError: int ERROR_TOO_MANY_REQUESTS
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: boolean shouldServerErrorRetry
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: AutoValue_InstallationResponse$Builder(com.google.firebase.installations.remote.InstallationResponse,com.google.firebase.installations.remote.AutoValue_InstallationResponse$1)
com.google.firebase.messaging.FirebaseMessaging: void lambda$new$1$FirebaseMessaging(com.google.firebase.messaging.TopicsSubscriber)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings)
com.google.firebase.datatransport.R$id: int normal
com.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId(java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.firebase.core.R$layout: int notification_action
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean childHasFocus(android.view.View)
io.flutter.plugin.editing.TextInputPlugin: void destroy()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: SettingsChannel$PlatformBrightness(java.lang.String,int,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin$2
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ENABLE_SKPARAGRAPH_META_DATA_KEY
com.google.firebase.messaging.RemoteMessage: int getTtl()
com.google.firebase.iid.FirebaseInstanceId: java.lang.String rationaliseScope(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.google.firebase.components.EventBus: java.util.Queue pendingEvents
com.google.firebase.installations.remote.AutoValue_TokenResult: com.google.firebase.installations.remote.TokenResult$ResponseCode getResponseCode()
com.google.firebase.iid.BuildConfig
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(android.content.Context)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: void setPreferencesStringValue(java.lang.String,java.lang.String)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String SHIPPING
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_DART_PROFILING
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.flutter.plugin.editing.FlutterTextUtils: int CARRIAGE_RETURN
io.flutter.view.FlutterView: void resetWillNotDraw(boolean,boolean)
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_fontStyle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_SOUND_ERROR_CODE
io.flutter.plugins.firebase.core.R$drawable: int notify_panel_notification_icon_bg
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.content.pm.ApplicationInfo getApplicationInfo()
com.google.firebase.components.Component: java.lang.Object lambda$of$1(java.lang.Object,com.google.firebase.components.ComponentContainer)
io.flutter.plugin.editing.TextEditingDelta: int deltaStart
io.flutter.view.AccessibilityBridge$5: int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.browser.browseractions.BrowserActionsFallbackMenuView
com.google.firebase.installations.interop.R$integer: int google_play_services_version
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_tileMode
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_update_button
io.flutter.plugins.connectivity.R$id
com.google.firebase.datatransport.R$id: int line3
io.flutter.embedding.android.FlutterFragment: void onDetach()
com.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withUnregisteredFid(java.lang.String)
com.google.firebase.datatransport.R$id: int icon_group
com.google.android.gms.internal.measurement.zzeb
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.google.firebase.messaging.RemoteMessage: long getSentTime()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onLowMemory()
io.flutter.embedding.engine.systemchannels.TextInputChannel
com.google.firebase.iid.FirebaseInstanceId$$Lambda$3: java.lang.String arg$3
io.flutter.embedding.engine.renderer.RenderSurface: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.plugins.connectivity.R$attr: int nestedScrollViewStyle
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler
com.google.firebase.messaging.Constants$AnalyticsKeys: java.lang.String MESSAGE_USE_DEVICE_TIME
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_27
io.flutter.plugins.urllauncher.UrlLauncher: boolean canLaunch(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetLeft
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String KEY_FROM
io.flutter.plugins.pathprovider.PathProviderPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.ktx.R$attr: int ttcIndex
com.google.firebase.datatransport.R$styleable: int GradientColor_android_type
com.google.firebase.iid.FirebaseInstanceId$$Lambda$4: java.lang.String arg$4
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager()
org.threeten.bp.YearMonth: java.lang.Object readResolve()
com.google.firebase.installations.interop.R$styleable: R$styleable()
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String CHECKOUT_PROGRESS
io.flutter.embedding.engine.loader.ResourceExtractor$1: ResourceExtractor$1()
io.flutter.plugins.sharedpreferences.R$id: int actions
io.flutter.plugin.editing.TextEditingDelta: int newSelectionStart
io.flutter.embedding.engine.loader.FlutterLoader$1: android.content.Context val$appContext
com.google.firebase.datatransport.R$styleable: int ColorStateListItem_android_alpha
io.flutter.embedding.android.FlutterFragment: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AOT_VMSERVICE_SHARED_LIBRARY_NAME
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String PARAM_TTL
com.google.firebase.analytics.ktx.AnalyticsKt: com.google.firebase.analytics.FirebaseAnalytics zza
com.google.firebase.installations.interop.R$styleable: int FontFamilyFont_android_font
com.google.firebase.messaging.TopicOperation: java.lang.String getTopic()
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_centerY
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.components.ComponentRegistrar)
io.flutter.plugin.platform.PlatformViewsController$1: void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.internal.measurement.zzbr zza(com.google.firebase.analytics.FirebaseAnalytics)
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onCanLaunch(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_21
com.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task deleteToken(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind
io.flutter.plugins.urllauncher.R$layout: int notification_template_part_chronometer
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: DeferredComponentChannel$1(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
com.google.firebase.components.ComponentRuntime$$Lambda$3: com.google.firebase.components.OptionalProvider arg$1
com.google.firebase.analytics.FirebaseAnalytics: void setConsent(java.util.Map)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
com.google.firebase.messaging.TopicsSubscriber: void scheduleSyncTaskWithDelaySeconds(java.lang.Runnable,long)
io.flutter.embedding.android.FlutterView: boolean access$102(io.flutter.embedding.android.FlutterView,boolean)
com.google.firebase.installations.Utils: com.google.firebase.installations.Utils singleton
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onNewIntent(android.content.Intent)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRefreshToken(java.lang.String)
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onNewIntentListeners
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.RenderMode getRenderMode()
io.flutter.view.FlutterView$1: FlutterView$1(io.flutter.view.FlutterView)
com.google.firebase.iid.FirebaseInstanceId: void syncWithDelaySecondsInternal(long)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.flutter.plugins.pathprovider.R$layout: int notification_template_part_time
com.google.firebase.analytics.connector.internal.zza: void zzc()
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViews
io.flutter.plugin.common.MethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
com.google.firebase.messaging.RemoteMessage: java.lang.String getTo()
io.flutter.embedding.android.FlutterImageView: void pause()
io.flutter.plugins.connectivity.ConnectivityPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
com.google.firebase.datatransport.R$dimen: int notification_action_text_size
com.google.firebase.iid.WithinAppServiceConnection$BindRequest$$Lambda$1
io.flutter.app.FlutterActivityDelegate: android.view.View launchView
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: FlutterFragment$NewEngineFragmentBuilder(java.lang.Class)
com.google.firebase.messaging.RemoteMessage: android.content.Intent toIntent()
com.google.firebase.ktx.R$styleable: int GradientColor_android_startColor
com.google.firebase.installations.R$drawable: int notification_template_icon_low_bg
io.flutter.embedding.android.FlutterFragment: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.installations.R$dimen: int notification_big_circle_margin
io.flutter.plugins.connectivity.R$styleable: R$styleable()
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_icon_light
com.google.firebase.heartbeatinfo.AutoValue_SdkHeartBeatResult: java.lang.String sdkName
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentRegistrar instantiate(java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_fontStyle
io.flutter.plugins.urllauncher.R$attr: int fontProviderPackage
io.flutter.plugins.firebase.core.R$id: int notification_main_column
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: float[] radiis
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.StyleInformation styleInformation
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.google.firebase.iid.FcmBroadcastProcessor: com.google.android.gms.tasks.Task process(android.content.Intent)
io.flutter.plugins.firebase.core.R$styleable: int GradientColor_android_startY
com.google.firebase.installations.remote.RequestLimiter: boolean isRetryableError(int)
io.flutter.plugins.urllauncher.R$dimen: int compat_button_inset_vertical_material
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
io.flutter.plugins.connectivity.R$id: int tag_transition_group
com.google.firebase.installations.interop.R$drawable: int notification_bg_normal_pressed
io.flutter.plugin.editing.TextInputPlugin: void didChangeEditingState(boolean,boolean,boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_WHEN
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence access$900(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRoute(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
com.google.firebase.messaging.Constants$ScionAnalytics$MessageType
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider getProvider(java.lang.Class)
com.google.firebase.emulators.EmulatedServiceSettings: java.lang.String host
io.flutter.embedding.android.FlutterFragmentActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStart()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_METHOD
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel access$1400(io.flutter.plugin.platform.PlatformViewsController)
androidx.media.AudioAttributesImplApi26Parcelizer
com.google.android.gms.internal.measurement.zzds: int zze
io.flutter.plugins.sharedpreferences.R$drawable: int notification_action_background
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String getLogTag()
io.flutter.embedding.engine.FlutterShellArgs: void add(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.app.Activity getAppComponent()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_18
com.google.firebase.encoders.json.JsonDataEncoderBuilder: void lambda$static$2(java.lang.Boolean,com.google.firebase.encoders.ValueEncoderContext)
io.flutter.view.FlutterView$2: FlutterView$2(io.flutter.view.FlutterView)
com.google.firebase.installations.R$id: int text
com.google.firebase.datatransport.BuildConfig: java.lang.String APPLICATION_ID
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory
com.google.firebase.installations.FirebaseInstallations: java.util.concurrent.ExecutorService networkExecutor
com.google.firebase.installations.R$id: int title
com.google.firebase.analytics.connector.AnalyticsConnectorImpl$1: void registerEventNames(java.util.Set)
io.flutter.plugin.platform.PlatformViewRegistryImpl: PlatformViewRegistryImpl()
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ContentUri
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void sendLocales(java.util.List)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject)
com.google.firebase.analytics.connector.zza: void execute(java.lang.Runnable)
com.google.firebase.messaging.SharedPreferencesQueue: SharedPreferencesQueue(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)
com.google.firebase.analytics.ktx.ConsentBuilder: void setAdStorage(com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus)
io.flutter.plugins.urllauncher.R$layout: int custom_dialog
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setApplicationId(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void send(int)
com.google.android.gms.internal.measurement.zzcx: boolean zzh
com.google.firebase.installations.R$color: int notification_action_color_filter
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String CHANNEL_NAME
io.flutter.app.FlutterActivityDelegate$1: void onFirstFrame()
io.flutter.embedding.android.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
com.google.firebase.ktx.R$dimen: int notification_main_column_padding_top
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel()
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String getRefreshToken()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate access$800(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.connectivity.R$dimen: int notification_action_icon_size
com.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$0$FirebaseInstanceId(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void onMoveToForeground()
io.flutter.plugins.firebase.core.R$integer
androidx.fragment.app.Fragment: void postponeEnterTransition()
io.flutter.plugins.sharedpreferences.R$attr: int alpha
com.google.firebase.installations.FirebaseInstallations$$Lambda$4: com.google.firebase.installations.FirebaseInstallations arg$1
com.google.firebase.heartbeatinfo.AutoValue_SdkHeartBeatResult: int hashCode()
io.flutter.plugins.pathprovider.R$attr: int nestedScrollViewStyle
com.google.firebase.installations.R$attr: int ttcIndex
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
io.flutter.plugin.editing.TextInputPlugin: boolean mRestartInputPending
com.google.firebase.ktx.R$drawable: R$drawable()
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int NONE
com.google.firebase.FirebaseApp: void removeBackgroundStateChangeListener(com.google.firebase.FirebaseApp$BackgroundStateChangeListener)
io.flutter.embedding.engine.FlutterEngine: java.lang.String TAG
io.flutter.view.FlutterView$ViewportMetrics: int physicalWidth
com.google.firebase.iid.Store$Token: com.google.firebase.iid.Store$Token parse(java.lang.String)
com.google.firebase.installations.interop.R$dimen: int notification_main_column_padding_top
io.flutter.plugins.firebase.messaging.R$drawable: int notification_bg_normal_pressed
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String PLUGINS_RESTORATION_BUNDLE_KEY
io.flutter.view.FlutterView$1: io.flutter.view.FlutterView this$0
io.flutter.plugin.editing.TextInputPlugin: boolean isInputConnectionLocked
com.google.firebase.encoders.FieldDescriptor: FieldDescriptor(java.lang.String,java.util.Map)
io.flutter.app.FlutterActivity: java.lang.String TAG
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String SHIPPING_TIER
io.flutter.view.FlutterView: void postRun()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: android.content.ContentProvider getContentProvider()
io.flutter.plugins.connectivity.R$id: int italic
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
com.google.firebase.FirebaseCommonRegistrar: java.lang.String ANDROID_PLATFORM
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging$AutoInit autoInit
io.flutter.plugin.common.BinaryMessenger$BinaryReply
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task lambda$unsubscribeFromTopic$5$FirebaseMessaging(java.lang.String,com.google.firebase.messaging.TopicsSubscriber)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String EXTRA_TOKEN
com.google.firebase.FirebaseApp: com.google.firebase.internal.DataCollectionConfigStorage lambda$new$0(com.google.firebase.FirebaseApp,android.content.Context)
io.flutter.app.FlutterActivityEvents: void onStop()
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_19
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String refreshToken
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.editing.ListenableEditingState: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: android.content.Context context()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_startColor
com.google.firebase.installations.BuildConfig: BuildConfig()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel channel
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
com.google.android.gms.internal.measurement.zzck: int zze
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,long)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl handler
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.flutter.plugin.common.MethodChannel$IncomingResultHandler
org.threeten.bp.OffsetTime: java.lang.Object writeReplace()
io.flutter.app.FlutterActivityDelegate: FlutterActivityDelegate(android.app.Activity,io.flutter.app.FlutterActivityDelegate$ViewFactory)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.google.firebase.messaging.FirebaseMessagingService: java.lang.String getMessageId(android.content.Intent)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String QUANTITY
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugins.pathprovider.R$color: int androidx_core_ripple_material_light
com.google.firebase.messaging.RemoteMessage$Notification: long[] vibrateTimings
com.google.firebase.installations.time.SystemClock: long currentTimeMillis()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: RestorationChannel$1(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_font
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: boolean onPreDraw()
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener: void onFlutterUiNoLongerDisplayed()
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String END_DATE
io.flutter.plugin.common.FlutterException: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.embedding.engine.dart.DartExecutor: void onAttachedToJNI()
com.google.firebase.FirebaseAppLifecycleListener: void onDeleted(java.lang.String,com.google.firebase.FirebaseOptions)
com.google.firebase.FirebaseOptions: java.lang.String access$600(com.google.firebase.FirebaseOptions)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.BitmapSource largeIconBitmapSource
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String NAME
com.google.firebase.installations.CrossProcessLock: java.nio.channels.FileLock lock
io.flutter.embedding.android.FlutterTextureView: void changeSurfaceSize(int,int)
io.flutter.embedding.android.FlutterImageView: void init()
com.google.firebase.installations.AutoValue_InstallationTokenResult: int hashCode()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int getVirtualNodeId(long)
io.flutter.plugins.firebase.messaging.R$id: int tag_transition_group
com.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.firebase.R$attr: int font
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: java.lang.String encodedName
com.google.firebase.installations.interop.R$id: int right_icon
com.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task unsubscribeFromTopic(java.lang.String)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationStart(android.animation.Animator)
io.flutter.plugins.sharedpreferences.R$dimen
com.google.android.gms.common.zzn: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: VirtualDisplayController$OneTimeOnDrawListener$1(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: void encode(java.util.Date,com.google.firebase.encoders.ValueEncoderContext)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.FirebaseError: int ERROR_PROVIDER_ALREADY_LINKED
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
io.flutter.plugins.firebase.core.R$styleable: R$styleable()
io.flutter.plugin.platform.VirtualDisplayController
com.google.firebase.iid.FirebaseInstanceIdReceiver: int onMessageReceive(android.content.Context,com.google.android.gms.cloudmessaging.CloudMessage)
com.google.firebase.messaging.RemoteMessage$1
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: java.util.concurrent.atomic.AtomicBoolean hasEnded
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String DESCRIPTION
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel()
com.google.firebase.firebase_analytics.R: R()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.installations.local.PersistedInstallationEntry
com.google.android.gms.cloudmessaging.zza: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledColor
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $VALUES
com.google.firebase.components.CycleDetector$ComponentNode: com.google.firebase.components.Component component
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ID
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: BigPictureStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource,java.lang.Boolean)
com.google.firebase.inject.Provider
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
io.flutter.Log: int DEBUG
com.google.firebase.iid.GmsRpc: com.google.firebase.inject.Provider heartbeatInfo
io.flutter.embedding.engine.renderer.FlutterRenderer: android.view.Surface surface
io.flutter.view.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
io.flutter.plugins.firebase.messaging.BuildConfig: java.lang.String LIBRARY_NAME
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: JsonValueObjectEncoderContext(java.io.Writer,java.util.Map,java.util.Map,com.google.firebase.encoders.ObjectEncoder,boolean)
io.flutter.plugins.pathprovider.R$id: int tag_on_receive_content_listener
com.google.firebase.installations.R$styleable: R$styleable()
com.google.firebase.messaging.CommonNotificationBuilder: android.app.PendingIntent createMessagingPendingIntent(android.content.Context,android.content.Intent)
com.google.firebase.analytics.connector.internal.zze: com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener zzb
com.google.firebase.components.OptionalProvider$$Lambda$5: OptionalProvider$$Lambda$5()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_MESSAGE
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.firebase.iid.FirebaseInstanceId$$Lambda$3: com.google.android.gms.tasks.Task start()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_BLUE
com.google.firebase.ktx.FirebaseKt: com.google.firebase.FirebaseApp getApp(com.google.firebase.ktx.Firebase)
io.flutter.plugins.urllauncher.WebViewActivity$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
io.flutter.embedding.android.SplashScreenProvider: io.flutter.embedding.android.SplashScreen provideSplashScreen()
com.google.firebase.installations.FirebaseInstallations: void lambda$doRegistrationOrRefresh$2(com.google.firebase.installations.FirebaseInstallations,boolean)
io.flutter.embedding.android.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.google.firebase.installations.remote.AutoValue_TokenResult: int hashCode()
io.flutter.plugins.firebase.messaging.R$attr: int imageAspectRatioAdjust
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_URI
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_PURGE_PERSISTENT_CACHE
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection LTR
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_26
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: java.lang.String TAG
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String MEDIUM
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DECREASE
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
io.flutter.plugin.mouse.MouseCursorPlugin$1: io.flutter.plugin.mouse.MouseCursorPlugin this$0
io.flutter.app.FlutterActivityDelegate: boolean isDebuggable()
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: VirtualDisplayController$OneTimeOnDrawListener(android.view.View,java.lang.Runnable)
io.flutter.plugins.urllauncher.R$drawable: int notify_panel_notification_icon_bg
com.google.firebase.FirebaseCommonRegistrar: java.lang.String DEVICE_BRAND
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: int color
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.android.FlutterView this$0
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource[] values()
com.google.firebase.installations.interop.R$styleable: int GradientColor_android_centerColor
io.flutter.plugins.firebase.core.R$layout: int notification_template_part_chronometer
io.flutter.plugins.firebase.core.R$id: int right_icon
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.firebase.datatransport.R$style
com.google.firebase.components.ComponentRuntime$$Lambda$1
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: SingleViewPresentation$PresentationState()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate shimRegistrarAggregate
io.flutter.plugins.firebase.core.R$dimen: int notification_action_text_size
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
com.google.firebase.components.CycleDetector$Dep: java.lang.Class anInterface
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: DateTimeComponents(java.lang.String,int)
io.flutter.plugins.connectivity.R$attr: int fontWeight
com.google.firebase.installations.remote.InstallationResponse: InstallationResponse()
com.google.firebase.datatransport.R$dimen: int notification_small_icon_background_padding
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection lastInputConnection
com.google.firebase.components.Preconditions: void checkState(boolean,java.lang.String)
io.flutter.plugins.sharedpreferences.R$string: int status_bar_notification_info_overflow
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String TAG
io.flutter.plugins.sharedpreferences.R$id: int tag_window_insets_animation_callback
com.google.firebase.encoders.json.JsonDataEncoderBuilder$1: com.google.firebase.encoders.json.JsonDataEncoderBuilder this$0
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $VALUES
io.flutter.app.FlutterActivity: void onUserLeaveHint()
io.flutter.plugins.firebase.core.R$id: int dialog_button
androidx.core.app.JobIntentService: void setInterruptIfStopped(boolean)
io.flutter.plugin.platform.PlatformViewsController$1$1: void run()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: AccessibilityBridge$AccessibilityFeature(java.lang.String,int,int)
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatSummaryText
org.threeten.bp.Month: org.threeten.bp.Month valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin$3
io.flutter.plugins.pathprovider.R$dimen: int notification_media_narrow_margin
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.BitmapSource bigPictureBitmapSource
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInTraversalOrder
com.google.firebase.iid.Metadata: int gmsVersionCode
com.google.firebase.iid.GmsRpc
io.flutter.view.AccessibilityBridge$SemanticsNode
io.flutter.embedding.engine.loader.ResourceExtractor: android.content.res.AssetManager mAssetManager
com.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])
com.google.android.gms.internal.measurement.zzdj: java.lang.String zzo
io.flutter.app.FlutterActivityDelegate$ViewFactory: io.flutter.view.FlutterNativeView createFlutterNativeView()
com.google.firebase.messaging.FirebaseMessaging$$Lambda$3: FirebaseMessaging$$Lambda$3(com.google.firebase.messaging.FirebaseMessaging,com.google.android.gms.tasks.TaskCompletionSource)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
io.flutter.plugins.connectivity.BuildConfig
com.google.firebase.components.ComponentDiscovery$$Lambda$1
io.flutter.embedding.android.FlutterFragment$1: void handleOnBackPressed()
io.flutter.plugins.urllauncher.R$id: int notification_background
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.remote.FirebaseInstallationServiceClient serviceClient
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String body
io.flutter.plugins.pathprovider.R$styleable: int[] GradientColor
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState
io.flutter.plugins.firebase.core.R$style: int TextAppearance_Compat_Notification_Title
com.google.firebase.installations.FirebaseInstallations$$Lambda$4: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations,boolean)
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.FragmentActivity: int mNextCandidateRequestIndex
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode opaque
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String RESERVED_PREFIX
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
io.flutter.plugins.sharedpreferences.R$dimen: int compat_control_corner_material
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_gradientRadius
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String TAG
io.flutter.plugins.connectivity.R$styleable: int FontFamilyFont_android_ttcIndex
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
io.flutter.plugins.connectivity.ConnectivityBroadcastReceiver: io.flutter.plugins.connectivity.Connectivity connectivity
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_ALPHA
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction CreateIfNotExists
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray loadingUnitIdToComponentNames
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
io.flutter.plugin.platform.PlatformPlugin$1: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.view.FlutterView$ViewportMetrics: int systemGestureInsetTop
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMax
io.flutter.embedding.android.KeyboardManager: void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
com.google.firebase.components.Component: java.lang.Object lambda$of$0(java.lang.Object,com.google.firebase.components.ComponentContainer)
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int SCROLL
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void loadAssets(int,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] getRestorationData()
io.flutter.embedding.android.FlutterActivity: void onPostResume()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String actionLabel
org.threeten.bp.MonthDay: java.lang.Object readResolve()
io.flutter.plugins.urllauncher.UrlLauncher: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus launch(java.lang.String,android.os.Bundle,boolean,boolean,boolean)
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat NONE
io.flutter.view.FlutterNativeView: void send(java.lang.String,java.nio.ByteBuffer)
com.google.firebase.iid.Registrar: java.util.List getComponents()
org.threeten.bp.chrono.MinguoEra: java.lang.Object writeReplace()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: java.lang.Object getSystemService(java.lang.String)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
com.google.firebase.components.Dependency: boolean isRequired()
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_ATTACH_ENGINE_TO_ACTIVITY
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
com.google.android.gms.internal.measurement.zzdu: java.lang.String zzf
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.flutter.plugins.pathprovider.PathProviderPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.messaging.ImageDownload: com.google.android.gms.tasks.Task getTask()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type
com.google.firebase.installations.interop.R$attr: int fontWeight
com.google.android.gms.internal.measurement.zzcd: java.lang.String zzi
io.flutter.embedding.android.FlutterPlayStoreSplitApplication
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String getUri()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.firebase.messaging.MessagingAnalytics: MessagingAnalytics()
com.google.firebase.ktx.R$dimen: int compat_notification_large_icon_max_height
com.google.firebase.BuildConfig: java.lang.String APPLICATION_ID
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: io.flutter.plugins.urllauncher.WebViewActivity this$0
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar
com.google.firebase.installations.interop.R$styleable: int ColorStateListItem_android_alpha
io.flutter.view.AccessibilityBridge$4: void onTouchExplorationStateChanged(boolean)
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] $VALUES
com.google.firebase.iid.FirebaseIidExecutors$$Lambda$0: void execute(java.lang.Runnable)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.firebase.iid.WithinAppServiceConnection$BindRequest$$Lambda$0: com.google.firebase.iid.WithinAppServiceConnection$BindRequest arg$1
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type
io.flutter.embedding.android.FlutterSurfaceView: boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean)
io.flutter.plugins.connectivity.R$id: int accessibility_custom_action_28
com.google.firebase.R$styleable: int FontFamilyFont_android_font
com.google.firebase.datatransport.R$drawable: int notification_template_icon_low_bg
com.google.firebase.messaging.FirebaseMessaging$AutoInit$$Lambda$0: com.google.firebase.messaging.FirebaseMessaging$AutoInit arg$1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHORTCUT_ID
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(byte[])
com.google.firebase.ktx.R$layout
io.flutter.embedding.engine.FlutterEngineConnectionRegistry
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Path path
com.google.firebase.messaging.RemoteMessage$Notification: boolean defaultLightSettings
com.google.firebase.installations.AwaitListener: void onSuccess()
io.flutter.plugin.common.BasicMessageChannel
io.flutter.plugin.common.StandardMessageCodec: byte INT
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4402(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
com.google.firebase.iid.WithinAppServiceConnection: android.content.Context context
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String NOTIFICATION_PRIORITY
io.flutter.view.FlutterView$2: void surfaceCreated(android.view.SurfaceHolder)
io.flutter.embedding.engine.renderer.RenderSurface: void detachFromRenderer()
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_text_light_focused
com.google.firebase.messaging.EnhancedIntentService$1
com.google.firebase.messaging.ImageDownload: void start(java.util.concurrent.Executor)
com.google.android.gms.internal.measurement.zzds: int zza
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task setAutomaticDataCollectionEnabled(java.util.Map)
com.google.firebase.R$attr: int fontProviderFetchTimeout
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
com.google.firebase.messaging.Constants$FirelogAnalytics: java.lang.String FCM_LOG_SOURCE
io.flutter.plugins.firebase.messaging.R$styleable: int[] GradientColorItem
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
com.google.firebase.ktx.R$styleable: int[] FontFamilyFont
io.flutter.plugins.urllauncher.R$id: int dialog_button
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,long)
com.google.firebase.encoders.json.BuildConfig
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_ALERT_BEHAVIOR
com.google.firebase.installations.FirebaseInstallations: int CORE_POOL_SIZE
io.flutter.plugins.urllauncher.UrlLauncher: UrlLauncher(android.content.Context,android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String color
com.google.firebase.components.ComponentRuntime
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationRepeat(android.animation.Animator)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
com.google.firebase.ktx.R$styleable: int FontFamily_fontProviderFetchTimeout
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_font
com.google.firebase.installations.R$layout: int notification_action
com.google.firebase.iid.FirebaseInstanceId$$Lambda$0: java.lang.String arg$3
com.google.firebase.installations.Utils: java.util.regex.Pattern API_KEY_FORMAT
io.flutter.plugins.sharedpreferences.R$id: int chronometer
io.flutter.plugin.localization.LocalizationPlugin$1: java.lang.String getStringResource(java.lang.String,java.lang.String)
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: long triggeredTimestamp
com.google.firebase.datatransport.R$styleable: int[] GradientColor
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: android.app.Activity mainActivity
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: io.flutter.embedding.engine.systemchannels.PlatformChannel this$0
com.google.firebase.messaging.RemoteMessageCreator: int CONTENT_DESCRIPTION
com.google.firebase.ktx.R$styleable: int FontFamilyFont_android_fontVariationSettings
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.pathprovider.R$dimen: int notification_small_icon_size_as_large
com.google.firebase.installations.remote.InstallationResponse$ResponseCode
com.google.firebase.R$id: int none
com.google.firebase.installations.R$styleable: int FontFamily_fontProviderFetchStrategy
io.flutter.plugins.sharedpreferences.R$color: R$color()
io.flutter.plugin.common.MethodChannel$Result
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingRegion(int,int)
io.flutter.plugin.common.EventChannel: java.lang.String name
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_TAG
com.google.firebase.components.ComponentRuntime: java.util.Set setOf(java.lang.Class)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: java.lang.String TAG
io.flutter.plugin.editing.TextEditingDelta: int newComposingStart
io.flutter.plugins.urllauncher.R$dimen
io.flutter.plugins.firebase.messaging.R$id: int chronometer
com.google.firebase.installations.interop.R$layout: int notification_template_part_time
com.google.firebase.iid.Store: long writeCreationTimeToSharedPreferences(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: java.lang.String text
io.flutter.embedding.engine.FlutterEngine: java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onActivityResult(int,int,android.content.Intent)
androidx.lifecycle.SingleGeneratedAdapterObserver
io.flutter.view.AccessibilityBridge: void sendLatestAccessibilityFlagsToFlutter()
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.FlutterJNI mFlutterJNI
com.google.firebase.installations.R$layout: int notification_template_part_chronometer
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_text_light
com.google.firebase.components.BuildConfig: java.lang.String VERSION_NAME
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$1: JsonDataEncoderBuilder$$Lambda$1()
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.google.firebase.ktx.R$styleable: int FontFamily_fontProviderQuery
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
io.flutter.view.FlutterNativeView: void detachFromFlutterView()
com.google.firebase.installations.remote.AutoValue_TokenResult: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
com.google.firebase.iid.RequestDeduplicator$GetTokenRequest: com.google.android.gms.tasks.Task start()
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener: void onFlutterUiDisplayed()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler
com.google.firebase.ktx.R$id: int tag_unhandled_key_listeners
com.google.firebase.analytics.ktx.ParametersBuilder: void param(java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onLaunch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
io.flutter.plugin.editing.ListenableEditingState: void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
com.google.firebase.components.ComponentRuntime$$Lambda$1: ComponentRuntime$$Lambda$1(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor flutterBackgroundExecutor
io.flutter.plugins.connectivity.R$style: int Widget_Compat_NotificationActionText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String WHEN
com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzjx zzc
com.google.firebase.installations.RandomFidGenerator: byte FID_4BIT_PREFIX
com.google.firebase.messaging.FirebaseMessaging: java.lang.String INSTANCE_ID_SCOPE
com.google.firebase.ktx.R$id: int line3
io.flutter.view.FlutterCallbackInformation
io.flutter.plugins.urllauncher.R$id: int tag_accessibility_clickable_spans
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
io.flutter.plugins.connectivity.R$id: int actions
com.google.android.gms.internal.measurement.zzhp
io.flutter.embedding.engine.systemchannels.TextInputChannel: void previous(int)
androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle[] values()
androidx.fragment.app.FragmentActivity: java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
io.flutter.embedding.android.AndroidTouchProcessor: int POINTER_DATA_FIELD_COUNT
com.google.android.gms.internal.measurement.zzdj: int zzI
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_normal
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler
com.google.firebase.provider.FirebaseInitProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
io.flutter.plugins.firebase.messaging.R$id: int accessibility_custom_action_3
io.flutter.view.AccessibilityBridge: int ROOT_NODE_ID
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_8
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRestoreInstanceState(android.os.Bundle)
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$3: DefaultHeartBeatInfo$$Lambda$3(com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo,java.lang.String)
com.google.firebase.platforminfo.KotlinDetector: java.lang.String detectVersion()
com.google.firebase.components.ComponentRuntime: java.util.List processInstanceComponents(java.util.List)
com.google.firebase.encoders.FieldDescriptor: boolean equals(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
io.flutter.embedding.android.FlutterView: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.firebase.platforminfo.KotlinDetector
com.google.firebase.ktx.R$id: int action_divider
com.google.firebase.iid.FirebaseInstanceId$$Lambda$3: java.lang.String arg$2
io.flutter.app.FlutterActivity: void onBackPressed()
io.flutter.app.FlutterPluginRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.firebase.components.ComponentRuntime$Builder
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String SCORE
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_27
io.flutter.plugin.common.BinaryCodec: BinaryCodec()
io.flutter.plugins.sharedpreferences.R$color: int androidx_core_ripple_material_light
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.pathprovider.R$dimen: int compat_button_padding_vertical_material
com.google.firebase.installations.interop.R$id: int actions
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.media.AudioAttributesImpl
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
com.google.firebase.datatransport.R$styleable: R$styleable()
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance(com.google.firebase.FirebaseApp)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTERVIEW_RENDER_MODE
com.google.firebase.heartbeatinfo.HeartBeatResult
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding(android.app.Service,androidx.lifecycle.Lifecycle)
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzs,long)
io.flutter.plugin.common.ActivityLifecycleListener
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
com.google.firebase.analytics.connector.internal.zze: com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener zzd(com.google.firebase.analytics.connector.internal.zze)
io.flutter.plugin.platform.PlatformViewsController$1$1: PlatformViewsController$1$1(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,java.lang.Runnable)
io.flutter.plugins.firebase.messaging.R$string: int common_google_play_services_enable_text
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: PathProviderPlugin$UiThreadExecutor()
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.google.firebase.analytics.ktx.ParametersBuilder: ParametersBuilder()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
io.flutter.embedding.android.FlutterFragment: java.lang.String getDartEntrypointFunctionName()
io.flutter.plugin.common.BinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
com.google.firebase.FirebaseExceptionMapper: FirebaseExceptionMapper()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NAME
io.flutter.plugin.mouse.MouseCursorPlugin$2: io.flutter.plugin.mouse.MouseCursorPlugin this$0
io.flutter.plugins.firebase.core.R$attr: int fontVariationSettings
io.flutter.plugins.connectivity.R$id: int accessibility_action_clickable_span
io.flutter.embedding.android.DrawableSplashScreen: io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView splashView
com.google.firebase.installations.FirebaseInstallations: java.util.concurrent.ExecutorService backgroundExecutor
com.google.firebase.installations.R$layout: int notification_template_icon_group
io.flutter.plugins.sharedpreferences.BuildConfig: BuildConfig()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_VERBOSE_LOGGING
io.flutter.plugins.firebase.core.R$drawable: int notification_bg
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_CACHED_ENGINE_ID
com.google.firebase.iid.FirebaseInstanceId$$Lambda$4: java.lang.String arg$3
com.google.firebase.ktx.R$styleable: int FontFamily_fontProviderCerts
io.flutter.plugins.firebase.core.R$styleable: int FontFamilyFont_android_font
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int buttonState
com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,long)
com.google.firebase.encoders.json.BuildConfig: BuildConfig()
com.google.firebase.ktx.R$id: int italic
com.google.android.gms.internal.measurement.zzdd: int zza
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.analytics.FirebaseAnalytics$Param: java.lang.String SOURCE
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel$Result callback
io.flutter.app.FlutterFragmentActivity: io.flutter.view.FlutterView$Provider viewProvider
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: com.google.firebase.iid.SyncTask task
com.google.firebase.messaging.RemoteMessage: java.util.Map data
org.threeten.bp.ZonedDateTime: java.lang.Object readResolve()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.google.android.gms.measurement.AppMeasurement
com.google.firebase.messaging.TopicOperation: boolean equals(java.lang.Object)
com.google.firebase.iid.SyncTask: long nextDelaySeconds
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String FCM_FALLBACK_NOTIFICATION_CHANNEL_LABEL
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill
io.flutter.plugins.firebase.messaging.R$style: int TextAppearance_Compat_Notification_Title
com.google.firebase.iid.Registrar$FIIDInternalAdapter
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToActivity()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
com.google.firebase.messaging.MessagingAnalytics$$Lambda$0
androidx.core.app.CoreComponentFactory
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$5: void encode(java.lang.Object,java.lang.Object)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.embedding.engine.dart.DartMessenger messenger
com.google.firebase.messaging.NotificationParams: java.lang.String normalizePrefix(java.lang.String)
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int DOWN
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.BinaryMessenger messenger()
com.google.firebase.installations.interop.R$styleable: int FontFamily_fontProviderSystemFontFamily
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_11
com.google.firebase.datatransport.R$styleable: int FontFamilyFont_android_ttcIndex
io.flutter.embedding.engine.renderer.FlutterRenderer: void stopRenderingToSurface()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType getType()
io.flutter.plugins.connectivity.R
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification_Line2
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ObjectEncoder fallbackEncoder
com.google.firebase.encoders.config.Configurator
com.google.firebase.iid.SyncTask: com.google.firebase.iid.FirebaseInstanceId iid
com.google.firebase.iid.ServiceStarter: ServiceStarter()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest)
io.flutter.plugins.firebase.core.R$id: int accessibility_action_clickable_span
io.flutter.embedding.engine.loader.FlutterApplicationInfo: FlutterApplicationInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String hintText
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.nio.charset.Charset UTF_8
io.flutter.plugins.connectivity.R$dimen
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: long access$000(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void success(java.lang.Object)
io.flutter.view.AccessibilityBridge: android.database.ContentObserver animationScaleObserver
com.google.firebase.messaging.RemoteMessage: int getPriority()
com.google.firebase.installations.remote.TokenResult$ResponseCode: TokenResult$ResponseCode(java.lang.String,int)
com.google.firebase.datatransport.R$id: int blocking
com.google.firebase.components.Dependency
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
io.flutter.plugin.common.JSONUtil
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry getTextureRegistry()
io.flutter.plugin.platform.PlatformViewsController: void onDisplayOverlaySurface(int,int,int,int,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean indeterminate
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
io.flutter.embedding.android.FlutterView: void onSizeChanged(int,int,int,int)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply)
androidx.fragment.app.Fragment: void noteStateNotSaved()
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task unsubscribeFromTopic(java.lang.String)
io.flutter.plugins.firebase.messaging.R$string
io.flutter.plugin.common.StandardMessageCodec: byte MAP
io.flutter.view.AccessibilityBridge$5
com.google.firebase.messaging.FirebaseMessaging: void setAutoInitEnabled(boolean)
com.google.firebase.datatransport.R$drawable
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long calledAt
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void hide()
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
com.google.firebase.iid.Registrar$FIIDInternalAdapter: com.google.firebase.iid.FirebaseInstanceId fiid
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_gradientRadius
io.flutter.embedding.engine.dart.DartMessenger$Reply: int replyId
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer minute
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT
io.flutter.plugin.editing.FlutterTextUtils: boolean isKeycapBase(int)
io.flutter.plugin.common.EventChannel: void setStreamHandler(io.flutter.plugin.common.EventChannel$StreamHandler)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getAppBundlePath()
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setGaTrackingId(java.lang.String)
com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor
io.flutter.plugins.connectivity.ConnectivityMethodChannelHandler: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.installations.StateListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.core.R$id: int accessibility_custom_action_18
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.firebase.installations.interop.R$dimen: int compat_notification_large_icon_max_width
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: boolean validate()
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int REMOVE
com.google.firebase.components.Lazy: Lazy(com.google.firebase.inject.Provider)
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String NOTIFICATION_PREFIX
com.google.firebase.R$layout: int notification_action_tombstone
io.flutter.plugins.sharedpreferences.R$dimen: int compat_button_padding_horizontal_material
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDetach()
com.google.android.gms.internal.measurement.zzcn: boolean zzg
com.google.firebase.installations.FirebaseInstallations: void insertOrUpdatePrefs(com.google.firebase.installations.local.PersistedInstallationEntry)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$1
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_TEXT
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void loadDartLibrary(int,java.lang.String)
com.google.firebase.installations.interop.BuildConfig
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentRegistrar lambda$discoverLazy$0(java.lang.String)
com.google.firebase.ktx.R$layout: int notification_action
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1
io.flutter.plugins.firebase.messaging.R$color: int common_google_signin_btn_text_light
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_CODE
io.flutter.plugins.firebase.messaging.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.firebase.installations.FirebaseInstallations$$Lambda$3
com.google.firebase.installations.time.SystemClock: SystemClock()
org.threeten.bp.Duration
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.internal.FidListenerHandle registerFidListener(com.google.firebase.installations.internal.FidListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_CODE
io.flutter.plugins.pathprovider.R$color
io.flutter.view.AccessibilityBridge: void access$1200(io.flutter.view.AccessibilityBridge)
io.flutter.plugins.urllauncher.R$id: R$id()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setLights(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map contentProviderAwarePlugins
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: java.util.HashMap consumedInitialMessages
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
io.flutter.plugins.connectivity.R$style
androidx.core.app.JobIntentService: boolean onStopCurrentWork()
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventWrapperEncoder
com.google.firebase.installations.R$dimen: int compat_notification_large_icon_max_height
io.flutter.plugins.pathprovider.StorageDirectoryMapper: java.lang.String androidType(java.lang.Integer)
com.google.firebase.messaging.NotificationParams: java.lang.Integer getInteger(java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.google.firebase.messaging.RemoteMessage$Builder
com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzhz zzf
com.google.firebase.iid.RequestDeduplicator$$Lambda$0
io.flutter.view.AccessibilityBridge$1: void onLongPress(int)
com.google.firebase.messaging.BuildConfig: BuildConfig()
com.google.firebase.datatransport.R$drawable: int notify_panel_notification_icon_bg
com.google.firebase.R$id: int forever
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.plugins.firebase.core.R$integer: R$integer()
com.google.firebase.FirebaseError: int ERROR_USER_TOKEN_EXPIRED
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task initializeCore()
com.google.firebase.iid.FirebaseInstanceId: boolean isValidApiKeyFormat(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MATCH_DATE_TIME_COMPONENTS
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.ExecutorService newIntentHandleExecutor()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.models.NotificationDetails extractNotificationDetails(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
com.google.firebase.iid.SyncTask: boolean maybeRefreshToken()
io.flutter.plugin.editing.TextInputPlugin$1: TextInputPlugin$1(io.flutter.plugin.editing.TextInputPlugin)
com.google.firebase.analytics.connector.internal.zzg: com.google.android.gms.measurement.api.AppMeasurementSdk zzb
com.google.firebase.installations.interop.R$attr: int fontProviderPackage
com.google.firebase.datatransport.BuildConfig: boolean DEBUG
com.google.firebase.R$id: int action_divider
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: java.lang.String locale
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: java.util.Set allowedPublishedEvents
com.google.firebase.iid.FirebaseInstanceId: FirebaseInstanceId(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle[] values()
io.flutter.plugins.pathprovider.R$id: int dialog_button
com.google.firebase.messaging.FirelogAnalyticsEvent$FirelogAnalyticsEventWrapperEncoder: FirelogAnalyticsEvent$FirelogAnalyticsEventWrapperEncoder()
com.google.firebase.components.Component$$Lambda$1: Component$$Lambda$1(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: void onNewToken(java.lang.String)
io.flutter.plugins.firebase.core.R$styleable: int ColorStateListItem_android_alpha
com.google.firebase.FirebaseError: int ERROR_WEAK_PASSWORD
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalStorageDirectories(java.lang.String)
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatLines
io.flutter.BuildConfig: boolean PROFILE
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: androidx.lifecycle.Lifecycle getLifecycle()
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
io.flutter.plugins.firebase.core.R$drawable: R$drawable()
com.google.firebase.datatransport.R$drawable: int notification_icon_background
com.google.firebase.components.ComponentRuntime$$Lambda$3: java.lang.Runnable lambdaFactory$(com.google.firebase.components.OptionalProvider,com.google.firebase.inject.Provider)
com.tlt.manager.MainActivity: MainActivity()
io.flutter.plugin.editing.TextInputPlugin: void clearPlatformViewClient(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ACTION
io.flutter.embedding.android.RenderMode
com.google.firebase.messaging.TopicsStore: void initStore()
com.google.firebase.installations.interop.R$dimen: int notification_top_pad_large_text
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
com.google.firebase.messaging.FirebaseMessaging$$Lambda$3
io.flutter.plugin.editing.InputConnectionAdaptor: boolean requestCursorUpdates(int)
io.flutter.plugins.sharedpreferences.R$id: int tag_transition_group
com.google.firebase.events.EventHandler: void handle(com.google.firebase.events.Event)
com.google.firebase.iid.Registrar$$Lambda$1: com.google.firebase.components.ComponentFactory $instance
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String DO_NOT_PROXY
io.flutter.plugins.firebase.core.R$id: int action_text
com.google.firebase.installations.FirebaseInstallations$1: FirebaseInstallations$1()
io.flutter.plugin.platform.PlatformViewsController
io.flutter.plugins.urllauncher.R$integer
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
com.google.firebase.analytics.connector.AnalyticsConnector: void setConditionalUserProperty(com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
io.flutter.plugins.connectivity.R$id: int normal
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class)
com.dexterous.flutterlocalnotifications.RepeatInterval
io.flutter.plugin.common.ErrorLogResult: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.view.VsyncWaiter$1$1: io.flutter.view.VsyncWaiter$1 this$1
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
com.google.firebase.installations.internal.FidListenerHandle: void unregister()
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String SEARCH
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.lang.String SHARED_PREFERENCES_KEY
com.google.firebase.datatransport.R$id: int text
com.google.firebase.analytics.FirebaseAnalytics$Event: java.lang.String SCREEN_VIEW
com.google.firebase.encoders.json.JsonDataEncoderBuilder$$Lambda$1
com.google.firebase.installations.FirebaseInstallations$$Lambda$4: void run()
io.flutter.plugin.editing.TextInputPlugin: void clearTextInputClient()
io.flutter.app.FlutterPluginRegistry: io.flutter.view.FlutterNativeView mNativeView
com.google.firebase.datatransport.R$styleable: int FontFamily_fontProviderFetchTimeout
io.flutter.view.AccessibilityBridge$SemanticsNode: float max(float,float,float,float)
com.google.firebase.installations.interop.R$id: int time
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_endY
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.core.app.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
com.google.firebase.messaging.Constants$MessageNotificationKeys: java.lang.String DEFAULT_LIGHT_SETTINGS
com.google.android.gms.internal.measurement.zzbw: java.lang.String zzf
androidx.fragment.app.FragmentActivity: void onLowMemory()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map serviceAwarePlugins
com.google.firebase.FirebaseApp: com.google.firebase.components.Lazy dataCollectionConfigStorage
org.threeten.bp.ZonedDateTime
com.google.firebase.iid.FirebaseIidExecutors$$Lambda$0
io.flutter.Log: void println(int,java.lang.String,java.lang.String)
com.google.firebase.installations.R$dimen: int notification_action_text_size
io.flutter.plugins.firebase.messaging.R$drawable: int common_google_signin_btn_text_dark_normal
com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzhz zzi
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.FirebaseInstallations getInstance()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromActivity()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1)
com.google.firebase.messaging.RemoteMessage$Notification: int[] lightSettings
com.google.firebase.ktx.R$dimen: int notification_media_narrow_margin
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
com.google.firebase.messaging.Constants$MessagePayloadKeys: java.lang.String COLLAPSE_KEY
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatBigText
io.flutter.plugin.editing.TextInputPlugin$1: void hide()
com.google.firebase.R$dimen: int notification_right_icon_size
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: boolean isCalled
io.flutter.plugins.connectivity.R$id: int right_side
io.flutter.plugins.connectivity.ConnectivityPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugin.editing.TextInputPlugin$2: io.flutter.plugin.editing.TextInputPlugin this$0
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: android.os.Bundle triggeredEventParams
com.google.firebase.installations.AwaitListener: java.util.concurrent.CountDownLatch latch
io.flutter.embedding.android.FlutterActivity: android.view.View createFlutterView()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_15
com.google.firebase.installations.R$dimen: int notification_subtext_size
io.flutter.app.FlutterFragmentActivity: FlutterFragmentActivity()
com.google.firebase.analytics.connector.internal.zzc: boolean zzb(java.lang.String,android.os.Bundle)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationAppLaunchDetails(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.firebase.messaging.R$styleable: int[] SignInButton
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder clearData()
